"title","url","state","created","updated","closed","comments","body","author","days_open","days_no_activity"
"How to get invited to the openpharma.slack.com channel ? ","https://github.com/openpharma/openpharma.github.io/issues/1","open",2017-07-21,2017-07-21,NA,0,"","DianeBeldame",1431,1431
"Learn from R package `flextable` and other table packages","https://github.com/Roche/rtables/issues/1","closed",2018-01-11,2021-04-26,2021-04-26,7,"For ideas and inspirations, you may consider the R package `flextable`. I just found it and drop it here for reference

browsing how they do things may inspire your solutions and/or implementations.

http://www.ardata.fr/blog/2018/01/flextable-0-4-0-is-out/","pavopax",1201,0
"Consider moving rowname formatting to cell formatting parameters","https://github.com/Roche/rtables/issues/3","closed",2018-02-26,2021-04-26,2021-04-26,2,"Currently, the `row.name` argument has no default in `rrow()`, and it's only possible to remove its behavior by passing NULL to the `row.name` parameter.

Instead of making this functionality a core argument, I'd propose keeping rrows quite detached from their contents and instead format row labels in the table via formatting parameters to the left most column of cells. 

Likewise, `tibbles` do not support row names, meaning that while using many tidyverse functions (which silently coerce dataframes to tibbles) to process a dataframe from which to construct an rtable, one would have to convert back to a data.frame in order to use data.frame row.names to build the table. ","dgkf",1155,0
"Multiple Header Rows","https://github.com/Roche/rtables/issues/2","closed",2018-02-26,2018-09-27,2018-09-27,1,"# Motivation
Often tables are used to communicate multiple types of information that my not all be described by the same headers despite all being connected by the same source of information or summarizing groups. 

Although the argument could be made for splitting this into two tables, it's often a pain to keep two separate tables consistently formatted and aligned. It can be much easier to keep them as one collective object with shared stylistic attributes. Joining the tables also communicates that they both speak to a cohesive narrative or argument.

In the spirit of accommodating that style of communication, would it be possible to extend the API to allow for multiple header rows?

# Example:

<table>
  <tr>
    <td><strong>Transmission</strong></td>
    <td align=""center""><strong>Average MPG</strong></td>
    <td align=""center""><strong>SD MPG</strong></td>
  </tr>
  <tr>
    <td>Automatic</td>
    <td align=""center"">31.25</td>
    <td align=""center"">4.87</td>
  </tr>
  <tr>
    <td>Manual</td>
    <td align=""center"">34.98</td>
    <td align=""center"">3.56</td>
  </tr>
  <tr>
    <td><strong># Carburetors</strong></td>
    <td colspan=2 align=""center""><strong>N (NAs)</strong></td>
  </tr>
  <tr>
    <td>4</td>
    <td colspan=2 align=""center"">28 (3)</td>
  </tr>
  <tr>
    <td>5</td>
    <td colspan=2 align=""center"">21 (2)</td>
  </tr>
  <tr>
    <td>6</td>
    <td colspan=2 align=""center"">16 (3)</td>
  </tr>
  <tr>
    <td>8</td>
    <td colspan=2 align=""center"">2 (0)</td>
  </tr>
</table>","dgkf",213,0
"example in first page readme file gives error, col.names should be changed to header","https://github.com/Roche/rtables/issues/4","closed",2018-03-05,2018-03-05,2018-03-05,1,"The example in first page readme file gives error:

not all arguments in ... are of class rrow

Changing col.names to header resolves issue. Maybe this is a residue from previous version, but in any case we need to update the page to not distract users. 

Same issue is in:
- compare_rtables examples","ghost",0,0
"Release 0.1.0, multi-line headers, rtabulate","https://github.com/Roche/rtables/pull/5","closed",2018-03-26,2018-03-26,2018-03-26,0,"","waddella",0,0
"Format of percentage not as expected","https://github.com/Roche/rtables/issues/6","open",2018-04-04,2021-03-12,NA,9,"In master branch, a percentage format doesnt give .0 if a value rounds to 1/0.

E.G.
`   rcell(c(10, 0.1101), format = ""xx (xx.x%)"")`

returns
`10 (11%)`

rather than

`10 (11.0%)`

","kieranjmartin",1174,101
"change rtable to dataframe","https://github.com/Roche/rtables/issues/7","closed",2018-06-01,2021-04-26,2021-04-26,3,"# Reporting an Issue with rtables

Hi,

I'm wondering how to convert rtable into data.frame? 

For example, if I created a rtable like this:

```r
library(rtables)
tbl <- rtable(
  header = c(""Treatement\nN=100"", ""Comparison\nN=300""),
  format = ""xx (xx.xx%)"",
  rrow(""A"", c(104, .2), c(100, .4)),
  rrow(""B"", c(23, .4), c(43, .5)),
  rrow(),
  rrow(""this is a very long section header""),
  rrow(""estimate"", rcell(55.23, ""xx.xx"", colspan = 2)),
  rrow(""95% CI"", indent = 1, rcell(c(44.8, 67.4), format = ""(xx.x, xx.x)"", colspan = 2))
)
tbl 
##                                           Treatement        Comparison
##                                             N=100             N=300   
## ----------------------------------------------------------------------
## A                                         104 (20%)         100 (40%) 
## B                                          23 (40%)          43 (50%) 
## 
## this is a very long section header
## estimate                                             55.23            
##   95% CI                                          (44.8, 67.4)        
```
then how can I change tbl as data.frame format with 3 columns?

Thank you so much.


","wang216",1060,0
"Feedback request for rtable.data.frame and rtable.groupby_df","https://github.com/Roche/rtables/pull/8","closed",2018-06-08,2019-06-24,2019-06-24,1,"> Sharing some exploratory work in userfacing API and dataframe/grouped_df integration. No intention to merge.

@waddella A few months back I did some tests in using this package in some of my own work. To try to move the user facing API towards a more declarative syntax, I wrote up some functions for building rtables from dataframes. 

For example, the `format` argument can accept a column name which contains format of the table for each row.

Additionally, there's handling of grouped dataframes which does automatic indenting by group.

Check out the `rtable.data.frame` and `rtable.grouped_df` functions and their examples for an idea of how this would work. There are still minor sticking points in the API that I'd like to improve, but as a whole I think it's much, much more approachable than constructing tables on a row-by-row basis. 

I know you've been recently considering more ease-of-use changes to the API and thought this early work might help add to that conversation.","dgkf",381,0
"Feature Request: Allow rowspan, too","https://github.com/Roche/rtables/issues/9","closed",2018-08-20,2021-04-28,2021-04-28,5,"In the examples and vignette, `colspan` is an attribute of a cell-- could rowspan also be an attribute?  That would allow simplification of grouping on the row level.

Row spanning doesn't easily work with every output type (e.g. markdown), and for that, I could imagine a feature which would allow a function to define the behavior taking an input of the contents.  Some defaults off the top of my head could be `rowspan_blank(x)`, `rowspan_duplicate(x)`, `rowspan_text(x, value=""(continued)"")`.","billdenney",982,0
"pre-release for rtables version 0.1.0.5","https://github.com/Roche/rtables/pull/10","closed",2018-09-21,2018-10-20,2018-09-21,0,"Version `0.1.0.5` with the following changes

* added `sprintf_format` for formatting rcells (thanks to Doug Kelkhoff for the suggestion)
* added `""(N=xx)""` and `"">999.9""` format labels
* `rtabulate` has now an argument `col_total` and shows by default the numbers of elements associated with a column
","waddella",0,-29
"not all rtables have the same header error","https://github.com/Roche/rtables/issues/11","closed",2018-09-26,2021-04-26,2021-04-26,2,"I am getting the error ""not all rtables have the same header"" when I try to combine the outputs from `rtable()` and `rtabulate()`. Please see example below:

```r
# using devel version of rtables
# devtools::install_github(""Roche/rtables"", ref = ""devel"", upgrade_dependencies = FALSE)
library(rtables)

r1 <- rtable(levels(iris$Species), rrow(""Iris""))
r2 <- rtabulate(x = iris$Sepal.Length, col_by = iris$Species, FUN = mean)

print(r1)
print(r2)
```

Here is `r1`

```
> print(r1)
              setosa          versicolor        virginica 
----------------------------------------------------------
Iris
```

Here is `r2`
```
> print(r2)
              setosa          versicolor        virginica 
----------------------------------------------------------
mean          5.006             5.936             6.588   
```

```r
# gives error
tbl <- rbind(
  r1,
  r2
)

# try to reset header for r2
header(r2) <- rheader(
  rrowl("""", levels(iris$Species))
)

# still get error
tbl <- rbind(
  r1,
  r2
)

# This was suggested as a work-around:
header(r2) <- header(r1)
tbl <- rbind(r1, r2)
```
Here is the result of `tbl` with the work-around:
```
> print(tbl)
              setosa          versicolor        virginica 
----------------------------------------------------------
Iris
mean          5.006             5.936             6.588 
```
Here is the session info:
```
> utils::sessionInfo()
R version 3.4.3 (2017-11-30)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows >= 8 x64 (build 9200)

Matrix products: default

locale:
[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252    LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C                           LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.1.0.5

loaded via a namespace (and not attached):
 [1] httr_1.3.1      compiler_3.4.3  R6_2.2.2        htmltools_0.3.6 tools_3.4.3     withr_2.1.1     curl_3.1        yaml_2.1.16    
 [9] memoise_1.1.0   Rcpp_0.12.18    knitr_1.20      git2r_0.21.0    digest_0.6.15   devtools_1.13.5

```","anajens",943,0
"allow a responsive table argument for as_html","https://github.com/Roche/rtables/issues/12","closed",2018-10-18,2021-04-28,2021-04-28,3,"In the context of shiny, it would be useful to produce tables of class  ""table-responsive"", as in bootstrap they then scroll if they break the size limits given for them, rather than expand over other elements. This would be a useful optional argument to as_html().","kieranjmartin",923,0
"Update rtabulate and header_add_N documentation.","https://github.com/Roche/rtables/pull/13","closed",2018-11-12,2018-11-22,2018-11-21,1,"Hi @waddella,

please take a look at some suggestions to improve the documentation for `rtabulate` and `header_add_N`

","anajens",9,-1
"add a parameter to header_add_N","https://github.com/Roche/rtables/issues/14","closed",2018-11-13,2018-11-13,2018-11-13,1," @waddella 

Not able to do a pull request. But I have a suggestion for function `header_add_N` . 
```r
header_add_N <- function(x, N, row.name = NULL) {
  is(x, ""rtable"") || stop(""x is expected to be an rtable"")
  length(N) == ncol(x) || stop(""dimension missmatch"")
  
  header(x) <- rheader(
    header(x)[[1]],
    rrowl(ifelse(is.null(row.name), """", row.name), N, format = ""(N=xx)"")
  )
  x
}
```
It's for getting the following type of header:
![image](https://user-images.githubusercontent.com/22531229/48382242-06005200-e695-11e8-8568-7bd7e8d3f1d8.png)
","WhoD",0,0
"nested col_by argument","https://github.com/Roche/rtables/issues/15","closed",2018-11-27,2021-04-28,2021-04-28,2,"I am looking into extending the `col_by` argument in `rtabulate` to accept a list of vectors. Here is a first draft:


```r
library(rtables)
library(dplyr)

X <- expand.grid(
 SEX = factor(c(""M"", ""F""), levels = c(""M"", ""F"")),
 ARM = factor(c(""arm A"", ""arm b""), levels = c(""arm A"", ""arm b""))
) %>%
 mutate(
   AGE = rnorm(n())
 )

Y <- X %>% mutate(AS = interaction(ARM, SEX, drop = FALSE, lex.order = FALSE))

Y$AS

tbl <- rbind(
 rtabulate(Y$AGE, col_by = Y$AS, FUN = mean, format = ""xx.xx""),
 rtabulate(Y$AGE, col_by = Y$AS, FUN = min, format = ""xx.xx"")
)

header(tbl) = rheader(
 rrowl("""", lapply(levels(Y$ARM), function(x) rcell(x, colspan = 2))),
 rrowl("""", as.list(rep(levels(Y$SEX), 2)))
)
tbl
```

which yield the table

```
                 arm A                   arm b      
             M           F           M           F  
----------------------------------------------------
mean        0.86        2.22        0.29        1.27
min         0.86        2.22        0.29        1.27
```

The idea is that this table can be created in the future with

```r
rbind(
  rtabulate(Y$AGE, col_by = Y[, c(""ARM"", ""SEX"")], mean),
  rtabulate(Y$AGE, col_by = Y[, c(""ARM"", ""SEX"")], min)
)
```

This is a planned future release. Input is welcome.","waddella",883,0
"Generating tables in rtf or docx format","https://github.com/Roche/rtables/issues/16","closed",2018-12-04,2021-04-28,2021-04-28,1,"Hi Adrian:

Is there a plan to add the feature to export the rtable object into an rtf/docx file.

Best,

Yilong","elong0527",876,0
"Parametric DualEndpoint models cannot be simulated","https://github.com/Roche/crmPack/issues/1","closed",2018-12-16,2019-10-26,2019-10-26,1,"Error in rjags::jags.model(file = modelFileName, data = if
(fromPrior)
 modelspecs else c(requiredData,  :
  RUNTIME ERROR:
Compilation error on line 7.
 Attempt to redefine node StandDose[1]

This is due to the following changes from Aug 2017:

""* ProbitLogNormal: Now also this model allows for a reference dose and a log transformation
  of the (standardized) dose. This can be specified with options refDose and useLogDose.

  * DualEndpoint: Same additional options as for ProbitLogNormal are now available for the
  DualEndpoint models. As a consequence, the parameter ""refDose"" for class 
  DualEndpointBeta needed to be renamed to ""refDoseBeta"", and the parameter ""refDose"" for
  class DualEndpointEmax renamed to ""refDoseEmax"".""

So somehow because I wanted the ""useLogDose"" parameter and I only wanted it to apply to the dose-tox model, but not the dose-efficacy model, I made this change.

I see as options:
1) I think the easiest fix would be to replace StandDose[j] by StandDoseEmax[j] in the whole JAGS model for DualEndpointEmax.
2) I think it is confusing to have another slot ""refDoseEmax"" in the DualEndpointEmax class, in the same way as it is confusing that the ""useLogDose"" parameter only applies to the dose tox model, but not the dose eff model. So another option would be to change this, such that the parameter also applies to the dose eff model. Then we would not need refDoseEmax anymore.

Both options would also apply to the other parametric models DualEndpointBeta etc.

Preferred solution is 2), useLogDose would also be applied to the PD-model and not only the Safety-model.
","danielinteractive",314,0
"Add sort, order and unlist","https://github.com/Roche/rtables/pull/17","closed",2018-12-20,2018-12-20,2018-12-20,0,"","waddella",0,0
"Update simulations.Rmd","https://github.com/Roche/crmPack/pull/2","closed",2019-01-02,2019-10-26,2019-10-26,0,"fix code error factSurv < 0. Update DA related functions to TITE related functions. The code will require TITE related function such as dataTITE, TITEdesign etc.","JiawenZhuxm",297,0
"Update sort_* and order_* documentation","https://github.com/Roche/rtables/pull/18","closed",2019-01-15,2019-01-16,2019-01-16,1,"Hi @waddella ,

please take a look at some suggestions to improve the documentation for the recently added functions: `order_rrows`, `sort_rrows`, `order_rtables` and `sort_rtables`. 

I also tested all rtabulate methods and am confirming that `col_wise_args` functionality is implemented. 

If there are no additional changes pending, this branch should be ready for a release.","anajens",1,0
"release v0.1.1","https://github.com/Roche/rtables/pull/19","closed",2019-02-25,2019-02-25,2019-02-25,0,"","waddella",0,0
"Proof of Concept (Target 03/31 2019)","https://github.com/pharmaR/riskmetric/issues/1","closed",2019-03-06,2019-03-26,2019-03-26,2,"
## Proof of Concept (Target 03/31 2019)
1. Collect metrics from the five identified R packages.
- [x] Review the current metrics is sufficient for proof of concept. (Rebecca) 
- [x] Add code coverage emmeans (Doug, Rebecca)
- [x] Add metrics for limma (Doug, Rebecca)

## Pending Task for the future

1. Automatically the way to collect all the metrics
2. Understand how to evaluate one pacakge's risk based on its dependency packages risk
3. Derive Documentation coverage
4. Derive overall code coverage
5. Propose to derive the risk score based on the risk metrics.
      * Build a pipline to derive the risk score.
      * The risk score should be derived for every version of R package in CRAN/Bioconductor
      
## Overall Goal:

1. an automatically pipline to create metrics for R packages on CRAN/Bioconductor","elong0527",20,0
"package layout","https://github.com/pharmaR/riskmetric/issues/2","closed",2019-03-07,2020-09-02,2020-09-02,25,"Hi,

I have a few suggestions about how this package should be laid out. Currently the packages info is added in one tibble, but this is a bit hard to future proof, and makes the code harder to read. Also the primary function of the risk metrics code is to generate an Rd file. I think the best way to generate package data is to store the code doing so in data-raw, following Hadley Wickham's advice [here](http://r-pkgs.had.co.nz/data.html) .

So I'd have something like

```
package_details <- list()

package_details$dplyr <- tibble::tibble(package = ""dplyr"", source = ""CRAN"", `21CFR` = ""N"")

package_details$emmeans <- tibble::tibble(package = ""dplyr"", source = ""CRAN"", `21CFR` = ""N"")

package_tibble <- purrr::reduce(package_details, dplyr::bind_rows)

usethis::use_data(package_tibble, overwrite = TRUE)
```
which makes an rdata file in /data . You can then make an R file called package_tibble which documents the data.

I'd then have a function called risk_metrics(packagedata = package_tibble) which takes the inputted tibble and gives up to date metrics. So I'd put stuff that is static and determined by us (package, location, 21cfr, other measures) in data_raw, then have functions to determine things like code coverage by making external calls.

For an intermediate point, we could simply hard code functions, so

```
code_cov(packagename)<- function{

if (packagename == ""dplyr"") return(83)
}
```

This then gives the user flexibility to add a new package to the package_tibble with details, and get information using the functions we've built.

If you like, I can make a fork implementing something like this.","kieranjmartin",545,0
"Added bioconductor fields and package coverage","https://github.com/pharmaR/riskmetric/pull/3","closed",2019-03-08,2019-03-26,2019-03-14,2,"### Changes
* added `emmeans` code coverage
* used `BiocPkgTools::biocPkgList` to get analogous fields as CRAN db

### Needs work:
* haven't yet re-generated dataset for package, wasn't sure how we wanted to version this on GitHub
* `Copyright` isn't an avaialble field from `biocPkgList`
* `limma` doesn't use a testing framework I'm familiar with, not sure how to test it","dgkf",6,-12
"Bioconductor code coverage ","https://github.com/pharmaR/riskmetric/issues/5","closed",2019-03-14,2019-05-31,2019-05-31,1,"Per @dgkf , we need to investigate how to derive code coverage for Bioconductor R packages, e.g. limma. ","elong0527",78,0
"Number of downloads","https://github.com/pharmaR/riskmetric/issues/4","closed",2019-03-14,2020-09-02,2020-09-02,5,"We need to define the number of downloads measurement for each R package. 

1. How to define the metric? 
    * Suggest option: Average number of monthly downloads from Rstudio/Bioconductor in the past 12 months? (using `dlstats` R pacakge)
    * Another option per @dgkf  is `BiocPkgTools::biocDownloadStats()`

Discussion point: 

In this R package, should we consider to develop this R package in a low risk category? (that means we should be careful to chose which R package to be used to derive the metrics) This is not in high priority at current stage. 

","elong0527",538,0
"Code Coverage","https://github.com/pharmaR/riskmetric/issues/6","closed",2019-03-21,2020-04-29,2020-04-29,6,"### Proposal:

Mimic the idea of github mirror of all CRAN R packages (https://github.com/cran/emmeans)

Step 1: create read only repos.
Step 2: add CI yaml file using `devtools::use_travis`, `covr::use_coverage` etc
Step 3: read code coverage data from CI website (e.g. codecov.io) 
","elong0527",405,0
"Risk score derivation","https://github.com/pharmaR/riskmetric/issues/7","closed",2019-03-21,2019-05-29,2019-05-29,2,"Option 1:

Assuming risk score (rs) is 1-10 and 1 is the lowest risk score that cover the highest qualified R package on CRAN. 

Define a decision tree based rule for risk score. One R package may fit for multiple rule. The lowest score of all applied rule will be its final risk score. 

For example: 

Risk Score Rule 1: If 21CFR = ""Y"" then rs = 1
Risk Score Rule 2: if code_coverage > 80% and Vignettes = ""Y"" and News = “Y” and max( rs of all dependency packages) <= 3 then rs = 2
...  ","elong0527",69,0
"Metrics Wish List","https://github.com/pharmaR/riskmetric/issues/8","open",2019-03-22,2019-09-23,NA,6,"**Edit:** _moved each suggestion to individual issues. Please use the [metric project board](https://github.com/pharmaR/riskmetric/projects/1) to track progress and discuss details of each metric in the specified issues, which have now been filed as independent issues (links alongside itemized list)_

_following up on call from Mar. 22nd, 2019 regarding brainstorming_

# Risk Metric Breakdown by Category

### Unit Testing Metrics (see [coverage considerations](#Coverage-Considerations))
- [ ] Unit test coverage #6 
- [ ] Composite coverage of dependencies (average? minimum?) #41

### Documentation Metrics
- [ ] ""Documentation Coverage""
   - [ ] Parameter descriptions documented for parameters of exported functions #43
   - [ ] Return object documented for exported functions #43
   - [ ] Example(s) included for exported (un-exported?) functions #43, #44
- [ ] Vignettes #45
- [ ] NEW / NEWS.md / README.md / README.Rmd, etc tracking #46

### Community Engagement
- [ ] Availability of code in a public repository #47
   - [ ] \# of participants in repository issues  #48
   - [ ] Average time-to-response in issues and pull requests #49, #50
   - [ ] \# Watchers / Stars / Forks #51
- [ ] \# downloads (e.g. downloads in last month, 6 months, year, lifetime, etc) #52
- [ ] BugReports target specified in DESCRIPTION

### Maintainability & Reuse
- [ ] \# of active contributors (e.g. active contributors in last 6 months / lifetime) #54
- [ ] \# of author / maintainer contacts (mitigation against getting hit by the metaphorical beer truck) #55
- [ ] License #53



# Prioritization of Metrics
1. Metrics which can be assessed **without source code**
2. Metrics which **require installation of package**
3. Metrics which can be derived with **source code of package alone**
4. Metrics which rely on **source code of package and installation of all dependencies**


---

# Coverage Considerations
Code coverage for validated software becomes a bit more involved than ensuring a single package in isolation runs properly. Looking longterm, we may want to consider a metric that considers the code of dependent code. 

For a hyperbolic example, consider a package which has a single function that re-exports a sophisticated statistical model function. Testing this package to 100% coverage would be trivial, though the underlying code is far more involved. We could then consider all the imported statistical model code as part of the parent package and its code coverage would then be dependent on the code coverage of the imported code. 

To calculate this is non-trivial. We could follow a process like this:
1. Calculate per-expression code coverage with `covr::tally_coverage(by=""expression"")`
2. Parse expressions for dependency imports
3. Derive per-expression coverage
   a. For expressions with no dependencies, coverage from `covr` can be used
   b. For expressions with dependency, store reference to dependency
4. Build directed graph of package dependencies
5. Walk graph and fill in expression coverage
6. Tally expression coverage for each package export

","dgkf",822,637
"Create proof_of_concept.md","https://github.com/pharmaR/riskmetric/pull/9","closed",2019-03-26,2019-04-02,2019-04-02,0,"Draft proof of concept for risk metrics","elong0527",7,0
"+ pkgdown + testthat + MIT + reduced to single CRAN version example","https://github.com/pharmaR/riskmetric/pull/10","closed",2019-04-08,2019-04-11,2019-04-11,3,"Hey, 
this is a major overhaul of the basic infrastructure. I added testthat infrastructure, automatic code coverage reports (needs set up by repository owner), automatic pkgdown deployment (needs setup, see here https://pkgdown.r-lib.org/reference/deploy_site_github.html) and reduced the example to a bare minimum to get rid of the bioconductor dependencies.
This still needs some tinkering before the CI/CD + codecov + pkgdown works smoothly, @elong0527 can you set that up at some point?","kkmann",3,0
"branch protection rule for master?","https://github.com/pharmaR/riskmetric/issues/11","closed",2019-04-09,2019-04-11,2019-04-11,1,"I think it would be a good idea to have a mandatory review system for changes to master in place. Makes code changes more transparent to others and improves quality in the long run. Probably one reviewer would be enough. Passing the CI tests should also be mandatory for master (once we get them going again ;))

I.e. I am suggesting to use the formal branch protection system of GitHub.","kkmann",2,0
"Added handling of get_cran_version for vector of package names","https://github.com/pharmaR/riskmetric/pull/12","closed",2019-04-15,2019-04-15,2019-04-15,1,"I figured if we're operating on the `cran_db` data.frame that it would be good to be able to accommodate a situation where we want to pull a whole vector of version numbers. 

I also updated the test suite with a couple more tests to accommodate the new behavior. ","dgkf",0,0
"getting CI/CD for pkgdown to work","https://github.com/pharmaR/riskmetric/issues/14","closed",2019-04-16,2019-04-16,2019-04-16,1,"@elong0527 I guess since you are the repo owner you need to set up the deployment keys to get the pkgdown site set up properly. Let me know if there are any issues!
","kkmann",0,0
"link back to https://www.pharmar.org/packages/?","https://github.com/pharmaR/riskmetric/issues/15","closed",2019-04-16,2019-05-31,2019-05-31,2,"I feel there should be a link back to https://www.pharmar.org/packages/ in the README.md and maybe a short paragraph on the PSI SIG ('who are we?')? - not quite feeling that competent there yet ;)","kkmann",45,0
"Update README.md","https://github.com/pharmaR/riskmetric/pull/13","closed",2019-04-16,2019-12-17,2019-04-16,0,"bring information from RvalidationHub

another reference we may consider is 

https://environments.rstudio.com/validation.html
","elong0527",0,-245
"function naming conventions","https://github.com/pharmaR/riskmetric/issues/16","closed",2019-04-17,2019-05-29,2019-05-29,1,"Following the discussion in #2, it might be worthwhile to discuss a naming scheme for individual functions.

Since we might, at a later stage, also include metrics computed from packages directly, I would suggest distinguishing between a 'scrape' (online info) and 'get' (directly from package sources) function.

    scrape_test_coverage <- function(pkgname, version, ...)
    get_test_coverage <- function(path_to_targz, ...)

Alternatively, (not sure whether it is worth it atm) we could make this more generic by making `get/scrape` S3 generics and implement them as methods so that calls like 

    get(Test_Coverage(),  path_to_targz, ...)
    scrape(Test_Coverage(), version, ...)

become possible. The latter might be a bit cleaner and makes for shorter function/method names (+ metrics can be parametrized at instantiation -> less clutter in function call!) but it is certainly not necessary.

@dgkf @elong0527, opinions?","kkmann",42,0
"added proposal for an S3 class to store package source reference ","https://github.com/pharmaR/riskmetric/pull/17","closed",2019-05-03,2019-05-27,2019-05-24,7,"I put together a proof-of-concept of what an S3 class might look like for our package reference info. It currently contains minimal data, but could be used to dispatch to other functions for aggregating package metadata needed to provide a risk score.

The plan here is to create a single function that can be called with a variety of ways of specifying a package and provide back an S3 class object that can be dispatched to handle that package source appropriately.

Given `as.pkg_ref(x)` where

|working directory|`x = `| returns output of `class`|
|---|---|---|
|-|`""dplyr""`|`c(""pkg_install"", ""pkg_ref"")`(if dplyr installed)|
|riskmetric directory|`""../riskmetric""`|`c(""pkg_source"", ""pkg_ref"")`|
|-|`""blah.blah.blah""`|`c(""pkg_missing"", ""pkg_ref"")`|
|-|`""dplyr""`|`c(""pkg_remote"", ""pkg_ref"")` (if dplyr not installed)|

I think that this approach could help us streamline how we unify methods where possible, and how we handle separate sources elegantly.

### Examples of situations where S3 is beneficial
- If there are some metrics which require source code, we can create functions `as.pkg_source.pkg_install` and `as.pkg_source.pkg_remote` to pull the `URL` field from the description to download the source and return a `pkg_source` reference to the local clone. 
- If we want to assess unit test coverage differently for a remote reference on CRAN and source code cloned locally, we could have two separate functions `get_pkg_coverage.pkg_remote` which might try to pull the coverage out of a badge or CI tool and `get_pkg_coverage.pkg_source` which might run all the tests itself.

### Some areas for further improvement:
- perhaps a global variable such as `options(pkg_refs = c(""remote""))` could be used to only consider package references from certain source types, allowing for the metric calculations to run quickly by only scraping data from the web or  alternatively use `options(pkg_refs = c(""source"", ""install"", ""remotes""))` to always use the most rigorous method available.

Let me know if this sounds like a viable path to take, or if there are glaring gaps in this concept of a package design. ","dgkf",21,-3
"Clarified docker usage and pointed to some extra documentation","https://github.com/Roche/ggtips/pull/2","closed",2019-05-10,2019-05-13,2019-05-13,0,"Docker may be tricky to run the first time if someone is not familiar and installed it to test out the project.

Plus small fix in ggtips description grammar.","ghost",3,0
"Get rid of 'middleman' renderUI()","https://github.com/Roche/ggtips/pull/1","closed",2019-05-10,2019-08-09,2019-05-10,0,"","cosi1",0,-91
"version 0.1.0","https://github.com/Roche/ggtips/pull/3","closed",2019-05-13,2019-08-09,2019-05-13,0,"","jcubic",0,-88
"template for extensibility","https://github.com/pharmaR/riskmetric/issues/18","open",2019-05-24,2019-05-29,NA,1,"Prior to R/Pharma conference, put together at least one fully implemented metric as example for package extensibility. ","dgkf",759,754
"Example app creates Rplots.pdf file","https://github.com/Roche/ggtips/issues/4","open",2019-05-26,2019-05-26,NA,0,"when you run the app there is file that should be removed or not created in inst/example directory.","jcubic",757,757
"Preview image","https://github.com/Roche/ggtips/pull/5","closed",2019-05-26,2019-08-09,2019-05-27,0,"Preview image, see updated README","jcubic",1,-74
"made package references environments for call by reference behaviour","https://github.com/pharmaR/riskmetric/pull/21","closed",2019-05-27,2019-05-28,2019-05-28,0,"That's pretty much it, all there is to mimic call by reference. #20
Now you can basically store whatever you want in a pkg_reference and it should never get copied when you pass the thing around!","kkmann",1,0
"Mitigate `get_*`-style function repeated costly parsing / remote queries","https://github.com/pharmaR/riskmetric/issues/20","closed",2019-05-27,2019-05-28,2019-05-28,8,"_inspired by conversation in #17, related to #18 conversation with @kkmann & @elong0527_

---

Thinking about downstream use of a `pkg_reference` object bit more critically, I also think we'll have to find a way to not repeatedly make costly queries for every `get_*`-style functions. For example, if we have `get_public_contributions`, `get_has_public_repo`, `get_bugreports_response_history` (just for sake of example), all of these might hit similar parts of the GitHub / GitLab apis. 

Instead of making repeated queries to an api or repeatedly reading in things like the `Meta/Rd.rds` file, how should we cache the results once for repeated use? Some options may include

1. Use `memoise` to cache these passively behind a in-package function call
2. Store reusable metadata within the `pkg_reference` and preferentially use metadata from within this structure any time a new query is being posed.
3. Use top-level `get_*` functions (e.g. `get_GitHub`) to query all relevant sub-queries and return a list of metadata objects for evaluation.","dgkf",1,0
"Separate 'scoring' from `get_*` to decouple metadata gathering from assessment","https://github.com/pharmaR/riskmetric/issues/19","closed",2019-05-27,2019-08-03,2019-08-03,1,"_inspired by conversation in #17, related to #18 conversation with @kkmann & @elong0527_

---

Similar to using S3 for the `get_*` function dispatch, I think that the scoring function should also be extensible to allow organizations to customize the way that package metadata is summarized, and that each `get_*` (or alternatively named) function should return a standardized S3 object which can be extended for scoring overloading.

A trivial example may be to have `get_has_NEWS()` which may return an S3 object such as 

```r
structure(TRUE, class = c(""has_NEWS_metadata"", ""pkg_metadata"")
```

which is then passed to `score.has_NEWS_metadata()`

A more meaningful example might be for `get_public_contributions(x)` which might return:

```r
structure(data.frame(
  name = c(""dgkf"", ""kkmann"", ""elong0527""), 
  line_edits = c(23, 42, 777),
  last_edit = c(""2019-01-02"", ""2019-02-03"", ""2019-03-04"")), 
  class = c(""public_contributions_metadata"", ""pkg_metadata""))
```

where `score.public_contributions_metadata(x)` evaluates to just `nrow(x) > 1`, but a more sophisticated way to evaluate risk might be to look at the distribution of lines contributed by contributors as a proxy for distributed familiarity of the package code base.","dgkf",68,0
"[WIP] pkg_ref -> pkg_reference","https://github.com/pharmaR/riskmetric/pull/22","closed",2019-05-28,2021-03-31,2019-05-28,1,"renaming + some tests","kkmann",0,-673
"[done] local package metrics","https://github.com/pharmaR/riskmetric/pull/23","closed",2019-05-29,2021-03-31,2019-05-29,4,"Okay, a first attempt at trying to compute package metrics locally. I tried to get covr to work but that seems to be a bit involved. I cannot get it to output any tracing info. This is unfortunate since it is a core metric (I presume). Certainly doable, but this requires more digging...

---
*Not ready to merge!*

Updates:

* okay I took an invalid shortcut by running covr on the installed packages directly: covr requires the sources to work properly even if you install the tests. A bit more hazzle but certainly doable. 
* working in principle - need to make check() happy and resolve test errors on travis

","kkmann",0,-672
"added get/set functions to improve environment namespace maintainability","https://github.com/pharmaR/riskmetric/pull/25","closed",2019-05-29,2019-07-29,2019-07-29,1,"added function `new_pkg_env` to instantiate a new package environment, this environment is locked and contains:
* prepopulated variables based on the `pkg_env_fields` list, so that any changes to what variables we should expect in the namespace can be declared in one place
* a `get` function, which validates against the existing variable names to make sure you're requesting a viable variable, can take a `default` argument to fall back to if a variable hasn't been set yet.
* a `set` function which validates against the existing variable names before unlocking the namespace, assigning the new value and re-locking. 
* a `has` function to check if a variable has a value.

With these guardrails in place, I feel a lot more comfortable about using namespaces to accumulate package metadata and mitigate repeated calls to access it.","dgkf",61,0
"How to handle local library of package dependencies","https://github.com/pharmaR/riskmetric/issues/24","open",2019-05-29,2019-05-29,NA,2,"As mentioned by @kkmann in #23, we need to consider how dependencies of an installed package might need to be handled.

@kkmann had suggested that, at least initially, we allow all locally installed packages to share a library.

I think that this will work for fairly established packages that are well maintained, but will cause issues when we introduce packages with strictly conflicting package dependencies. I don't think this is a problem we should consider in-scope for now, and would be onboard to move forward with a shared library. ","dgkf",754,754
"Document the API","https://github.com/Roche/ggtips/issues/8","open",2019-05-31,2019-05-31,NA,0,"There is need for documentation. Best if it's in README or on GitHub wiki.

It's backed documentation because front don't need any docs.","jcubic",752,752
"license in README + demo shiny app","https://github.com/Roche/ggtips/pull/7","closed",2019-05-31,2019-08-09,2019-05-31,0,"As in title, hosted shiny app same as in example but with fancy GitHub ribbon. (and found bug needed to overwrite svglite svg css to make it work).","jcubic",0,-70
"You can't have other SVG on the page","https://github.com/Roche/ggtips/issues/6","open",2019-05-31,2020-06-09,NA,1,"Because of the bug in r-lib/svglite#91 you can't put any other SVG on the page, so this package and svglite is almost useless for some usage.

We can fix the issue by patch style inside svglite svg, but we will need to watch if style changes in future versions of svglite.","jcubic",752,377
"Release 0.1.2","https://github.com/Roche/rtables/pull/20","closed",2019-06-24,2019-06-24,2019-06-24,0,"","waddella",0,0
"Update Model-class.R","https://github.com/Roche/crmPack/pull/3","closed",2019-07-01,2019-10-26,2019-10-26,2,"Altered dose standardisation in DualEndpointEmax to fix bug when trying to simulate","TJaki",117,0
"Update Model-class.R","https://github.com/Roche/crmPack/pull/4","closed",2019-07-03,2019-10-26,2019-10-26,0,"Bugfix for other Dual endpoint model","TJaki",115,0
"Outline core deliverables for R/Pharma","https://github.com/pharmaR/riskmetric/issues/26","closed",2019-07-08,2020-08-27,2020-08-27,0,"Hi @kkmann & @elong0527 - After our call today, Yilong and I discussed what we saw as the target for a deliverable for R/Pharma. The core functionality that we're trying to hit are:

- [x] At least 2 metrics robustly developed 
- [x] A master ""assessment"" function that can be run to evaluate available metrics given a list of packages to assess
- [x] Perhaps a vignette on how to develop a new metric and score metrics within an organization
- [ ] Create a project board as a backlog of metrics to be implemented such that new contributors will have a good idea of what they can do to add to the package.

The idea is that we have enough built for a small demo -- ideally 2+ metrics that can be assessed over a list of packages. With a working demo, we can use R/Pharma as an opportunity to show others in the industry how they can contribute new metric functions to a central code base and implement summarizing functions on top of the metrics to characterize risk.

@andyofsmeg - let me know if this is in line with what you were expecting. 
@elong0527, @kkmann - any further thoughts on this as a proposed scope?","dgkf",416,0
"added assessment function (see #27) for ""has NEWS""","https://github.com/pharmaR/riskmetric/pull/28","closed",2019-07-09,2019-07-24,2019-07-24,0,"I implemented `get_*` style functions (renamed to `assess_*` as per #27) for determining whether a package has a NEWS file.

* [for remote package references](https://github.com/pharmaR/riskmetric/blob/6b7b75e63ca9ad8316eff161f617664eb00182be/R/pkg_metric_has_news.R#L15-L31), the CRAN webpage is parsed for a NEWS link 
* [for installed package references](https://github.com/pharmaR/riskmetric/blob/6b7b75e63ca9ad8316eff161f617664eb00182be/R/pkg_metric_has_news.R#L35-L42), the `system.file(package = <name>)` location is used as a search path for a `NEWS.*` file
* [for source package references](https://github.com/pharmaR/riskmetric/blob/6b7b75e63ca9ad8316eff161f617664eb00182be/R/pkg_metric_has_news.R#L46-L53), the source package directory is used as a search path for a `NEWS.*` file

I also added a [`score`](https://github.com/pharmaR/riskmetric/blob/6b7b75e63ca9ad8316eff161f617664eb00182be/R/pkg_metric_has_news.R#L95-L99) function dispatched on `pkg_metric_has_news` which returns `1` if any of the NEWS files are deemed valid (can be parsed by a respective `.Rd` or `.md` reader) or `0` otherwise.

There are a couple small utilities added for getting a list of non-installed CRAN package names and installed package names to make it easier to share examples (as shown below)

Some examples of how this might be used:

1. using a remote package:
   ```r
   pkg_name <- sample(riskmetric:::not_installed_packages(), 1)
   pkg <- as.pkg_ref(pkg_name)  
   assessment <- assess_has_news(pkg)
   assessment_risk_score <- score(assessment)
   
   cat(sprintf(
     ""package '%s' has %s NEWS file"", 
     pkg_name, 
     if (assessment_risk_score) ""a"" else ""no""))
   ```

2. using an installed package:
   ```r
   pkg_name <- sample(riskmetric:::installed_packages(), 1)
   pkg <- as.pkg_ref(pkg_name)  
   assessment <- assess_has_news(pkg)
   assessment_risk_score <- score(assessment)
   
   cat(sprintf(
     ""package '%s' has %s NEWS file"", 
     pkg_name, 
     if (assessment_risk_score) ""a"" else ""no""))
   ```

3. using a package source directory:
   ```r
   pkg_dir <- getwd()  # assuming working directory is riskmetric package directory
   pkg <- as.pkg_ref(pkg_dir)  
   assessment <- assess_has_news(pkg)
   assessment_risk_score <- score(assessment)
   
   cat(sprintf(
     ""package source at '%s' has %s NEWS file"", 
     pkg_dir, 
     if (assessment_risk_score) ""a"" else ""no""))
   ```

For critique on the design and structure, please continue the discussion in #27, otherwise we can discuss implementation details in this PR","dgkf",15,0
"function naming conventions & package structure (part 2)","https://github.com/pharmaR/riskmetric/issues/27","closed",2019-07-09,2019-08-03,2019-08-03,1,"A continuation of the issue thread #16 now that we've started to settle on a more concrete structure for the package.

In response to @kkmann's suggestions in that thread, I think that having some sort of prefix for the `get_*`-style functions is necessary to keep them easily discoverable. Since all of these functions are inherently similar in their accepted input datatypes and output datatypes, I think that this prefix is valuable for communicating this consistency (similar to `testthat::expect_*` or `ggplot2::geom_*`). 

## naming convention proposal

I've been toying around with the following naming convention and flow for how a summarized score might eventually be developed. It uses three templates for functions, `assess_*` (replacing `get_*`), `score` and `summarize_risk`:

- `assess_*` (e.g. `assess_coverage`, `assess_has_news`)
   This is used for initially gathering related metadata pertaining to an individual metric. This family of functions would be used to transform a package reference into a package metric.
   
   |input|function|output|
   |---|---|--|
   |**S3** `c(""pkg_install"", ""pkg_reference"")`|`assess_coverage.pkg_install`|**S3** `c(""pkg_metric_coverage"", ""pkg_metric"")`|

- `score` (e.g. `score.pkg_coverage`, `score.pkg_has_news`)
   Ideally this is just a single function that dispatches based on the type of metric that is to be scored such that we can define a conversion from metric metadata to some numeric indication of quality (I propose a 0-1 scale for all scores). For example, for `pkg_has_news`, any presence of a valid NEWS file might be considered a 1 on a 0 to 1 scale. We can then iterate on this if we want more granularity.

   |input|function|output|
   |---|---|---|
   |**S3** `c(""pkg_metric_coverage"", ""pkg_metric"")`|`score.pkg_metric_coverage`|**numeric** (0-1)|

- `summarize_risk`
   Finally, with one score per metric we can define a summarizing function to characterize the risk of a package with a single value.

   |input|function|output|
   |---|---|---|
   |**numeric vector** (0-1)|`summarize_risk`|**numeric** (0-1)|

## example package workflow using this structure

With all of these pieces in play, a common usage might look like this:

1. create a tibble column of package names

   |package|
   |---|
   |`""tools""`|
   |`""ggplot2""`|
   |...|
1. apply `as.pkg_reference` over column to create a column of `pkg_reference` objects

   |package|
   |---|
   |`<S3: pkg_install, pkg_reference>`|
   |`<S3: pkg_remote, pkg_reference>`|
   |...|
1. apply a list of `assess_*` functions to each `pkg_reference` object to produce a tibble of `pkg_metric` columns (one per assessment)

   |package|coverage|has_news|
   |---|---|---|
   |`<S3: pkg_install, pkg_reference>`|`<S3: pkg_metric_coverage, pkg_metric>`|`<S3: pkg_metric_has_news, pkg_metric>`|
   |`<S3: pkg_remote, pkg_reference>`|`<S3: pkg_metric_coverage, pkg_metric>`|`<S3: pkg_metric_has_news, pkg_metric>`|
   |...|...|...|
1. apply `score` to all cells except in column ""package"", producing a tibble of numeric scores (one per assessment)

   |package|coverage|has_news|
   |---|---|---|
   |`<S3: pkg_install, pkg_reference>`|0.95|1|
   |`<S3: pkg_remote, pkg_reference>`|0.87|1|
   |...|...|...|
1. summarize all scores into a summarized risk score 

   |package|coverage|has_news|risk score|
   |---|---|---|---|
   |`<S3: pkg_install, pkg_reference>`|0.95|1|**0.02**|
   |`<S3: pkg_remote, pkg_reference>`|0.87|1|**0.07**|
   |...|...|...|...|

I think it would be nice to have a user-facing function that accepts a list of package names (or `pkg_reference` objects) and an optional list of `assess_*` functions (defaulting to using all available internal `assess_*` functions) to do this in a user-friendly way. ","dgkf",25,0
"adding new pkg_cran_remote and pkg_bioc_remote subclasses","https://github.com/pharmaR/riskmetric/pull/29","closed",2019-07-24,2019-07-29,2019-07-29,3,"* added `pgk_cran_remote` and `pkg_bioc_remote` subclasses of `pkg_remote`, which can be used to dispatch behaviors for various webscraping assessments
* modified `assess_has_news` to accommodate new subclasses
* added memoised functions for remote repo mirror lists
* added util for comparing urls","dgkf",5,0
"Tooltipdata","https://github.com/Roche/ggtips/pull/9","closed",2019-07-24,2019-07-26,2019-07-26,4,"","marcin-kam",2,0
"resolve environment issue","https://github.com/Roche/ggtips/pull/10","closed",2019-07-29,2019-07-29,2019-07-29,0,"","marcin-kam",0,0
"Assess news current","https://github.com/pharmaR/riskmetric/pull/30","closed",2019-08-04,2019-08-09,2019-08-09,4,"* added `assess_news_current`to assess whether NEWS includes update for recent version
* added `assess_export_help` to assess whether package has documentation for exported objects
* added a ton of documentation for our own functions
* commented out a lot of the source downloading code that @kkmann had added to get our tests passing and to get the package stable before R/Pharma. The structure of the package has changed slightly since that code was added and it's not causing minor issues.
* made some minor changes to vignettes to help pass R CMD Check","dgkf",5,0
"Broken arrow in Firefox","https://github.com/Roche/ggtips/issues/15","closed",2019-08-09,2019-08-13,2019-08-13,0,"In FireFox arrow is broken, it display as trapeze, at least on Linux.","jcubic",4,0
"Move legend to the bottom","https://github.com/Roche/ggtips/pull/12","closed",2019-08-09,2019-08-09,2019-08-09,1,"See #11 ","cosi1",0,0
"Put legend in demo to the bottom","https://github.com/Roche/ggtips/issues/11","closed",2019-08-09,2019-08-09,2019-08-09,1,"There may be a bug in ggtips when point is near right side of the plot, found in our application. If we put legend at bottom we will see in demo if problem is in ggtips.","jcubic",0,0
"S3 environment + extract operator overloading vs. R6 + methods","https://github.com/pharmaR/riskmetric/issues/31","closed",2019-08-09,2020-08-27,2020-08-27,2,"@kieranjmartin in #30 rightfully questioned the possibly overengineered nature of the S3 implementation for the package references.

The S3-style package reference objects evolved out of a fairly minimalist design which slowly grew in complexity when we tried to put on some guardrails to prevent re-deriving intensive metadata or derived values. 

In practice, it's beginning to resemble an R6 class. Would it be better to rewrite these pieces in R6? Would an R6 design be more contributor-friendly since it's familiar, or more challenging because it would require more familiarity with the class construction?

Admittedly I don't have all that much experience with R6, so I don't have a strong sense for the pros and cons.","dgkf",384,0
"Tooltips not showing up in Basilisk Browser","https://github.com/Roche/ggtips/issues/14","closed",2019-08-09,2019-08-10,2019-08-10,5,"### Observed effect:
The demo app, when viewed in Basilisk Browser for Linux, displays a static plot.
The following error is shown in the JS console upon every hovering over a point:

```
NS_ERROR_FAILURE:
  $.fn.ggtips/</<     http://127.0.0.1:3838/shared/jquery.min.js%20line%202%20%3E%20eval:81:31
  $.fn.proximity/</<  http://127.0.0.1:3838/shared/jquery.min.js%20line%202%20%3E%20eval:326:33
  dispatch            http://127.0.0.1:3838/shared/jquery.min.js:3:12392
  add/r.handle        http://127.0.0.1:3838/shared/jquery.min.js:3:9156
```

### Environment:
Basilisk Browser 2018.07.18 (64-bit)
User agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.9) Gecko/20100101 Goanna/4.1 Firefox/52.9 Basilisk/20180718

EDIT: Updating Basilisk to the latest version (2019.06.08) doesn't help.","cosi1",1,0
"Unit tests don't pass with the newer versions of ggplot2","https://github.com/Roche/ggtips/issues/13","closed",2019-08-09,2019-08-10,2019-08-10,2,"Version 3.0.0 of ggplot2 introduced some backwards incompatible changes to the low-level structure of ggplot objects. It appears that some of these changes break some of ggplot's unit tests.

### Steps to reproduce:
Build ggtips with ggplot2 >=3.0.0, and run unit tests.","cosi1",1,0
"Add compatibility switches for ggplot2 3.x","https://github.com/Roche/ggtips/pull/17","closed",2019-08-10,2019-08-10,2019-08-10,0,"","cosi1",0,0
"Fix Arrow in Firefox #15","https://github.com/Roche/ggtips/pull/16","closed",2019-08-10,2019-08-10,2019-08-10,1,"By default it seems height is not 0 like in Chrome and that was breaking the arrow.","jcubic",0,0
"Fixed NA values when some panel is empty","https://github.com/Roche/ggtips/pull/18","closed",2019-08-11,2019-08-12,2019-08-12,2,"Reproduction of the issue: ggplot object with a facet_wrap geometry, at least 3 panels, the middle one removed on a grob stage. The `assignLayoutNamesToPanels` function produces the following output: 
```""panel-1-1"" NA          ""panel-3-1""```

The output is the origin of the error in `nameToGrob` function:
```Error in [[: attempt to select less than one element in get1index```

As far as I can tell my change is not breaking anything in the package. I checked unit tests and the demo app. ","mjakubczak",1,0
"better README + changelog for 0.2.0","https://github.com/Roche/ggtips/pull/20","closed",2019-08-13,2019-08-13,2019-08-13,0,"I've update README to include info about options + added version 0.2.0 into changelog.","jcubic",0,0
"Failing tests","https://github.com/Roche/ggtips/issues/21","open",2019-08-13,2020-05-06,NA,6,"https://travis-ci.org/Roche/ggtips/jobs/571269675

![travis](https://user-images.githubusercontent.com/280241/62939137-d8396c80-bdd0-11e9-8f42-a23d86f9f570.png)
","jcubic",678,411
"fix position of right aligned tooltip","https://github.com/Roche/ggtips/pull/19","closed",2019-08-13,2019-08-13,2019-08-13,0,"There where 2 problems
1. visible in demo offset because of wrong calculation
2. When creating library you should always use css classes with prefix so they don't interact with user CSS code (this is what was happening in Roche Maestro project).","jcubic",0,0
"updated vignettes using feedback from #32","https://github.com/pharmaR/riskmetric/pull/33","closed",2019-08-14,2021-03-31,2019-08-28,1,"made recommended changes from #32

- fixed typo in extending-riskmetric vignette
- moved getting-started vignette to riskmetric vignette
- clarified language used in riskmetric","dgkf",14,-581
"Vignette Feedback","https://github.com/pharmaR/riskmetric/issues/32","open",2019-08-14,2019-08-14,NA,0,"Vignette feedback from discussion in #30

> There is a ""riskmetric"" vignette which is just calling the library. You should either delete or update
> 
> in quick-start the index at the top for score assess etc has the code version of the text rather than just the html link look, I think it should look the same as the other links.
> 
> ""Finding a suitable reference for the package"" I find a bit confusing to parse. Maybe ""finding a good source for information on a package""
> 
> ""class is an environment to allow for by-reference mutability so that metadata necessary to derive one metric can be reused by another without going out and fetching data all over again."" this is a very technical explanation for a user; do they need to know that?
> 
> In general I think it would be better to say something like
> 
> ""Risk_metric stores information on all packages on cran."" (? don't know if true) ""You can select which packages are of interest to you by providing pkg_ref the names of the packages you want. If there is a package which isn't contained in risk_metric you will need to provide a link to the package metadata, as in this example""
> 
> This is my guess of how the code works, as I haven't looked in detail!
> 
> (I didn't follow the full discussion on the creation of this environment, but I do wonder if at some point you're better just using R6 rather than creating your own lightweight version)
> 
> The rest of quick start looks good to me.
> 
> Extending risk metric has a typo:
> 
> ""riskmetric is designed to be readily extensible. This is done through use of the S3 method dispatch system and a consciou acknowledgement ""
> 
> This is all the time I have right now for review, but hope this is helpful, good luck!","dgkf",677,677
"added dev_tips and guards for package behaviors","https://github.com/pharmaR/riskmetric/pull/36","closed",2019-08-28,2019-09-10,2019-09-10,3,"- experimenting with writing functions that can give a friendly message directing people on how they can improve their risk score.
- added a `dev_tips` function for `pkg_metric_export_help` class, indicating which exported functions do and don't have documentation
- added guards for package behaviors, which can be disabled via options (I think I may have botched my splitting up of this pull request and accidentally forgot to include this in a previous pull request, sorry for mixing functionality)","dgkf",13,0
"Dev/graceful errors","https://github.com/pharmaR/riskmetric/pull/35","closed",2019-08-28,2019-09-10,2019-09-10,0,"- added capturing of errors and gracefully propagating errors through other metadata requests
- added helper functions for desired error handling in scoring function","dgkf",13,0
"updated documentation: DESCRIPTION, README; updated travis.yml","https://github.com/pharmaR/riskmetric/pull/34","closed",2019-08-28,2021-03-31,2019-08-29,0,"- made `travis.yml` formatting consistent
- brought `DESCRIPTION` up-to-date
- edited `README.md` to make it a bit easier to read and get started","dgkf",1,-580
"Setup GitHub pages","https://github.com/Roche/ggtips/issues/22","open",2019-09-05,2019-09-05,NA,4,"Reference:

https://roche.github.io/rtables/

Not sure how they created GH but there is onother repo that have proper gh-pages branch

https://github.com/Roche/IceBoar/tree/gh-pages","jcubic",655,655
"Using ggtips with other geoms","https://github.com/Roche/ggtips/issues/23","open",2019-09-05,2020-02-14,NA,3,"Hi there, I hope you guys are doing great,

First of all, thank you for developing this amazing package. I'm having issues adding reactive tooltips to a geom_bar. Here is the reproducible example that is an adaptation of your demo.

`    output$myPlot <- renderWithTooltips(
        plot = ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length)) + 
geom_bar(stat = ""identity"",aes(fill = Species)),
        varDict = list(Sepal.Width = ""Width"", Sepal.Length = ""Length"", Species = ""Species"")
    )`

Please let me know if this is possible! Thank you again.","Teett",655,493
"Migrate package wish list to project board","https://github.com/pharmaR/riskmetric/issues/37","open",2019-09-10,2019-09-10,NA,0,"Take the items in the package wish list and file individual issues to break up workload.","dgkf",650,650
"Minor updates in preparation for riskmetric group meeting demo","https://github.com/pharmaR/riskmetric/pull/38","closed",2019-09-14,2019-09-20,2019-09-20,0,"- added calling environment to search path for S3 `pkg_ref_cache` methods
- added helper for getting default weights for `summarize_risk`
- minor tweaks to some function names for consistency/typos","dgkf",6,0
"Collecting related, influential packages","https://github.com/pharmaR/riskmetric/issues/40","open",2019-09-17,2019-11-26,NA,1,"Cataloging a few packages in a similar space. I know we have done this research in the past but wanted to document thoughts around similar packages in a central place:

- `R CMD build` & `R CMD check --as-cran`
- [`packagemetrics`](https://github.com/ropenscilabs/packagemetrics)
- [`BiocChecks`](https://github.com/Bioconductor/BiocCheck)
- [`rcmdcheck`](https://github.com/r-lib/rcmdcheck)
- [`goodpractice`](https://github.com/mangothecat/goodpractice)
- [`cchecks`](https://github.com/ropenscilabs/cchecks) & [`cchecksapi`](https://github.com/ropenscilabs/cchecksapi)

I'll try to keep this list up to date, so please keep suggestions coming
","dgkf",643,573
"package name change","https://github.com/pharmaR/riskmetric/issues/39","closed",2019-09-17,2020-01-15,2020-01-15,4,"In our group meeting on 2019/09/17, Patrice K. mentioned that ""RiskMetrics"" conflicts with a [variance model produced by J.P. Morgan in the 90s](https://en.wikipedia.org/wiki/RiskMetrics). 

I assume the name conflict is probably not worth any potential legal issues and ambiguity (especially in a statistical programming language where someone may be looking for a package to run these models).

Please let me know how people feel about the naming conflict, and feel free to make suggestions if you've got one.","dgkf",120,0
"Dependency Code Coverage","https://github.com/pharmaR/riskmetric/issues/41","open",2019-09-23,2019-09-23,NA,0,"Code coverage of a package in isolation is meant to test stability of the package's addition to its dependencies and isn't a reflection of the entire software stack's coverage.

As a developer of a package, test coverage indicates how stably you're adding to your dependencies and how reliable your own additions are. However, for software validation you are also concerned with issues that may percolate up through your dependencies -- you may be more interested in how the entire software stack is covered.

To effectively assess code coverage for validated software, you would likely want some way of aggregating the coverage of a package, taking into account the coverage of its dependencies. This could take a number of forms

### Simplest Solution

Take the minimum coverage of a package and its dependencies. This has known issues of potentially depending on only a single function with no coverage (possibly overrepresenting code coverage of dependencies) and treating all dependencies as equal. 

### Rigorous Solution

Ideally, you would need to account for the coverage of only the functions/objects on which a line of code in the parent package depends. To do this, we would likely need to track coverage per exported value for each package and consider the footprint of that function (number of lines or expressions) so that the code coverage of the parent package expression can be re-weighted.

This comes with a number of really challenging technical problems.
1. Code coverage would have to be calculated for all dependencies
1. A per-export code coverage graph would have to be produced including code coverage (by line or expression) and the number of lines or expressions needed to build the exported value
1. The graph isn't necessarily acyclic, as recursive patterns would need to be pruned
1. Doing this for many related packages would cause a lot of duplicate calculation so it may require some mechanism of caching coverage results.
1. Calculating a ""weighted"" coverage for an expression in a parent package would require some static code analysis to determine which expressions incorporate dependent code.

---

_Tagging as high difficulty only because we don't have a ""research grade"" difficulty ;). This is really a metric that I see as a research project in and of itself. The novelty of the work probably warrants it living somewhere where it could be used independent of the riskmetric package._
","dgkf",637,637
"Documentation of function parameters & returned values","https://github.com/pharmaR/riskmetric/issues/42","open",2019-09-23,2019-09-23,NA,0,"Build a metric that assesses how completely the package documents parameters and returned values.

Depending on how rigorous we want to be, this might be mostly covered by `R CMD check`, which gives a warning about undocumented parameters. 

Some possible considerations:

- Look for some keywords that indicate datatypes or defaults in the parameter description or  return value (like `character`, `logical`, `numeric`, `factor`, `formula`, `vector`, `matrix`, `list` `data.frame`, `atomic`, `object`, `class`) It wouldn't be foolproof, but on average it might give an indication of what a ""good"" parameter documentation might look like. I'm sure someone could have some fun with language processing to try to do this more intelligently, but I think something simple might be a little easier to reason about initially.

- Trying to give each parameter/return a score based on number of characters in the description (not trying to be too overbearing, but perhaps the score per parameter scales linearly with characters up to some fairly minimal cutoff like 20 characters to try to not inflate packages with really terse, unhelpful documentation). 

---

**Resources**

I built [some similar functionality](https://github.com/trestletech/shinyAce/blob/30572957a26f47e6fe24c366a9f026e409e4395f/R/utils.R#L87-L131) for the [shinyAce](https://github.com/trestletech/shinyAce) package for extracting subsections of the help file. I'm sure these could be repurposed for this use.","dgkf",637,637
"Examples available for exported objects","https://github.com/pharmaR/riskmetric/issues/43","open",2019-09-23,2019-09-23,NA,0,"Similar to #43, provide an assessment of the examples that are provided with each function.

We could check for the existence of examples or usage fields in the documentation. This can be achieved using the same mechanism of scraping the help as is linked in the references in #43. ","dgkf",637,637
"Function examples assessed by code coverage when running only function examples","https://github.com/pharmaR/riskmetric/issues/44","open",2019-09-23,2019-09-23,NA,0,"At the intersection of #6 and #43, it might be helpful to take a look at how effectively the examples provided with a function cover the different ways the function can be used.

One way of assessing this is the coverage of that function specifically after running just the examples provided with it. ","dgkf",637,637
"Gauge availability of vignettes","https://github.com/pharmaR/riskmetric/issues/45","closed",2019-09-23,2020-04-01,2020-04-01,0,"Check whether a package has vignettes, and whether they're discoverable via idiomatic R patterns (`vignette(package = <package>)`).","dgkf",191,0
"Metric for assessing source code repository community enthusiasm","https://github.com/pharmaR/riskmetric/issues/51","open",2019-09-23,2019-09-23,NA,0,"For public code repositories that have some measure of community enthusiasm, can we consolidate those into a metric? Specifically, I'm looking at GitHub's Stars or Forks as possible ways of determining how engaged/enthusiastic the community might be about a particular package. 

Would these make suitable metrics? How generalizeable would these be - are there analogs on other public code version control platforms?","dgkf",637,637
"Metric for availability of a public code repository","https://github.com/pharmaR/riskmetric/issues/47","open",2019-09-23,2021-04-28,NA,1,"It's important for many downstream metrics that the source code repository is somehow captured so we might as well make a metric out of its existence and figure out an appropriate weighting later. 

Some complications assuredly will come up due to the many ways by which someone may link a package to a repository. I'd guess the low hanging fruit like scraping GitHub/GitLab/Bitbucket urls from the BugReports field in description should be pretty feasible.","dgkf",637,54
"Metric for gauging suitability of a software license","https://github.com/pharmaR/riskmetric/issues/53","closed",2019-09-23,2020-01-06,2020-01-06,3,"This one probably requires a pretty candid conversation across the industry and a bit of health authority input.

Any guidelines that people have been using in the industry would be super helpful! If anyone doesn't feel comfortable making a claim to a license policy, perhaps there are public open source guidelines we can defer to that would let us begin to get our heads around suitable licenses. ","dgkf",105,0
"Metric for presence of a maintainer","https://github.com/pharmaR/riskmetric/issues/55","closed",2019-09-23,2020-05-13,2020-05-13,0,"#54 tries to assess who is actively contributing to code, but even more simply, having a maintainer identified in the R package `DESCRIPTION` is a good way of assessing who is responsible for the code.

One simple metric would be to look at the demarcations of roles in the `Authors`, `Maintainer` or `Authors@R` fields in the `DESCRIPTION` file to see how officially the authors are maintaining the software. This could be as simple as seeing whether someone is tagged as the `cre` (creator/maintainer). 

Similarly, it might be nice to have a metric that considers the number of contributors listed in the authors field as a measure of who could reasonable take over maintenance. ","dgkf",233,0
"Metric to assess number of active contributors","https://github.com/pharmaR/riskmetric/issues/54","open",2019-09-23,2019-11-27,NA,1,"One of the key measures of the stability of a software project is that it is actively maintained, which presupposes that it has an active maintainer. Would it be possible for us to assess how actively a project is contributed to/maintained?

Looking at GitHub, I think we might be able to pull the contributions. Would there be similar metrics we can pull from similar version control platforms? When source code repository is available, would it be preferable to pull this information from the git history itself?

We could consider various metrics for ""active"" maintenance, but the first step would be to get some measure of who is writing the code that gets added into the package. ","dgkf",637,572
"Metric to determine community engagement in issues","https://github.com/pharmaR/riskmetric/issues/48","open",2019-09-23,2019-09-23,NA,0,"Given the BugReports mechanism of a given package, can we come up with a metric to determine how engaged the community is in reporting issues? Possibly use the number of  people involved in issue discussions in the past N months, or the number of additions to issue discussions?","dgkf",637,637
"Metric to determine developer response to community reported issues","https://github.com/pharmaR/riskmetric/issues/49","open",2019-09-23,2019-09-23,NA,0,"In the same vein as #48, would it be possible to also assess how quickly the developer of a package responds when the community reports bugs. Given the BugReports mechanism of choice, would it be possible to look at an average time to a developer response?","dgkf",637,637
"Metric to determine developer time to pull request / patch response","https://github.com/pharmaR/riskmetric/issues/50","open",2019-09-23,2019-09-23,NA,0,"Similar to #49, When pull requests/patches are provided to a package, can we determine how long it takes until a developer responds?","dgkf",637,637
"Metrics for history and number of package downloads","https://github.com/pharmaR/riskmetric/issues/52","closed",2019-09-23,2020-01-15,2020-01-15,9,"For central repositories that measure downloads of packages (CRAN/Bioconductor), can we produce a metric that assesses the popularity of a package based on how many downloads it gets. 

Clearly this won't be entirely rigorous as package downloads don't inherently map to package users, but surely it provides a relative measure of adoption. 

We could consider implementing multiple ""views"" of the same metric, for example 
- \# of packages in the past year
- \# of packages in the past few months
- month over month download growth: rate of change of downloads/day over last few month?

I'm sure we can get really creative about this. Since I think we'd likely pull down a pretty large amount of historical package download data, the different derived metrics of this data would be computationally pretty cheap so we can have some fun implementing different interpretations. ","dgkf",114,0
"Presence of an up-to-date NEWS file","https://github.com/pharmaR/riskmetric/issues/46","closed",2019-09-23,2019-09-23,2019-09-23,0,"Try to determine whether a NEWS file is available and whether it is up-to-date with the current version of the package.","dgkf",0,0
"Metric for percentage of issues open/closed/with response on bug tracker","https://github.com/pharmaR/riskmetric/issues/56","closed",2019-09-24,2020-01-06,2020-01-06,1,"I put together a demo for a `R Validation Hub` meeting using this as a metric, so I might as well go the last mile and implement it as a metric.

## Goal

The goal would be to determine how actively developers are responding to and resolving bug reports.

## Implementation

Implementation could consider the last 30 issues filed on a repository and see what percentage are currently open. To try to be a bit more rigorous, I think it's worth also considering which bugs have a response. 

## Design Considerations

One design consideration that arises is how to handle the different sources of BugReports urls and remote package page urls. It might require some consideration how we build a class structure given a BugReports url. I think that we might want to consider implementing a way of automatically ""promoting"" a `pkg_cran_remote` to a `pkg_github_remote` (and possibly even promoting a `pkg_github_remote` to a `pkg_source`) so that we aren't trying to handle all the permutations of BugReports locations and package remote references individually and instead can convert the structure into the most meaningful representation. ","dgkf",104,0
"Make first param of renderWithToolTips() an expr instead of plot object","https://github.com/Roche/ggtips/issues/24","closed",2019-10-07,2019-10-23,2019-10-23,12,"`renderWithToolTips()` is not currently ""plug-compatible"" (ie interchangeable) with functions like `renderPlot()`. This doesn't matter if the only contents of `renderPlot{(...)}` is a ggplot ""stack,"" but it gets tricky if we are doing other things inside our `render*()` code...

Thanks!","olyerickson",16,0
"Contributor Orientation","https://github.com/pharmaR/riskmetric/issues/58","closed",2019-10-15,2019-11-20,2019-11-20,2,"Shall we have a recorded orientation session to go through necessary information for people to contribute in one metric. (basically the nice Vignette @dgkf  wrote)","elong0527",36,0
"Make this repo README file and validation hub website metrics information consistent ","https://github.com/pharmaR/riskmetric/issues/59","closed",2019-10-15,2019-11-20,2019-11-20,2,"Per validation hub meeting today. We shall use the README file as the source to keep the validation hub website metrics information up to date. 
","elong0527",36,0
"Project Management Plan","https://github.com/pharmaR/riskmetric/issues/57","closed",2019-10-15,2019-11-20,2019-11-20,0,"- Sprint meeting: 
    - frequency: 2 weeks (30 min)
    - attendee: active contributors of this project.
    - objective: update the status for the project in current monthly target achievement. 
    - objective: discuss the bottleneck of a specific item/issue.  

- Project planing meeting: 
    - frequency: 1 month (30 min)
    - attendee: tech lead and project manager. 
    - objective: review the project achievement last month. 
    - objective: discuss and plan the project achievement next month.
    - objective: assign/recommend assignee of each task   

","elong0527",36,0
"Attempt to add number of downloads in the past year","https://github.com/pharmaR/riskmetric/pull/60","closed",2019-10-17,2019-12-20,2019-12-20,2,"check fails because its not able to build the vignettes: 
 
```
E  creating vignettes (18.5s)
   --- re-building 'extending-riskmetric.Rmd' using rmarkdown
   Quitting from lines 211-215 (extending-riskmetric.Rmd) 
   Error: processing vignette 'extending-riskmetric.Rmd' failed with diagnostics:
   non-numeric argument to binary operator
   --- failed re-building 'extending-riskmetric.Rmd'
   
   --- re-building 'riskmetric.Rmd' using rmarkdown
   Quitting from lines 154-157 (riskmetric.Rmd) 
   Error: processing vignette 'riskmetric.Rmd' failed with diagnostics:
   non-numeric argument to binary operator
   --- failed re-building 'riskmetric.Rmd'
   
   SUMMARY: processing the following files failed:
     'extending-riskmetric.Rmd' 'riskmetric.Rmd'
   
   Error: Vignette re-building failed.
   Execution halted
Error in (function (command = NULL, args = character(), error_on_status = TRUE,  : 
  System command error
```
Looking into it in more detail, I am not quite sure how to resolve the following error. The vignette with that code runs through if I run it directly from Rstudio. The specific lines where the vignette fails calls the following, not sure where the gzfile is called..
 
```
> pkg_ref(c(""riskmetric"", ""utils"", ""tools"")) %>% 
+   as_tibble() %>% assess()
# A tibble: 3 x 13
  package version pkg_ref             assess_family_r~ assess_news_cur~ news_current
  <chr>   <chr>   <list<pkg_ref>>     <list<pkg_metri> <list<pkg_metri> <list<pkg_m>
1 riskme~ 0.1.0.~ riskmetric<install> <error>          <lgl [0]>        <lgl [0]>   
2 utils   3.6.1   utils<install>      <error>          <lgl [0]>        <lgl [0]>   
3 tools   3.6.1   tools<install>      <error>          <lgl [0]>        <lgl [0]>   
# ... with 7 more variables: assess_export_help.pkg_install <list<pkg_metric>>,
#   assess_downloads_1yr.pkg_ref <list<pkg_metric>>,
#   assess_has_news.pkg_ref <list<pkg_metric>>, downloads_1yr <list<pkg_metric>>,
#   export_help <list<pkg_metric>>,
#   assess_news_current.pkg_remote <list<pkg_metric>>, has_news <list<pkg_metric>>
Warning message:
In gzfile(file, ""rb"") :
  cannot open compressed file 'C:/.../Rpkgs/riskmetric/help/aliases.rds', probable reason 'No such file or directory'
```","jmanitz",64,0
"New API functon","https://github.com/Roche/ggtips/pull/25","closed",2019-10-22,2019-10-23,2019-10-23,0,"New API:

```R
output[[""myPlot""]] <- renderUI({
  plot = ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length)) + geom_point(aes(colour = Species))
  varDict = list(Sepal.Width = ""Width"", Sepal.Length = ""Length"", Species = ""Species"")

  ggtips::plotWithTooltips(plot, varDict = varDict)
})
```
+ example API usage of how to cache svg in memory or in db.","jcubic",1,0
"Add alignment option","https://github.com/Roche/rtables/pull/21","closed",2019-10-25,2020-12-06,2020-12-06,2,"A simple fix to allow the user to alter the alignment of the rtable, this is super useful; I haven't added documentation here (in fact the align input is obscured as its only associated with the rrow method); I suspect also it'd be easier to just let the user put in centre/right/left and add the text- part for them","kieranjmartin",408,0
"update README","https://github.com/pharmaR/riskmetric/pull/61","closed",2019-10-31,2019-11-08,2019-11-08,0,"add bi-weekly sprint meeting information","elong0527",8,0
"Should the Bioconductor Support Site be considered a default BugReport url?","https://github.com/pharmaR/riskmetric/issues/62","open",2019-11-04,2019-11-04,NA,0,"Related to #56 

I'm looking at how to accommodate a BugReports assessment for Bioconductor packages. I didn't realize that the preferred support mechanism was through the Bioconductor support site and that only a small fraction of packages use BugReports.

>**From Bioconductor's [Package Submission Guide](https://www.bioconductor.org/developers/package-submission/)**
>
>The support site is the official support channel for users. Users and even developers may ask questions regarding your package on this platform. Be sure to include all the packages that you maintain in the “Watched Tags” section of your support site profile. This will notify you of any questions posted regarding your package(s). It is important to promptly respond to bug reports and questions either on the Bioconductor support site post or directly to developers. Some maintainers prefer to indicate a BugReports: field in their package’s DESCRIPTION file. This field indicates a particular web page for submitting bug reports and questions.

Trying to accommodate the support site seems like quite a daunting task. If anything, I think we might want to treat this as a separate form of support, perhaps more akin to StackOverflow or the RStudio Discourse. 

I'm planning to proceed with only considering the url in the BugReports field. Please let me know if there are any concerns with the approach. ","dgkf",595,595
"Maturity (version/package)","https://github.com/pharmaR/riskmetric/issues/67","open",2019-11-20,2020-07-16,NA,3,"from https://github.com/pharmaR/pharmaR.github.io/blob/master/content/risk.md
Maturity (package) | The longer a package has been in existence, the more exposure it has had to community testing
-- | --
Maturity (version) | When measuring package maturity, it is also important to consider the version maturity. The more recent a version, the less exposure it has had to community testing

Yilong: 
this one had overalp with Release Rate. We may collect the release date of each package version from CRAN for this.","elong0527",579,340
"Metric for Release Rate","https://github.com/pharmaR/riskmetric/issues/65","closed",2019-11-20,2020-05-13,2020-05-13,1,"""A stable but continuing release pattern is a sign of active maintenance. Active maintenance reduces the risk of bugs/errors and so a higher frequency indicates a reduced risk. However, it should be noted that as a package stabilises over time, the release rate may slow. When interpreting this metric it is therefore also important to consider the package maturity."" from https://github.com/pharmaR/pharmaR.github.io/blob/master/content/risk.md

We may collect the release date of each package version from CRAN.","elong0527",175,0
"Metric for Size of code base","https://github.com/pharmaR/riskmetric/issues/66","open",2019-11-20,2021-03-31,NA,5,"""The larger the code base, the greater the risk of error"" from https://github.com/pharmaR/pharmaR.github.io/blob/master/content/risk.md

I suggest to remove this metric. The size can be defined in different ways. If it is the size of an CRAN version, it should be <= 5MB per CRAN package size and limitation.","elong0527",579,82
"Metric for Source control Availability  (public)","https://github.com/pharmaR/riskmetric/issues/63","closed",2019-11-20,2020-05-13,2020-05-13,2,"""The use of source control is good practice that facilitates development. In general it will not be possible to determine whether the maintainer is using a source code repository unless this is in the public domain."" from https://github.com/pharmaR/pharmaR.github.io/blob/master/content/risk.md

The metric may translate to if there is a github repo for an R package.","elong0527",175,0
"Metric for Website availability ","https://github.com/pharmaR/riskmetric/issues/64","closed",2019-11-20,2020-05-13,2020-05-13,4,"""It is good practice to maintain a website with further information about the package, contact details, and other supporting information."" from https://github.com/pharmaR/pharmaR.github.io/blob/master/content/risk.md

it may translate if an R package uses pkgdown.yml","elong0527",175,0
"PR TableTree documentation","https://github.com/Roche/rtables/pull/22","closed",2019-11-23,2019-11-25,2019-11-23,1,"hi @gmbecker,

I have been working on the documentation. There is an error with `add_analyzed_var`

![image](https://user-images.githubusercontent.com/7786462/69483306-78dcf680-0dda-11ea-8bf6-a31dab65b4b5.png)

I have added this issue to the project board.

Please merge my changes to your branch to avoid merge conflicts.

Adrian","waddella",0,-2
"add pkg_ref_cache.help_aliases.pkg_source fn","https://github.com/pharmaR/riskmetric/pull/68","closed",2019-11-25,2019-11-25,2019-11-25,2,"Hi @dgkf and others - great package! In my initial playing around, i noticed that the help assessment only worked for `pkg_install`, and just errored for `pkg_source`. This is an initial step to extract help aliases for the latter. It then just needs to be plugged in to a matching [`assess_export_help.pkg_source` function](https://github.com/pharmaR/riskmetric/blob/master/R/assess_export_help.R#L18) and should work, but I thought I'd leave this initial PR lightweight to start with.","mpadge",0,0
"Initial package observations","https://github.com/pharmaR/riskmetric/issues/69","open",2019-11-26,2019-12-04,NA,2,"First impression: Fanstastic work @elong0527 @kkmann @dgkf - you really have given so much thought to the package API, and done a tremendous job of thinking the whole time about future extensibility. And yes, that makes initial familiarization with the package somewhat more burdensome than it might otherwise be, but the extensibility will be critical to future success and adoption of the package, so it is very clearly worthwhile.

So as @dgkf already knows, rOpenSci are embarking upon a new endeavour to develop a system to peer-review explicitly *statistical* software packages. Among many other necessities will be the development of tools to assess the ""quality"" of software (whatever that might be deemed to be). Neither we nor you want to expend effort repeating prior development efforts of other people, and so ... i'm pretty confident at this very early stage that i can say that we will build at least part of the system directly on `riskmetric`. To that end, I have devoted quite some time familiarizing myself with the package, and so offer, in the tradition of rOpenSci reviews, the following observations. Please note that I have done nothing but engage in the *easy* job of armchair criticism here. Accordingly, please do not interpret any of the following as implying any degree of overt criticism of the package as a whole, which really is very impressive. The observations are merely made in the hope that addressing them may serve to improve the package even more.

I'll focus here only on the meta-level of package functionality as presented in the vignettes, and so divide this in to the corresponding sections.

## Main vignette

- The main vignette jobs a pretty good job of explaining the principles on which the package is built. These principles, and particularly the general `pkg_ref` -> `assess` -> `score` workflow is utterly necessary to understanding how the package works, so I'd suggest it is critical to at least briefly explain these steps, and their individual and collective importance, in the README, rather than the current state of explaining them only in the vignette. Most users will want and expect to be able to at least get started through just scanning the README, yet this is not currently possible. At the very least, you could have a disclaimer in the README clarifying that it is necessary to read the main vignette in order to know how to use the package.

- No criticism here, but these three core steps really are (in my opinion at least) a brilliant way of accommodating flexibility at all crucial stages of specifying both *what* and *how* metrics are to be assessed and scored. This truly is a lovely implementation - painless, intuitive, and extensible.

- The ""core verbs"" section serves no real purpose as is, because it does not explain what they are, and so leaves a reader doing little other than wondering what they are supposed to do with that section. I'm not sure whether you mean to imply that the core verbs are: `""assess""`, `""score""`, and `""summarise""`, or something else? The link to the Extending vignette does no help to clarify at that juncture.

- Under `""assess""`, I'd suggest breaking the first bit prior to, ""For example ... NEWS files ..."", and clarify that available assessments can be seen with the `all_assessments` function, and then have a dump of the output of that in the vignette itself. The text of the ""Adding and Assessment"" bit of the Extending vignette could very well live in the first vignette, where it would greatly help to understand the importance of Assessments at the outset.

- It might help to explain in this first vignette the two primary classes of objects produced by the package: `pkg_ref` and `pkg_metric` objects, and explain how these are related to the `pkg_ref` -> `assess` -> `score` workflow. It would also seem to me to be necessary to explicitly describe the relationship between the output of `assess` and a `pkg_metric` object, because this is currently not explained anywhere, yet understanding that relationship would be of great help in understanding the overall package.

- In fact, it would probably help a lot to initially focus on a `pkg_ref` -> `pkg_metric` workflow (which works perfectly, even though one would not suspect that from `?pkg_metric`, which is currently not particularly helpful). Once i understand that, then understanding `pkg_ref` -> `assess` becomes much easier, because `assess` just yields a meta-collection of `pkg_metric` objects. (The `pkg_metric()` *function* is in fact really useful at prying in under the hood here, so i really would suggest bringing that more to the (documentation) fore. Current description:
  > A helper for structuring assessment return objects for dispatch with the score function

  ... is not really accurate at all. It actually generates a `pkg_metric` object as part of the `assess` function.)


## Extending riskmetric

- I think it would be useful at the outset of this vignette to explain the four classes of `pkg_ref` object (`""pkg_remote"", ""pkg_install"", ""pkg_source"", ""pkg_missing""`) (or maybe just the first 3, i guess?). Then just explain that the Assessment methods are dispatched for each class of `pkg_ref` object. As is, you say that,
  > We’ll focus on just the generic and the pkg_install functions

  but i've no idea at that point what ""the pkg_install functions"" means, so - in the context of the text as currently written - you've lost me from that point on.

- You say that from the `""assess""` function, 
  > a pkg_metric object is returned, which stores arbitrary data pertaining to the metric and importantly adopts a unique subclass for the assessment function.

  but this function actually just returns a tibble with no special class attributes, right? Some but not all of the items of that tibble are `pkg_metric` objects (... and see the above comments about `pkg_ref` and `pkg_metric` objects...)

- The need to jump straight into caching is a bit confusing. It would seem necessary to explicitly explain the the entire package *only* works via a caching system. You currently have
  > Now, for our new metric, we want to cache the package name’s first letter.

  but i am also free to read it at that point and think, ""No, i don't want to cache it; i just want to try to write a first assessment function without this pesky caching, and can always add that later, right?"" - Nope, not right, because caching is essential and integral to package functioning. This should be explained simply and mechanistically at this point, along the lines of ""all assessment functions work by caching .."" and describe simply but precisely how calls to `pkg_ref` rely on `pkg_ref_cache`. (The section itself is called ""Example Metadata Caching"", which is further unhelpful in that context but connoting that it really is not necessary, yet it is actually absolutely essential here.)


## General comments

I'll just offer one initially, regarding function names, the main ones of which are arguably somewhat overly generic: `assess`, `score`, and `coverage` will almost certainly meet namespace conflicts at some stage (and yes, `coverage` directly calls the `covr` function of the same name, but loading this package will still issue a namespace conflict warning, which is an undesirable side-effect). As recommended in the [rOpenSci guide](https://devguide.ropensci.org/building.html#function-and-argument-naming), it would perhaps be better to simply prefix these with `rm_` (so `rm_assess`, `rm_score`, and `rm_coverage`). Note, however, that `rm_` is of course used as a [common prefix for remove-type functions](https://www.rdocumentation.org/search?q=rm_), although even then mostly only in the `qdapRegex` package, so still largely free otherwise. Maybe `prm_` for package risk metric?

The package seems still ""young"" enough that this could be done with little consequence. Just a thought ...

---

Happy to open any of these as individual issues if that would help focus work addressing any of these - just let me know. I'm really looking forward to using, breaking, and extending this fabulous package. Already much indebted to you!

mark

ping @noamross @karthik","mpadge",573,565
"tiny vignette tidying","https://github.com/pharmaR/riskmetric/pull/70","closed",2019-11-26,2019-11-26,2019-11-26,0,"The main vignette one is just because it was confusingly formatted as a quote (and i took the opportunity to insert a hyperlink there).

The change in the extending vignette is important, because i read the previous version and though, oh, okay, `new_pkg_metric()` must be a function that i have to subsequently define somewhere. But no, it actually should be the generic `pkg_metric()`, with the function named after the class (`""pkg_metric_name_first_letter""`), and subsequently defined as a template specification on [`score`](https://github.com/pharmaR/riskmetric/blob/master/vignettes/extending-riskmetric.Rmd#L188-L190) - right? Happy to iterate if i have misunderstood ...","mpadge",0,0
"update man entries for roxygen7.0","https://github.com/pharmaR/riskmetric/issues/71","closed",2019-11-26,2019-12-20,2019-12-20,4,"`roxygen2` has been updated to [v7](https://cran.r-project.org/web/packages/roxygen2/index.html) which implements some formatting changes, and which changes almost all of your current `/man` entries. It'd be good for one of you to run `document()` on the package to update this, because otherwise anybody else wants to do a small PR that changes a single `/man` entry, and who has latest roxygen 7.0.0, will discover they've change *all* `/man` entries.","mpadge",24,0
"added bug reports metric","https://github.com/pharmaR/riskmetric/pull/73","closed",2019-11-27,2019-12-20,2019-12-20,1,"- added metric based on percentage of last 30 issues on BugReports repository that have been closed
- added `scrape_bug_reports` as a small helper function for dispatching scraping mechanism based on BugReports host name. currently implemented hosts:
  - GitHub
  - GitLab 
","dgkf",23,0
"adding license metric","https://github.com/pharmaR/riskmetric/pull/72","closed",2019-11-27,2021-03-31,2019-12-04,0,"- added a metric to extract the license from the `DESCRIPTION` data
- currently `score.pkg_metric_license` just returns `NA` until we gather some sort of basis for what licenses should be whitelisted by default","dgkf",7,-483
"`extending-riskmetric` Vignette updates","https://github.com/pharmaR/riskmetric/issues/75","closed",2019-12-06,2020-04-13,2020-04-13,0,"From @mpadge's feedback in #69, we have a number of suggestions and issues to address in the `extending-riskmetric` vignette.

- [x] Include (perhaps start with) a section on the various `pkg_ref` S3 classes and subclasses. As highlighted in the initial issue thread, there is some omission of information that can be confusion (not introducing `pkg_install` prior to jumping into an example.
   > @mpadge dge #69
   > It would be useful at the outset of this vignette to explain the four classes of `pkg_ref` object (`""pkg_remote"", ""pkg_install"", ""pkg_source"", ""pkg_missing""`) (or maybe just the first 3, i guess?). Then just explain that the Assessment methods are dispatched for each class of `pkg_ref` object.
- [x] Correct `assess` function description in vignette
  > @mpadge #69
  > You say that from the `""assess""` function,
  >>a pkg_metric object is returned, which stores arbitrary data pertaining to the metric and importantly adopts a unique subclass for the assessment function.
   >
   > but this function actually just returns a tibble with no special class attributes, right? 
- [x] Introduce centrality of caching behavior
   > @mpadge #69
   > The need to jump straight into caching is a bit confusing. It would seem necessary to explicitly explain the the entire package only works via a caching system. ","dgkf",129,0
"`riskmetric` ""Main"" Vignette updates","https://github.com/pharmaR/riskmetric/issues/74","closed",2019-12-06,2020-02-12,2020-02-12,0,"Copying a few remarks from @mpadge's feedback in #69

- [x] Improve main vignette characterization and clarity of core verbs
   > @mpadge #69 
   > The ""core verbs"" section serves no real purpose as is, because it does not explain what they are, and so leaves a reader doing little other than wondering what they are supposed to do with that section. I'm not sure whether you mean to imply that the core verbs are: `""assess""`, `""score""`, and `""summarise""`, or something else? The link to the Extending vignette does no help to clarify at that juncture.
- [x] Restructure ""assess"" section
   > @mpadge #69 
   > Under ""assess"", I'd suggest breaking the first bit prior to, ""For example ... NEWS files ...""
- [x] Include an output of `all_assessments` 
   > @mpadge #69
   > clarify that available assessments can be seen with the all_assessments function, and then have a dump of the output of that in the vignette itself.
- [ ] Include an abbreviated ""Adding an Assessment"" section (from the ""extending-riskmetric"" vignette or link to ""extending-riskmetric"" vignette?
   > @mpadge #69
   > The text of the ""Adding and Assessment"" bit of the Extending vignette could very well live in the first vignette, where it would greatly help to understand the importance of Assessments at the outset.
- [x] Include an overview of the classes used within the riskmetric package and map the objects to the inputs/outputs of the ""core verbs""
   > @mpadge #69
   > It might help to explain in this first vignette the two primary classes of objects produced by the package: `pkg_ref` and `pkg_metric` objects, and explain how these are related to the `pkg_ref` -> `assess` -> `score` workflow. It would also seem to me to be necessary to explicitly describe the relationship between the output of assess and a pkg_metric object, because this is currently not explained anywhere, yet understanding that relationship would be of great help in understanding the overall package.
- [ ] Touch up `pkg_metric` documentation
  > @mpadge #69
  > ?pkg_metric, which is currently not particularly helpful
- [x] Consider reworking order of concept introduction to introduce the `pkg_ref` -> `pkg_metric` workflow earlier
   > @mpadge #69
   > In fact, it would probably help a lot to initially focus on a pkg_ref -> pkg_metric workflow. Once i understand that, then understanding `pkg_ref` -> `assess` becomes much easier, because assess just yields a meta-collection of `pkg_metric` objects. (The `pkg_metric()` function is in fact really useful at prying in under the hood here, so i really would suggest bringing that more to the (documentation) fore.

","dgkf",68,0
"Mitigating namespace conflicts","https://github.com/pharmaR/riskmetric/issues/77","closed",2019-12-06,2020-06-24,2020-06-24,13,"As @mpadge raised in #69, we run a bit of a risk of over generalizing our function names. I think this is a valid concern given the over-generality of our naming conventions.

Given that these functions are more specific than their current names really warrant, I'd personally prefer to make the function names reflect the specificity instead of solving the problem by adding a package prefix. Perhaps we could consider something like:
- `assess_package` or `assess_metric`
- `score_package` or `score_metric`

@mpadge also highlighted our vestigial `coverage` function that I think is an artifact of some early work that was done to try to explore some coverage assessments well before the rest of the structure of the package was in place. Given how much things have changed since then, I think we can scrap that code and work it back in once we want to tackle some of the more computationally intensive metrics like cohort, package and function test coverage.","dgkf",201,0
"README updates","https://github.com/pharmaR/riskmetric/issues/76","closed",2019-12-06,2020-01-15,2020-01-15,0,"From @mpadge's feedback in #69, it would be great if we could include more details about the core worfklow in the repo README. Although I think a general pass over the README would be good, here are some specific things raised by @mpadge:

- [x] Improve README to cover the core workflow of the package
   >@mpadge #69
   >The main vignette jobs a pretty good job of explaining the principles on which the package is built. These principles, and particularly the general `pkg_ref` -> `assess` -> `score` workflow is utterly necessary to understanding how the package works, so I'd suggest it is critical to at least briefly explain these steps, and their individual and collective importance, in the README, rather than the current state of explaining them only in the vignette.
- [x] Adding one of my own: Make the sprint info a bit more generic. It's currently outdated (""Starting Time: 2019/11/06 12:00 PM - 12:30 PM""). Perhaps we could find a way for anyone to get a calendar invite that contains the webex link and move to a more generic schedule such as ""1st and 3rd Wednesday of the month"" so that we don't have to worry about keeping the README up to date. ","dgkf",40,0
"Update README.md","https://github.com/pharmaR/riskmetric/pull/78","closed",2019-12-17,2020-09-10,2019-12-19,0,"update readme file suggested in #76.","elong0527",2,-266
"Major documentation overhaul - Main vignette and core function updates","https://github.com/pharmaR/riskmetric/pull/80","closed",2019-12-20,2019-12-20,2019-12-20,0,"- Updated documentation to **roxygen2 7.0.2**
- Rewrote the ""Getting Started"" vignette
  - Has clearer breakdown of steps with links to documentation
  - Included diagram of core workflow
  - Introduced topics with a single package first, before introducing the multi-package workflow
- Updated `pkg_ref` documentation
- Updated `pkg_ref_cache` documentation
- Updated `assess` documentation to include a catalog of included assessments","dgkf",0,0
"Minor refactoring for code style and structure consistency","https://github.com/pharmaR/riskmetric/pull/79","closed",2019-12-20,2019-12-20,2019-12-20,0,"- Moved `pkg_ref_cache.downloads` to separate file to be consistent with other `pkg_ref_cache` field implementations
- Updated some spacing and 80 char line width in roxygen headers","dgkf",0,0
"Coersion of pkg_ref subclasses & related user-facing functions","https://github.com/pharmaR/riskmetric/issues/81","open",2020-01-15,2020-01-15,NA,0,"There's one lingering piece of the initial package scope that we have yet to implement, and it pertains specifically to situations where package metrics can _only_ be calculated with a subset of `pkg_ref` subclass objects. 

### Example

With a `pkg_source` object you have complete access to a clone of the package source code and could evaluate it against its test suite. We've talked about alternative ways of scraping code coverage for other `pkg_ref` classes, such as trying to strip the coverage percentage out of a badge of CI integration, but those might be misleading. Instead, with a `pkg_remote` package reference, it might be preferred to first coerce the `pkg_remote` to a `pkg_source` to evaluate a test suite yourself.

### Scope

This can be broken down into a few tasks:
1. Define casting operations between `pkg_ref` subclasses
2. Consider how to expose these casting operations to the user
3. Try to devise intuitive mechanisms of performing these casting operations automatically

### End User Experience

To the end user there are a couple different workflows:

1. A user creates a list of `pkg_ref`s, (e.g. `pkg_ref(c(""tidyr"", ""survival"", ""lme4""))`) and first calls some function to try to coerce them all to source references, using remote information as needed to try to find the source code and downloading the source code to a local temporary library. 

    This might look like:

    ```r
    pkg_ref(c(""tidyr"", ""survival"", ""lme4"")) %>%
      pkg_ref_cast(pkg_source()) %>%
      as_tibble() %>%
      assess() %>%
      ...
    ```   

    This method is probably more rigorous, as it is clear how the information is gathered.

2. A user defines logic by which metrics which can only be calculated with a subset of `pkg_ref` subclasses get coerced. For example, if a user says that they want to coerce `pkg_ref` subclasses such that the most possible metrics can be calculated, then `riskmetric` automatically handles the coersion to whichever subclass that is and runs all of the metrics. 

    This might look like:

    ```r
    pkg_ref(c(""tidyr"", ""survival"", ""lme4"")) %>%
      as_tibble() %>%
      assess(cast = cast_by_metric_coverage) %>%
      ...
    ```   

    This method might be preferred if a user wants things to work quickly. Specifically for situations where a metric is defined for multiple `pkg_ref` subclasses, but where one implementation is considered more robust than another, this method might not produce the most robust results without some sort of casting logic that takes this ""robustness"" into consideration, necessitating some sort of metadata about the metric that `riskmetric` can use to rank implementations.

","dgkf",523,523
"Identify the way to collect release date on CRAN","https://github.com/pharmaR/riskmetric/issues/85","closed",2020-01-15,2020-05-13,2020-05-13,4,"","elong0527",119,0
"Input required from larger group discussion","https://github.com/pharmaR/riskmetric/issues/86","closed",2020-01-15,2020-01-16,2020-01-16,2,"
#67 

#66 

#65 ","elong0527",1,0
"Meta-issue: Characterize metrics more thoroughly","https://github.com/pharmaR/riskmetric/issues/83","closed",2020-01-15,2020-04-15,2020-04-15,1,"Our metric proposals can always benefit from thoughtful discussion about the nuances of their implementation. Often even the most straightforward metrics have edge cases that make implementation for at least one source of package metadata more complicated than expected.

In particular, we have a few recent metric proposals that seem straightforward at face value, but could use some consideration before they could be tackled. Please consider participating in the discussion for these issues to help think through how they would be implemented for our various sources of package metadata (from source code, a local installation, a CRAN or Bioconductor package webpage, or GitHub or GitLab source code repository). 

- [**Metric for Size of code base**](https://github.com/pharmaR/riskmetric/issues/66)
- [**Metric for Release Rate**](https://github.com/pharmaR/riskmetric/issues/65)
- [**Metric for Website availability**](https://github.com/pharmaR/riskmetric/issues/64)

Perhaps we should come up with an issue tag like, ""Spec Needed"" or ""Open Discussion"" for metric proposals that still need a bit of characterization before we can expect someone to pull it off the shelf and implement it?","dgkf",91,0
"Metric: Cyclomatic complexity","https://github.com/pharmaR/riskmetric/issues/82","open",2020-01-15,2020-09-02,NA,1,"[Cyclomatic complexity](https://en.wikipedia.org/wiki/Cyclomatic_complexity) is a measure of the complexity of code that is well established in computer science literature. 

There is an R package out there for doing this calculation [`cyclocomp`](https://cran.r-project.org/web/packages/cyclocomp/)

It would be great if this could be calculated as one of the metrics, but it's an involved calculation that probably requires at the very least a locally installed version of a package from which we can run the `cyclocomp` function against each function body. It's unclear whether this will consider the internals of a function call or recursive function calls. ","dgkf",523,292
"New metrics from MangoDB","https://github.com/pharmaR/riskmetric/issues/87","closed",2020-01-15,2020-01-16,2020-01-16,2,"add one new metric proposal from MangoDB","elong0527",1,0
"Updated Vignette review and feedback ","https://github.com/pharmaR/riskmetric/issues/84","closed",2020-01-15,2020-04-13,2020-04-13,2,"Once #74 and #75 completed. Review the Vignette and provide feedbacks. ","elong0527",89,0
"Add a license","https://github.com/openpharma/visR/issues/1","closed",2020-01-24,2020-03-24,2020-03-24,2,"Can we chuck in a license? Something that says we have no liability or warranty, and make sure it's not copy left (e.g. you can use the code for anything).","epijim",60,0
"Adding example function and vignette","https://github.com/openpharma/visR/pull/3","closed",2020-02-03,2020-02-09,2020-02-09,2,"I have added a function and test in this branch along with a vignette. There is also a template pkgdown site added. Can you check this plays nice with the development branch?","bailliem",6,0
"Code principles - road to a CONTRIBUTING.md","https://github.com/openpharma/visR/issues/2","closed",2020-02-03,2020-05-22,2020-05-22,6,"What are the core things that need to be decided in order to move towards to a simple but expandable way to structure the package?","epijim",109,0
"Ask about possibility of contribution","https://github.com/openpharma/visR/issues/4","closed",2020-02-06,2020-05-14,2020-05-14,1,"I was asked by @epijim if I could contribute in this project and that's why I would ask you about such possibility. @cschaerfe @diego-s  @bailliem  if these functions already initiated like for example:  `vr_plt_kaplan_meier.R` and `vr_sankey.R `are already in progress / during implementation or not? If not and this assignments in comments are not finally set then I would be happy to work on this.  Or maybe do you have any other kind of visualization-functions or other job to do which is still not initiated?    ","kawap",98,0
"add _has_vignettes metric","https://github.com/pharmaR/riskmetric/pull/88","closed",2020-02-10,2020-02-18,2020-02-18,6,"@dgkf 

Could you help me understand the trick for the `assess` function? Here is the code I test, it is success in the `pkg_ref` but fail in `assess` part. 

```
library(devtools)
load_all()

tmp <- pkg_ref(c(""EIX"", ""dplyr"", ""smcure""))
lapply(tmp, function(x) x$vignettes)
lapply(tmp, function(x) nrow(x$vignettes) )

assess_has_vignettes(tmp)
```","elong0527",8,0
"Unit testing plan","https://github.com/pharmaR/riskmetric/issues/89","closed",2020-02-12,2020-06-24,2020-06-24,2,"
* list items to be tested. 

* class construction, 
* limitation of API for github (Does CI/CD server allow for this?) ","elong0527",133,0
"Create LICENSE","https://github.com/openpharma/visR/pull/5","closed",2020-02-13,2021-03-03,2020-02-13,0,"Added MIT License as agreed upon from Roche and Novartis side. Packaged version may need GPL, but for code MIT was deemed ok.","cschaerfe",0,-384
"Treatment Flow Plots (Sankey) and requirements","https://github.com/openpharma/visR/issues/6","closed",2020-02-13,2020-03-23,2020-03-23,0,"Hi @kawap,

here is a little writup on our requirements for Alluvial/Sankey plots which are often used for assessing patterns in patient flow, e.g., consecutively received treatments

There are some requirements for the plotting that one needs to take into account based on feedback we have received from scientists working with the output
* data wrangling and plotting should be 2 different functions
  * wrangling should result in a table with line of treatment, treatment name, pateint count and frequency (incl. those ""lost"" in each step)
  * visualisation then focus on showing that data as sankey plot
  * ideally, this is generic enough to not only focus on treatment, but any other kind of sequential data
* plotting functions should include annotation of plot with title (can be empty string), number of samples, and datasource in footnote
* has to work with the ggplot2 ecosystem (e.g., styling, adding titles etc.)
* shown data should include death/censoring, no later treatment (i.e., those patients lost to later observations)
* data needs to be interpretable in static form (containing information such as name of therapy and frequency)
* treatment groups should have meaningful order (or should be easily changeable)
* color scheme should match other analyses (i.e., fct. should have option to define custom color palette)
* _optional: interactive version can hide some of the annotation and make visible through mouse-over etc._

There are a few sankey packages out there that may be useful in this context. Selecting which one is up to the discretion of whoever writes the visr function:
* https://github.com/corybrunson/ggalluvial
* https://ggforce.data-imaginist.com/reference/geom_parallel_sets.html
* https://erblast.github.io/parcats/
* https://github.com/Displayr/flipPlots (example here: https://www.r-graph-gallery.com/sankey-diagram.html)

@diego-s and @bailliem please add to this if I forgot anything important
","cschaerfe",39,0
"Improved null unit check","https://github.com/Roche/ggtips/pull/26","closed",2020-02-14,2020-02-14,2020-02-14,0,"In some cases rowHeight may be returned from a grob as a 1-element `unit.list` object instead of a `unit` object. `isNullUnit` function doesn't recognise such objects properly and returns FALSE for `1null` unit nested in `unit.list`. Finally, the height of row with hidden panels is 0 instead of the proper value.
As the result, tooltips are not displayed in plots with visible empty rows because coordinates are incorrect (total plot height < expected).","mjakubczak",0,0
"Address WARNINGS & NOTES in R CMD check","https://github.com/pharmaR/riskmetric/issues/90","closed",2020-02-18,2020-03-12,2020-03-12,0,"> **_From an email to the PSI group email address_**
> I am attending the pharmar meeting right now and donwloaded your riskmetric package from github, then run
    `R CMD check riskmetric_0.1.0.9000.tar.gz`
on Windows 64 Bits with a French locale.
>Attached is my 00check.log file => 4 WARNINGs, 3 NOTEs
There is something wrong with the object '.DollarNames' and with the object 'as_pkg_ref':   'repos'

#### Exerts from the check logs:

```
namespace load failed for 'riskmetric':
 object '.DollarNames' not found whilst loading namespace 'riskmetric'
Execution halted
```

```
Rd files with duplicated name 'pkg_ref_cache':
  'pkg_ref_cache.Rd' 'riskmetric_metadata_caching.Rd'
Rd files with duplicated alias 'pkg_ref_cache':
  'pkg_ref_cache.Rd' 'riskmetric_metadata_caching.Rd'
```

```
Documented arguments not in \usage in documentation object 'as_pkg_ref':
  'repos'
```

```
Undocumented arguments in documentation object 'bug_report_metadata'
  'bug_reports_data' 'x'
```

#### Solutions

- I think we need to include `@importFrom utils .DollarNames` for `.DollarNames`. I didn't realize `.DollarNames` wasn't in base and/or had to be explicitly imported for S3 dispatch on another package's generic.
- Clean up some documentation, specifically for `bug_report_metadata` and `bug_reports_data`
- Track down where our duplicate Rd names are coming from.","dgkf",23,0
"Addressess R CMD check issues, Resolves #90","https://github.com/pharmaR/riskmetric/pull/91","closed",2020-02-18,2020-03-12,2020-03-12,1,"- Added `@importFrom utils .DollarNames` to fix warning about unknown `.DollarNames`
- Fixed some lingering param names that were causing warnings
- Handled error during `R CMD check` caused by examples that require an internet connection (specifically for ones that can hit a free API daily query limit like GitHub and GitLab APIs)
- Cleaned up a bit of `.gitignore` handling of vignettes
- Renamed ""score_family_roxygen"" to ""roxygen_score_family"" to be consistent with ""roxygen_assess_family""
- Bumped development version number","dgkf",23,0
"add draft tidy function to sc.","https://github.com/openpharma/visR/pull/7","closed",2020-02-20,2020-02-20,2020-02-20,0,"testing a pull request to add draft function. helper function to tidy rbest gmap object. ","bailliem",0,0
"BugReports error for pkg_install class object","https://github.com/pharmaR/riskmetric/issues/92","closed",2020-02-21,2020-09-17,2020-09-17,2,"I stumbled upon this specifically with the `nlme` package, which I have installed in my local library.

```r
x <- pkg_ref(""nlme"")
stopifnot(inherits(x, ""pkg_install""))  # check to confirm it's installed
x$bug_reports
```

Interestingly, `x$bug_reports_host` is somehow just set to `bugs`.
","dgkf",209,0
"Include checksum validation of package source in pkg_ref constructor","https://github.com/pharmaR/riskmetric/issues/93","open",2020-02-21,2020-02-21,NA,0,"We have a light `pkg_ref` constructor at the moment that lets us move forward with the `assess` and `score` dispatch system, but long term we need to clean this up to include a few extra features.

Namely, one critical one will be the checksum validation such that we can be extra rigorous about what source code or library install is actually being assessed. There's probably a lot we can learn (or use) from the [`renv` package's hashing techniques](https://github.com/rstudio/renv/blob/master/R/hash.R), potentially even using their hashing approach so that a library can be both installed and validated from an `renv.lock` file.

```r
pkg_ref(name = ""dplyr"", md5 = ""<md5 hash>"")
```

As metadata scraped from the web can easily be outdated or misleading, it might be necessary to throw an error when a checksum is passed and a reference can only be found remotely. 

Open for further consideration!","dgkf",486,486
"Rbest","https://github.com/openpharma/visR/pull/8","closed",2020-02-23,2020-02-23,2020-02-23,0,"Complete rbest tidy function. 
Remove data-raw and facet barchart notebook. 
TODO: complete main forest plot function","bailliem",0,0
"Vr forest plot","https://github.com/openpharma/visR/pull/9","closed",2020-02-23,2020-02-23,2020-02-23,0,"move branch into rbest","bailliem",0,0
"Vr forest","https://github.com/openpharma/visR/pull/10","closed",2020-02-26,2020-02-28,2020-02-26,0,"WIP: add outline of forest plot function to take in tidied data frame","bailliem",0,-2
"Setup usethis","https://github.com/openpharma/visR/pull/11","closed",2020-02-27,2020-10-13,2020-03-04,0,"Hi, I've set up usethis, testthat and pkgdown on this branch. I had to update a couple of functions missing roxygen headers, explicit calls to library dependencies (i.e. dplyr::mutate()), etc. 

To deploy the documentation github pages has to be set up to publish the docs/ folder. 

I would propose to either merge with develop if you are both happy, or set this as the develop branch. 

There were a number of warnings in the build, luckily no errors...

The workflow to build is here: https://www.hvitfeldt.me/blog/usethis-workflow-for-package-development/ or:
Restart R Session Cmd+Shift+F10 (Ctrl+Shift+F10 for Windows)
Document Package Cmd+Shift+D (Ctrl+Shift+D for Windows) [this devtools::document()
Check Package Cmd+Shift+E (Ctrl+Shift+E for Windows)

To build the pkgdown site call afterwards:
pkgdown::build_site()
","bailliem",6,-223
"Combined KM Plot and tables for faceting","https://github.com/openpharma/visR/issues/14","closed",2020-03-06,2020-05-26,2020-05-26,2,"When stratifying, it is sometimes useful to use ggplot's faceting (`facet_grid` and `facet_wrap`) However, this only works (if at all) only for the KM plot (e.g., when using survminer, but also visR), but it would be really useful to also have the risk table for each facet. 
Maybe this is something we could implement in the future?","cschaerfe",81,0
"Hard coded column names in ggplot call for vr_plot_forest.R","https://github.com/openpharma/visR/issues/12","closed",2020-03-06,2020-05-22,2020-05-22,1,"https://github.com/openpharma/visR/blob/91d87cbb5349d0b85aa7410cdfa72e0c3e8fcc6e/R/vr_plot_forest.R#L25

@bailliem This line has the columns `study` and `row_id` hard-coded(I guess from the crohn's dataset) which will likely break in all other cases. Do we need this function here or is the ordering sth. we should do separately?","cschaerfe",77,0
"start tracking the functions attrition_table and kaplan_meier_summary","https://github.com/openpharma/visR/pull/13","closed",2020-03-06,2020-03-06,2020-03-06,0,"Added the functions to generate OS summary tables and calculate cohort attrition.","thanos-siadimas",0,0
"Add list of contributors to README","https://github.com/Roche/ggtips/issues/28","closed",2020-03-10,2021-05-26,2021-05-26,1,"There should be list of users that added code, they can be extracted from commits so this can be automated.

","jcubic",442,0
"Enable polygon points for tooltips","https://github.com/Roche/ggtips/pull/27","closed",2020-03-10,2020-03-10,2020-03-10,0,"Polygon-type ggplot2 points, like filled squares (shape 15), triangles (shape 17) or diamonds (shape 18) are not available for ggtips. This small change enables them.","mjakubczak",0,0
"vr_attrition_table.R breaking installation","https://github.com/openpharma/visR/issues/15","closed",2020-03-10,2020-03-10,2020-03-10,1,"This line is breaking the installation of the package with the message ""Error in eval(parse(text = final_cond)) : object 'cancer_type' not found"". Can someone (maybe @thanos-siadimas) have a look?

https://github.com/openpharma/visR/blob/b4a85542eeeb26b350348a0720e2e305c4dd8bda/R/vr_attrition_table.R#L71","cschaerfe",0,0
"Multiple branches in a cohort attrition diagram","https://github.com/openpharma/visR/issues/16","closed",2020-03-11,2020-05-22,2020-05-22,1,"Currently the package supports a single tree and a single branch in a cohort attrition diagram.  It would be great if the package can allow the users to add multiple branches (like having subset of samples).","jinjooshim",72,0
"Spec out metrics for web app","https://github.com/pharmaR/riskmetric/issues/94","open",2020-03-12,2020-06-03,NA,9,"@elong0527 @andyofsmeg @emdserono 

The broader R Validation Hub will be planning to deliver a web app as a standalone tool for organization risk assessment report generation and they've asked that we give some guidance on what can be reliably built upon from `riskmetric`.

There are a few things we need to consider to help that team scope out their work.

### Metrics

So far we have these metrics completed or partially completed:
- downloads in last year (integer)
- exported objects with documentation (percentage)
- package has news (logical)
- package has vignettes (logical)
- status of last 30 reported bugs (percentage)
- license (NA - up to organization)
- news is current (logical)

We should scope out which metrics additionally need to be completed. At a minimum, we need to provide the expected output format of the metric assessment. Just to list a few, I would suggest the following as targets in increasing difficulty:

|Status|Metric|Notes|
|:-:|---|---|
|✅|has website|`$pkg_websites` implemented, still need `assess_has_website_url`, `score.pkg_metric_has_website_url`|
|✅|has BugReports| `$bug_reports_url` implemented, need `assess_has_bug_reports`, `score.pkg_metric_has_bug_reports` (#100)|
|✅|has a maintainer|`$maintainer` implemented, need `assess_has_maintainer`, `score.pkg_metric_has_maintainer` (#55)|
|✅|source code is public|`$source_control_url` implemented (but currently not visible due to bug addressed in #117), need `assess_has_source_control_url`, `score.pkg_metric_has_source_control_url` (#63)|
|❓|time since first release|`$archive_release_dates` implemented only for `cran_remote`s, scoring under consideration (#65, #85)|
|❓|time since version release|`$release_date` implemented, scoring under consideration (#65, #85)
| ✅|test coverage| finished for `pkg_install` only, `pkg_source` under consideration (#6)|

### Assessment Caching 

One thing that came up is the possibility of storing metric assessment scores as a data intermediate encompassing the time that the assessment occurred, the package metadata, assessed information and scored metrics. 

This might be deemed out of scope in the first pass, but if risk assessment times grow too long for an interactive app we may have to think about some ways to do caching. 

The easiest solution would be to save out the results dataset as a `.Rds`, but if generalizability is needed we might have to consider a machine readable intermediate. Given the focus on atomic intermediate assessment datastructures, I don't think this should be too difficult, but does pose additional development work. ","dgkf",466,383
"Merge into master to enable github pages","https://github.com/openpharma/visR/pull/17","closed",2020-03-18,2020-03-18,2020-03-18,0,"","diego-s",0,0
"Add Alluvial functions. ","https://github.com/openpharma/visR/pull/18","closed",2020-03-23,2020-03-23,2020-03-23,0,"Treatment flow plots and data wrangling.  Close #6 ","kawap",0,0
"Add Alluvial functions.  (#18) -- into develop-tidy up","https://github.com/openpharma/visR/pull/19","closed",2020-03-23,2020-03-23,2020-03-23,0,"* add vr_alluvial_plot.R and vr_alluvial_wrangling.R instead of vr_sankey.R

* Color palette change options and other improvements

* Create notebooks/alluvial.Rmd

* Updated NAMESPACE

Co-authored-by: Kawski, Pawel {FISV~Poznan} <pawel.kawski@contractors.roche.com>","bailliem",0,0
"Add title and data source to attrition flow chart","https://github.com/openpharma/visR/issues/25","closed",2020-03-24,2020-06-01,2020-06-01,1,"Following the principle that every output should have a title and a reference to the underlying data source, we should add such a feature also to `vr_attrition`.

Ideally, this would be two parameters following terminology of other vr functions and be an integral part of the resulting image.","cschaerfe",69,0
"Fix hard-coded time column in vr_est_km_risk_table","https://github.com/openpharma/visR/issues/24","closed",2020-03-24,2020-04-02,2020-04-02,0,"With the switch to using equations in the KM functions, we need to fix the hardcoded reference to `data$time` in vr_est_km_risk_table. I guess it should be possible to extract the column name from the equation?

https://github.com/openpharma/visR/blob/1c1d6757f977ebfb31812ef307e1fe274a0aa943/R/vr_est_km_risk_table.R#L48","cschaerfe",9,0
"Minor update to namespace and rebuild of documentation","https://github.com/openpharma/visR/pull/23","closed",2020-03-24,2020-03-24,2020-03-24,0,"","bailliem",0,0
"staging all files","https://github.com/openpharma/visR/pull/22","closed",2020-03-24,2020-03-24,2020-03-24,0,"rebuild for 3.6.1. ","bailliem",0,0
"Update master with new version of develop","https://github.com/openpharma/visR/pull/21","closed",2020-03-24,2020-03-24,2020-03-24,0,"","bailliem",0,0
"WIP:Develop tidy up","https://github.com/openpharma/visR/pull/20","closed",2020-03-24,2020-03-24,2020-03-24,0,"Initial review of function documentation and examples. 
* Identified a couple of issues with working examples. Check TODO on function
* Added dependencies for parcat
* WIP: Start to add unit tests","bailliem",0,0
"PR on branch","https://github.com/openpharma/visR/pull/27","closed",2020-03-25,2020-03-25,2020-03-25,0,"Add an update to vr_rbest function into branch","bailliem",0,0
"Set up CI/CD workflow","https://github.com/openpharma/visR/issues/26","closed",2020-03-25,2020-06-09,2020-06-09,3,"Post webinar set up a CI/CD workflow including
* unit tests
* dependencies 
* styling and linting
* documentation build
* website build
","bailliem",76,0
"Updates to documentation, default formatting and minor fixes","https://github.com/openpharma/visR/pull/28","closed",2020-03-25,2020-03-25,2020-03-25,0,"","cschaerfe",0,0
"rebuild documentation","https://github.com/openpharma/visR/pull/29","closed",2020-03-26,2020-03-26,2020-03-26,0,"","bailliem",0,0
"Add Icon to Readme","https://github.com/openpharma/visR/pull/30","closed",2020-03-27,2020-03-27,2020-03-27,0,"","bailliem",0,0
"Shift icon down from title heading","https://github.com/openpharma/visR/pull/31","closed",2020-03-27,2020-03-27,2020-03-27,0,"Minor edit to move icon for better rendering on mobile device. ","bailliem",0,0
"Add alluvial notebook to vignettes","https://github.com/openpharma/visR/pull/33","closed",2020-03-31,2020-03-31,2020-03-31,0,"","bailliem",0,0
"Align develop with master","https://github.com/openpharma/visR/pull/40","closed",2020-03-31,2020-03-31,2020-03-31,0,"Retain minor fixes to pkgdown rendering of both vignettes. Alluvial to alluvial.html","bailliem",0,0
"Develop tidy up","https://github.com/openpharma/visR/pull/32","closed",2020-03-31,2020-10-13,2020-03-31,0,"Add alluvial vignette","bailliem",0,-196
"How many significant digits after decimal point in tables?","https://github.com/openpharma/visR/issues/39","closed",2020-03-31,2020-06-07,2020-06-07,1,"The number of significant digits may change. At the moment, we mainly implement 2 or 3 digits after the decimal point, but this should probably be discussed further.
Do we want the number of digits to be sth. the user can specify in each function (risk: parameter creep) or enforce best practices? In the latter case, what would be the best practices we can agree upon with out scientists?

Several journals provide guidances, does anyone have any thoughts on which one's are preferable?
- Report to three significant digits (https://www.bmj.com/content/350/bmj.h1845). Here the size of the ratio is to use a rule based on significant digits. (adopting 2 decimals to all fractions makes the error larger for smaller ratios). Take the example—the ratio 1.23 with two decimal places and three significant digits. Dividing and multiplying it by 10 give 0.123 and 12.3, respectively, each still with three significant digits but with varying numbers of decimal places.
- 2 digits for p-values unless smaller than 0.01, in which case 3 digits should be shown (https://jamanetwork.com/DocumentLibrary/InstructionsForAuthors/InstructionsForTableCreation.pdf)","cschaerfe",68,0
"Render alluvial vignette ","https://github.com/openpharma/visR/pull/34","closed",2020-03-31,2020-03-31,2020-03-31,0,"","bailliem",0,0
"Reporting sample versus population statistics","https://github.com/openpharma/visR/issues/38","closed",2020-03-31,2020-06-07,2020-06-07,1,"We are currently not using a harmonized nomenclature for reporting sample size etc. Based on our scientist's feedback, this is something we should change soon, not only for the summary table (table one), but also for meta-data on the figures.

From Letizia: In general, capital letters refer to population attributes (i.e., parameters); and lower-case letters refer to sample attributes (i.e., statistics). For example, P refers to a population proportion; and p, to a sample proportion. @bailliem you mentioned there is also a more extensive guidance available that we could build upon? ","cschaerfe",68,0
"Revert ""Render alluvial vignette ""","https://github.com/openpharma/visR/pull/35","closed",2020-03-31,2020-03-31,2020-03-31,0,"Reverts openpharma/visR#34
Alluvial does not render on gh-pages","bailliem",0,0
"update alluvial plot rendering","https://github.com/openpharma/visR/pull/37","closed",2020-03-31,2020-03-31,2020-03-31,0,"point to svg for attribtion figure","bailliem",0,0
"update alluvial plot rendering","https://github.com/openpharma/visR/pull/36","closed",2020-03-31,2020-03-31,2020-03-31,0,"point to svg for attribtion figure","bailliem",0,0
"Data Source caption duplicated in DT rendering of Table1","https://github.com/openpharma/visR/issues/41","closed",2020-04-01,2021-05-31,2021-05-31,3,"The caption at the bottom of a DT-rendered table seems to replicate every time the user interacts with the table (filtering, sorting etc.). 

MRE:
```
adtte %>%
  visR::estimate_KM(""TRTP"") %>%
  visR::get_pvalue() %>%
  visR::render(title = ""P-values"", 
               datasource = paste0(""Analysis data - time to event""),
               engine = ""DT"")
```
Then interact with the table.

![image](https://user-images.githubusercontent.com/3072980/78102827-9145c900-73eb-11ea-82f6-c2da705078a4.png)

Likely caused by the caption being added to the DT object in using `drawCallback = DT::JS(source_cap))`
https://github.com/openpharma/visR/blob/68941e71c083dcd6b5ff32c5c892760c0c1d5b4c/R/vr_render_table.R#L81-L88","cschaerfe",425,0
"installation","https://github.com/openpharma/visR/issues/42","closed",2020-04-01,2020-05-14,2020-05-14,2,"I have tried a number of times to install vizR on Windows, but it keeps failing. The latest failure has to do with the files/packages (?) RTCGA and RTCGA.clinical as below. What am I doing wrong or what is the bug involved?
Thanks.
James Hunter

```
√  checking for file 'C:\Users\james\AppData\Local\Temp\Rtmp8McCI4\remotes77f838e42777\openpharma-visR-0c1b345/DESCRIPTION' (893ms)
-  preparing 'visR': (557ms)
√  checking DESCRIPTION meta-information ... 
-  excluding invalid files
   Subdirectory 'man' contains invalid file names:
     'visR architecture.png'
-  checking for LF line-endings in source and make files and shell scripts
-  checking for empty or unneeded directories
-  building 'visR_0.1.0.tar.gz'
   
Installing package into ‘C:/Users/james/OneDrive/Documents/R/win-library/3.6’
(as ‘lib’ is unspecified)
ERROR: dependencies 'RTCGA', 'RTCGA.clinical' are not available for package 'visR'
* removing 'C:/Users/james/OneDrive/Documents/R/win-library/3.6/visR'
Error: Failed to install 'visR' from GitHub:
  (converted from warning) installation of package ‘C:/Users/james/AppData/Local/Temp/Rtmp8McCI4/file77f8328a59f6/visR_0.1.0.tar.gz’ had non-zero exit status
```","jameshunterbr",43,0
"Parse `time` column name from formula","https://github.com/openpharma/visR/pull/43","closed",2020-04-01,2020-04-02,2020-04-02,0,"This should fix #24. I converted the `equation` string to a `formula` and extracted the first element of `survival::Surv(x, y)`.","thomas-neitmann",1,0
"Pull in contributed unit tests","https://github.com/pharmaR/riskmetric/issues/95","closed",2020-04-01,2020-04-13,2020-04-13,0,"To kick off our unit testing within riskmetric, @elimillera has generously introduced some [unit tests](github.com/elimillera/riskmetric) for package reference constructors and some assessments.

Let's get these pulled in relatively soon to mitigate any conflicts in case anyone else is interested in moving forward with unit testing.

","dgkf",12,0
"Add `Remotes` for Bioconductor packages","https://github.com/openpharma/visR/pull/44","closed",2020-04-02,2020-04-09,2020-04-09,1,"This fixes the installation issue describes in #42. To automatically install packages from Bioconductor the `Remotes` field in `DESCRIPTION` has to be filled.","thomas-neitmann",7,0
"readme typo","https://github.com/openpharma/visR/pull/45","closed",2020-04-04,2020-04-06,2020-04-06,0,"- fix typo in the README","ginberg",2,0
"Merge initial tests for `pkg_ref` and `assess`","https://github.com/pharmaR/riskmetric/pull/96","closed",2020-04-05,2020-04-13,2020-04-13,1,"Here are a couple of initial tests. I have a good idea of the package now and I have a few things I'm working on for other tests. This closes #95 

**pkg_ref**
Tests some basic tests around what should be returned in a couple of situations and if errors throw as expected.

**assess**
Check a few things about what is being returned.","elimillera",8,0
"Default and Custom Color Palettes (`vr_style`)","https://github.com/openpharma/visR/issues/48","closed",2020-04-09,2021-05-31,2021-05-31,5,"Colors may be a second task to be tackled separately from the theming that is integral to styling the visualisation. There may be some requirements making this a non-trivial task to automate, though, so it'd be great to have a discussion on this prior to implementation.

Some requirements that came up before
- colors should be used sparingly and only where needed to convey message
- colors should be consistent across visualisations  in the report (i.e., the same drug should always have the same color across a series of graphs)
- defaults needed for continuous and discrete variables
- ability to define specific colors for key variable values (e.g., drugs of particular interest, custom colors for factor values, ...)
- depending on use case: use corporate design colors as standard palette (parameterized by company or institution)
- colors should be discernible even if colorblind

To some extent, one could specify default color palettes at the beginning of the (rmarkdown) script using options for, e.g., ggplot2.continuous.colour and ggplot2.continuous.fill, but that would not account for most of the above customizations required for adhering to good graphics principles and our stakeholder requirements.

Does anyone have an idea how to best implement these requirements around colors and styling in the package? I guess we'd need to disentangle what could be meaningful defaults to be set at the document setup phase and what could be customized in a `vr_style_plot` function?","cschaerfe",417,0
"Next Features","https://github.com/openpharma/visR/issues/46","closed",2020-04-09,2021-05-31,2021-05-31,3,"We started out implementing a few functions that are important in our daily work for visualising time to event analysis. However, this is not where the package should stop. Some ideas from discussions with colleagues and stakeholders for additional visualisations to be added are listed below. Please comment with other ideas or open an issue and start implementing if you wish to take one on.

**Cohort Selection and Baseline Characteristics** 
- [x] Table 1
- [x] cohort attrition flowchart 
- [ ] cohort attrition barplot
- [ ] tables of disease characteristics or prior therapies

**Change from Baseline**
- [ ] Scatterplots incl. diff options for overlapping data points like jitter
- [ ] Waterfall plots
- [ ] Cumulative distribution plots

**Survival/Time to Event Analysis**
- [x] Kaplan-Meier plots (different defaults for descriptive vs. comparative questions)
- [x] KM Summary tables
- [ ] Forest Plot (@bailliem is working on this) 

**Treatment/Testing Pattern Analysis**
- [ ] Frequency Table of selected drugs by line
- [ ] Lineplot of year of start of 1st line vs % of patients by drug
- [ ] Stacked boxplot of types of line of therapy by year of diagnosis
- [ ] Donut plot showing distribution of cohort by max LOT with bars specifying most frequent drugs in each line
- [ ] Swimmer Plot showing patterns of treatment (or other activity) by patient

**Treatment Sequences**
- [ ] Flowchart specifying patient flow incl. Death, lost to follow up, and progression to next line 
- [x] Sankey plot (also showing numbers in non-interactive mode)
- [ ] Sunburst plot showing progression of drugs in lines
","cschaerfe",417,0
"Styling/Theming functions (`vr_style`)","https://github.com/openpharma/visR/issues/47","closed",2020-04-09,2021-05-31,2021-05-31,1,"Following our current architecture, styling of plots should be separated out from the data wrangling and plotting task (see [Wiki article on Architecture](https://github.com/openpharma/visR/wiki/Package-Architecture)). We currently mainly rely on applying themes (or even color palettes) after the plotting task. 

It may be nice to have convenience functions, though, that take care of multiple styling operations, similar to `style_bbc()` (from the [BBC visuals cookbook](https://bbc.github.io/rcookbook/)).
To implement this, we would need some reasonable defaults to start with for font type/sizes, preferred grid styles, axis position etc. @bailliem do you happen to have some guidance from the [graphical principles](https://graphicsprinciples.github.io/) work","cschaerfe",417,0
"Dev/release date","https://github.com/pharmaR/riskmetric/pull/97","closed",2020-04-10,2020-05-11,2020-05-10,1,"added two metric 

* current package release date
* all archived package release date (only available for the remote package)

## Test code

```
> tmp <- pkg_ref(""gsDesign"")
> tmp$release_date
[1] ""2016-02-01""
> tmp$archive_release_date
      name       version  date        
 [1,] ""gsDesign"" ""2.0-5""  ""2009-07-01""
 [2,] ""gsDesign"" ""2.2-11"" ""2010-03-13""
 [3,] ""gsDesign"" ""2.3-02"" ""2010-11-07""
 [4,] ""gsDesign"" ""2.4-01"" ""2011-02-20""
 [5,] ""gsDesign"" ""2.6-02"" ""2012-01-02""
 [6,] ""gsDesign"" ""2.6-03"" ""2012-01-19""
 [7,] ""gsDesign"" ""2.6-04"" ""2012-02-13""
 [8,] ""gsDesign"" ""2.7-03"" ""2012-07-09""
 [9,] ""gsDesign"" ""2.7-04"" ""2012-09-11""
[10,] ""gsDesign"" ""2.7-05"" ""2013-02-23""
[11,] ""gsDesign"" ""2.7-06"" ""2013-03-17""
[12,] ""gsDesign"" ""2.8-7""  ""2013-12-02""
[13,] ""gsDesign"" ""2.8-8""  ""2014-01-03""
[14,] ""gsDesign"" ""2.9-2""  ""2014-08-23""
[15,] ""gsDesign"" ""2.9-3""  ""2014-11-10""
```","elong0527",30,-1
"23 circle ci","https://github.com/Roche/rtables/pull/24","closed",2020-04-13,2020-05-01,2020-04-13,0,"closes #23 

Hi @gmbecker,

I have added circleci pipelines to the code and modified the code to make `R CMD CHECK` return 0 errors. To get to the 0 errors I have partly fixed code and partly commented out examples with adding a `TODO:` note.

Also note that with CI/CD we do not need to store the pkgdown website in `docs` in the repo as it can be found in the artifacts of circleci.

Currently circleci does the following

![image](https://user-images.githubusercontent.com/7786462/79143144-fe2e6b00-7dbc-11ea-846b-3eab0a47f29c.png)

so pretty basic.

Please merge the PR into your branch.","waddella",0,-18
"add circle_ci","https://github.com/Roche/rtables/issues/23","closed",2020-04-13,2020-04-13,2020-04-13,0,"Add circle ci to check package and publish documentation","waddella",0,0
"Clean up","https://github.com/Roche/rtables/pull/25","closed",2020-04-13,2020-05-01,2020-04-13,1,"Hi @gmbecker,

Please merge #24 before merging this PR. You can then see the differences. I have been working on the `pkgdown` documentation.
","waddella",0,-18
"Mitigating number of Imports package dependencies","https://github.com/pharmaR/riskmetric/issues/99","closed",2020-04-13,2020-07-08,2020-07-08,8,"One of the looming challenges with this package is the potential for the dependency footprint to really snowball into a pretty hefty cohort.

There are a number of dependencies that are nice to have throughout the package. Relatively lightweight, but convenient packages like `rvest` are good for making a number of remote operations easier. Having `tibble` and `pillar` make for a much nicer console interface when assessing multiple packages.

However, we also have a large number of metric specific packages and I expect this number to grow as we start pulling in more computationally intensive metrics. This includes packages like `covr`, `testthat`, `cyclocomp`. 

Perhaps we could think of a way of tagging assess functions with their package dependencies such that we can build a small onLoad dialog about what assess functions will be ignored until their additional Suggested package dependencies are installed? This would let us focus on a small set of minimal dependencies for general behaviors while still allowing for more complex functionality through package extensions. ","dgkf",86,0
"updating extending-riskmetric vignette to give better context","https://github.com/pharmaR/riskmetric/pull/98","closed",2020-04-13,2020-04-13,2020-04-13,0,"Addressed concerns in #75 ","dgkf",0,0
"Configure Renovate","https://github.com/Roche/ggtips/pull/29","closed",2020-04-15,2020-11-09,2020-10-06,0,"Welcome to [Renovate](https://togithub.com/renovatebot/renovate)! This is an onboarding PR to help you understand and configure settings before regular Pull Requests begin.

:vertical_traffic_light: To activate Renovate, merge this Pull Request. To disable Renovate, simply close this Pull Request unmerged.



---
### Detected Package Files

 * `inst/Dockerfile` (dockerfile)

### Configuration Summary

Based on the default config's presets, Renovate will:

  - Start dependency updates only once this onboarding PR is merged
  - Separate major versions of dependencies into individual branches/PRs
  - Do not separate patch and minor upgrades into separate PRs for the same dependency
  - Upgrade to unstable versions only if the existing version is unstable
  - Raise PRs immediately (after branch is created)
  - If semantic commits detected, use semantic commit type <code>fix</code> for dependencies and <code>chore</code> for all others
  - Keep existing branches updated even when not scheduled
  - Disable automerging feature - wait for humans to merge all PRs
  - Ignore `node_modules`, `bower_components`, `vendor` and various test/tests directories
  - Update existing lock files only when <code>package.json</code> is modified
  - Autodetect whether to pin dependencies or maintain ranges
  - Rate limit PR creation to a maximum of two per hour
  - Limit to maximum 20 open PRs at any time
  - Group known monorepo packages together
  - Use curated list of recommended non-monorepo package groupings

:abcd: Would you like to change the way Renovate is upgrading your dependencies? Simply edit the `renovate.json` in this branch with your custom config and the list of Pull Requests in the ""What to Expect"" section below will be updated the next time Renovate runs.

---
You have configured Renovate to use branch `master` as base branch.


### What to Expect

It looks like your repository dependencies are already up-to-date and no Pull Requests will be necessary right away.

---

:question: Got questions? Check out Renovate's [Docs](https://docs.renovatebot.com/), particularly the Getting Started section.
If you need any further assistance then you can also [request help here](https://togithub.com/renovatebot/config-help/issues).


---

This PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#Roche/ggtips).
","renovate[bot]",174,-34
"Configure Renovate","https://github.com/Roche/crmPack/pull/5","open",2020-04-15,2020-04-15,NA,0,"Welcome to [Renovate](https://togithub.com/renovatebot/renovate)! This is an onboarding PR to help you understand and configure settings before regular Pull Requests begin.

:vertical_traffic_light: To activate Renovate, merge this Pull Request. To disable Renovate, simply close this Pull Request unmerged.



---
### Detected Package Files

 * `docs/authors.html` (html)
 * `docs/dev/articles/guidelines.html` (html)
 * `docs/dev/articles/index.html` (html)
 * `docs/dev/authors.html` (html)
 * `docs/dev/index.html` (html)
 * `docs/dev/news/index.html` (html)
 * `docs/dev/reference/AllModels-class.html` (html)
 * `docs/dev/reference/CohortSize-class.html` (html)
 * `docs/dev/reference/CohortSizeConst-class.html` (html)
 * `docs/dev/reference/CohortSizeConst.html` (html)
 * `docs/dev/reference/CohortSizeDLT-class.html` (html)
 * `docs/dev/reference/CohortSizeDLT.html` (html)
 * `docs/dev/reference/CohortSizeMax-class.html` (html)
 * `docs/dev/reference/CohortSizeMax.html` (html)
 * `docs/dev/reference/CohortSizeMin-class.html` (html)
 * `docs/dev/reference/CohortSizeMin.html` (html)
 * `docs/dev/reference/CohortSizeParts-class.html` (html)
 * `docs/dev/reference/CohortSizeParts.html` (html)
 * `docs/dev/reference/CohortSizeRange-class.html` (html)
 * `docs/dev/reference/CohortSizeRange.html` (html)
 * `docs/dev/reference/Data-class.html` (html)
 * `docs/dev/reference/Data.html` (html)
 * `docs/dev/reference/DataDual-class.html` (html)
 * `docs/dev/reference/DataDual.html` (html)
 * `docs/dev/reference/DataMixture-class.html` (html)
 * `docs/dev/reference/DataMixture.html` (html)
 * `docs/dev/reference/DataParts-class.html` (html)
 * `docs/dev/reference/DataParts.html` (html)
 * `docs/dev/reference/Design-class.html` (html)
 * `docs/dev/reference/Design.html` (html)
 * `docs/dev/reference/DualDesign-class.html` (html)
 * `docs/dev/reference/DualDesign.html` (html)
 * `docs/dev/reference/DualEndpoint-class.html` (html)
 * `docs/dev/reference/DualEndpoint.html` (html)
 * `docs/dev/reference/DualEndpointBeta-class.html` (html)
 * `docs/dev/reference/DualEndpointBeta.html` (html)
 * `docs/dev/reference/DualEndpointEmax-class.html` (html)
 * `docs/dev/reference/DualEndpointEmax.html` (html)
 * `docs/dev/reference/DualEndpointOld-class.html` (html)
 * `docs/dev/reference/DualEndpointRW-class.html` (html)
 * `docs/dev/reference/DualEndpointRW.html` (html)
 * `docs/dev/reference/DualResponsesDesign-class.html` (html)
 * `docs/dev/reference/DualResponsesDesign.html` (html)
 * `docs/dev/reference/DualResponsesSamplesDesign-class.html` (html)
 * `docs/dev/reference/DualResponsesSamplesDesign.html` (html)
 * `docs/dev/reference/DualSimulations-class.html` (html)
 * `docs/dev/reference/DualSimulations.html` (html)
 * `docs/dev/reference/DualSimulationsSummary-class.html` (html)
 * `docs/dev/reference/EffFlexi-class.html` (html)
 * `docs/dev/reference/EffFlexi.html` (html)
 * `docs/dev/reference/Effloglog-class.html` (html)
 * `docs/dev/reference/Effloglog.html` (html)
 * `docs/dev/reference/ExpEff.html` (html)
 * `docs/dev/reference/GeneralData-class.html` (html)
 * `docs/dev/reference/GeneralModel-class.html` (html)
 * `docs/dev/reference/GeneralSimulations-class.html` (html)
 * `docs/dev/reference/GeneralSimulations.html` (html)
 * `docs/dev/reference/GeneralSimulationsSummary-class.html` (html)
 * `docs/dev/reference/IncrementMin-class.html` (html)
 * `docs/dev/reference/IncrementMin.html` (html)
 * `docs/dev/reference/Increments-class.html` (html)
 * `docs/dev/reference/IncrementsNumDoseLevels-class.html` (html)
 * `docs/dev/reference/IncrementsNumDoseLevels.html` (html)
 * `docs/dev/reference/IncrementsRelative-class.html` (html)
 * `docs/dev/reference/IncrementsRelative.html` (html)
 * `docs/dev/reference/IncrementsRelativeDLT-class.html` (html)
 * `docs/dev/reference/IncrementsRelativeDLT.html` (html)
 * `docs/dev/reference/IncrementsRelativeParts-class.html` (html)
 * `docs/dev/reference/IncrementsRelativeParts.html` (html)
 * `docs/dev/reference/LogisticIndepBeta-class.html` (html)
 * `docs/dev/reference/LogisticIndepBeta.html` (html)
 * `docs/dev/reference/LogisticKadane-class.html` (html)
 * `docs/dev/reference/LogisticKadane.html` (html)
 * `docs/dev/reference/LogisticLogNormal-class.html` (html)
 * `docs/dev/reference/LogisticLogNormal.html` (html)
 * `docs/dev/reference/LogisticLogNormalMixture-class.html` (html)
 * `docs/dev/reference/LogisticLogNormalMixture.html` (html)
 * `docs/dev/reference/LogisticLogNormalSub-class.html` (html)
 * `docs/dev/reference/LogisticLogNormalSub.html` (html)
 * `docs/dev/reference/LogisticNormal-class.html` (html)
 * `docs/dev/reference/LogisticNormal.html` (html)
 * `docs/dev/reference/LogisticNormalFixedMixture-class.html` (html)
 * `docs/dev/reference/LogisticNormalFixedMixture.html` (html)
 * `docs/dev/reference/LogisticNormalMixture-class.html` (html)
 * `docs/dev/reference/LogisticNormalMixture.html` (html)
 * `docs/dev/reference/McmcOptions-class.html` (html)
 * `docs/dev/reference/McmcOptions.html` (html)
 * `docs/dev/reference/MinimalInformative.html` (html)
 * `docs/dev/reference/Model-class.html` (html)
 * `docs/dev/reference/ModelEff-class.html` (html)
 * `docs/dev/reference/ModelPseudo-class.html` (html)
 * `docs/dev/reference/ModelTox-class.html` (html)
 * `docs/dev/reference/NextBest-class.html` (html)
 * `docs/dev/reference/NextBestDualEndpoint-class.html` (html)
 * `docs/dev/reference/NextBestDualEndpoint.html` (html)
 * `docs/dev/reference/NextBestMTD-class.html` (html)
 * `docs/dev/reference/NextBestMTD.html` (html)
 * `docs/dev/reference/NextBestMaxGain-class.html` (html)
 * `docs/dev/reference/NextBestMaxGain.html` (html)
 * `docs/dev/reference/NextBestMaxGainSamples-class.html` (html)
 * `docs/dev/reference/NextBestMaxGainSamples.html` (html)
 * `docs/dev/reference/NextBestNCRM-class.html` (html)
 * `docs/dev/reference/NextBestNCRM.html` (html)
 * `docs/dev/reference/NextBestTD-class.html` (html)
 * `docs/dev/reference/NextBestTD.html` (html)
 * `docs/dev/reference/NextBestTDsamples-class.html` (html)
 * `docs/dev/reference/NextBestTDsamples.html` (html)
 * `docs/dev/reference/NextBestThreePlusThree-class.html` (html)
 * `docs/dev/reference/NextBestThreePlusThree.html` (html)
 * `docs/dev/reference/ProbitLogNormal-class.html` (html)
 * `docs/dev/reference/ProbitLogNormal.html` (html)
 * `docs/dev/reference/PseudoDualFlexiSimulations-class.html` (html)
 * `docs/dev/reference/PseudoDualFlexiSimulations.html` (html)
 * `docs/dev/reference/PseudoDualSimulations-class.html` (html)
 * `docs/dev/reference/PseudoDualSimulations.html` (html)
 * `docs/dev/reference/PseudoDualSimulationsSummary-class.html` (html)
 * `docs/dev/reference/PseudoSimulations-class.html` (html)
 * `docs/dev/reference/PseudoSimulations.html` (html)
 * `docs/dev/reference/PseudoSimulationsSummary-class.html` (html)
 * `docs/dev/reference/Quantiles2LogisticNormal.html` (html)
 * `docs/dev/reference/Report.html` (html)
 * `docs/dev/reference/RuleDesign-class.html` (html)
 * `docs/dev/reference/RuleDesign.html` (html)
 * `docs/dev/reference/Samples-class.html` (html)
 * `docs/dev/reference/Samples.html` (html)
 * `docs/dev/reference/Simulations-class.html` (html)
 * `docs/dev/reference/Simulations.html` (html)
 * `docs/dev/reference/SimulationsSummary-class.html` (html)
 * `docs/dev/reference/Stopping-class.html` (html)
 * `docs/dev/reference/StoppingAll-class.html` (html)
 * `docs/dev/reference/StoppingAll.html` (html)
 * `docs/dev/reference/StoppingAny-class.html` (html)
 * `docs/dev/reference/StoppingAny.html` (html)
 * `docs/dev/reference/StoppingCohortsNearDose-class.html` (html)
 * `docs/dev/reference/StoppingCohortsNearDose.html` (html)
 * `docs/dev/reference/StoppingGstarCIRatio-class.html` (html)
 * `docs/dev/reference/StoppingGstarCIRatio.html` (html)
 * `docs/dev/reference/StoppingHighestDose-class.html` (html)
 * `docs/dev/reference/StoppingHighestDose.html` (html)
 * `docs/dev/reference/StoppingList-class.html` (html)
 * `docs/dev/reference/StoppingList.html` (html)
 * `docs/dev/reference/StoppingMTDdistribution-class.html` (html)
 * `docs/dev/reference/StoppingMTDdistribution.html` (html)
 * `docs/dev/reference/StoppingMinCohorts-class.html` (html)
 * `docs/dev/reference/StoppingMinCohorts.html` (html)
 * `docs/dev/reference/StoppingMinPatients-class.html` (html)
 * `docs/dev/reference/StoppingMinPatients.html` (html)
 * `docs/dev/reference/StoppingPatientsNearDose-class.html` (html)
 * `docs/dev/reference/StoppingPatientsNearDose.html` (html)
 * `docs/dev/reference/StoppingTDCIRatio-class.html` (html)
 * `docs/dev/reference/StoppingTDCIRatio.html` (html)
 * `docs/dev/reference/StoppingTargetBiomarker-class.html` (html)
 * `docs/dev/reference/StoppingTargetBiomarker.html` (html)
 * `docs/dev/reference/StoppingTargetProb-class.html` (html)
 * `docs/dev/reference/StoppingTargetProb.html` (html)
 * `docs/dev/reference/TDDesign-class.html` (html)
 * `docs/dev/reference/TDDesign.html` (html)
 * `docs/dev/reference/TDsamplesDesign-class.html` (html)
 * `docs/dev/reference/TDsamplesDesign.html` (html)
 * `docs/dev/reference/ThreePlusThreeDesign.html` (html)
 * `docs/dev/reference/Validate.html` (html)
 * `docs/dev/reference/and-Stopping-Stopping-method.html` (html)
 * `docs/dev/reference/and-Stopping-StoppingAll-method.html` (html)
 * `docs/dev/reference/and-StoppingAll-Stopping-method.html` (html)
 * `docs/dev/reference/approximate.html` (html)
 * `docs/dev/reference/as.list-GeneralData-method.html` (html)
 * `docs/dev/reference/biomLevel.html` (html)
 * `docs/dev/reference/crmPack-package.html` (html)
 * `docs/dev/reference/crmPackExample.html` (html)
 * `docs/dev/reference/crmPackHelp.html` (html)
 * `docs/dev/reference/dinvGamma.html` (html)
 * `docs/dev/reference/dose.html` (html)
 * `docs/dev/reference/examine.html` (html)
 * `docs/dev/reference/fit.html` (html)
 * `docs/dev/reference/fitGain.html` (html)
 * `docs/dev/reference/gain.html` (html)
 * `docs/dev/reference/get-Samples-character-method.html` (html)
 * `docs/dev/reference/getEff.html` (html)
 * `docs/dev/reference/getMinInfBeta.html` (html)
 * `docs/dev/reference/getResultList.html` (html)
 * `docs/dev/reference/index.html` (html)
 * `docs/dev/reference/initialize-DualEndpointOld-method.html` (html)
 * `docs/dev/reference/is.bool.html` (html)
 * `docs/dev/reference/is.probRange.html` (html)
 * `docs/dev/reference/is.probability.html` (html)
 * `docs/dev/reference/is.range.html` (html)
 * `docs/dev/reference/is.scalar.html` (html)
 * `docs/dev/reference/is.wholenumber.html` (html)
 * `docs/dev/reference/joinBodies.html` (html)
 * `docs/dev/reference/joinModels.html` (html)
 * `docs/dev/reference/logit.html` (html)
 * `docs/dev/reference/matchTolerance.html` (html)
 * `docs/dev/reference/maxDose.html` (html)
 * `docs/dev/reference/maxSize.html` (html)
 * `docs/dev/reference/mcmc.html` (html)
 * `docs/dev/reference/minSize.html` (html)
 * `docs/dev/reference/multiplot.html` (html)
 * `docs/dev/reference/myBarplot.html` (html)
 * `docs/dev/reference/myBayesLogit.html` (html)
 * `docs/dev/reference/nextBest.html` (html)
 * `docs/dev/reference/noOverlap.html` (html)
 * `docs/dev/reference/or-Stopping-Stopping.html` (html)
 * `docs/dev/reference/or-Stopping-StoppingAny.html` (html)
 * `docs/dev/reference/or-StoppingAny-Stopping.html` (html)
 * `docs/dev/reference/pinvGamma.html` (html)
 * `docs/dev/reference/plot-Data-ModelTox-method.html` (html)
 * `docs/dev/reference/plot-Data-missing-method.html` (html)
 * `docs/dev/reference/plot-DataDual-ModelEff-method.html` (html)
 * `docs/dev/reference/plot-DataDual-missing-method.html` (html)
 * `docs/dev/reference/plot-DualSimulations-missing-method.html` (html)
 * `docs/dev/reference/plot-DualSimulationsSummary-missing-method.html` (html)
 * `docs/dev/reference/plot-GeneralSimulations-missing-method.html` (html)
 * `docs/dev/reference/plot-GeneralSimulationsSummary-missing-method.html` (html)
 * `docs/dev/reference/plot-PseudoDualFlexiSimulations-missing-method.html` (html)
 * `docs/dev/reference/plot-PseudoDualSimulations-missing-method.html` (html)
 * `docs/dev/reference/plot-PseudoDualSimulationsSummary-missing-method.html` (html)
 * `docs/dev/reference/plot-PseudoSimulationsSummary-missing-method.html` (html)
 * `docs/dev/reference/plot-Samples-DualEndpoint-method.html` (html)
 * `docs/dev/reference/plot-Samples-Model-method.html` (html)
 * `docs/dev/reference/plot-Samples-ModelEff-method.html` (html)
 * `docs/dev/reference/plot-Samples-ModelTox-method.html` (html)
 * `docs/dev/reference/plot-SimulationsSummary-missing-method.html` (html)
 * `docs/dev/reference/plot.gtable.html` (html)
 * `docs/dev/reference/plotDualResponses.html` (html)
 * `docs/dev/reference/plotGain.html` (html)
 * `docs/dev/reference/printVignette.html` (html)
 * `docs/dev/reference/prob.html` (html)
 * `docs/dev/reference/probit.html` (html)
 * `docs/dev/reference/qinvGamma.html` (html)
 * `docs/dev/reference/rinvGamma.html` (html)
 * `docs/dev/reference/safeInteger.html` (html)
 * `docs/dev/reference/sampleSize.html` (html)
 * `docs/dev/reference/saveSample.html` (html)
 * `docs/dev/reference/setSeed.html` (html)
 * `docs/dev/reference/show-DualSimulationsSummary-method.html` (html)
 * `docs/dev/reference/show-GeneralSimulationsSummary-method.html` (html)
 * `docs/dev/reference/show-PseudoDualSimulationsSummary-method.html` (html)
 * `docs/dev/reference/show-PseudoSimulationsSummary-method.html` (html)
 * `docs/dev/reference/show-SimulationsSummary-method.html` (html)
 * `docs/dev/reference/simulate-Design-method.html` (html)
 * `docs/dev/reference/simulate-DualDesign-method.html` (html)
 * `docs/dev/reference/simulate-DualResponsesDesign-method.html` (html)
 * `docs/dev/reference/simulate-DualResponsesSamplesDesign-method.html` (html)
 * `docs/dev/reference/simulate-RuleDesign-method.html` (html)
 * `docs/dev/reference/simulate-TDDesign-method.html` (html)
 * `docs/dev/reference/simulate-TDsamplesDesign-method.html` (html)
 * `docs/dev/reference/size.html` (html)
 * `docs/dev/reference/stopTrial.html` (html)
 * `docs/dev/reference/summary-DualSimulations-method.html` (html)
 * `docs/dev/reference/summary-GeneralSimulations-method.html` (html)
 * `docs/dev/reference/summary-PseudoDualFlexiSimulations-method.html` (html)
 * `docs/dev/reference/summary-PseudoDualSimulations-method.html` (html)
 * `docs/dev/reference/summary-PseudoSimulations-method.html` (html)
 * `docs/dev/reference/summary-Simulations-method.html` (html)
 * `docs/dev/reference/update-Data-method.html` (html)
 * `docs/dev/reference/update-DataDual-method.html` (html)
 * `docs/dev/reference/update-DataParts-method.html` (html)
 * `docs/dev/reference/update-EffFlexi-method.html` (html)
 * `docs/dev/reference/update-Effloglog-method.html` (html)
 * `docs/dev/reference/update-LogisticIndepBeta-method.html` (html)
 * `docs/dev/reference/writeModel.html` (html)
 * `docs/index.html` (html)
 * `docs/news/index.html` (html)
 * `docs/reference/AllModels-class.html` (html)
 * `docs/reference/CohortSize-class.html` (html)
 * `docs/reference/CohortSizeConst-class.html` (html)
 * `docs/reference/CohortSizeConst.html` (html)
 * `docs/reference/CohortSizeDLT-class.html` (html)
 * `docs/reference/CohortSizeDLT.html` (html)
 * `docs/reference/CohortSizeMax-class.html` (html)
 * `docs/reference/CohortSizeMax.html` (html)
 * `docs/reference/CohortSizeMin-class.html` (html)
 * `docs/reference/CohortSizeMin.html` (html)
 * `docs/reference/CohortSizeParts-class.html` (html)
 * `docs/reference/CohortSizeParts.html` (html)
 * `docs/reference/CohortSizeRange-class.html` (html)
 * `docs/reference/CohortSizeRange.html` (html)
 * `docs/reference/DALogisticLogNormal-class.html` (html)
 * `docs/reference/DALogisticLogNormal.html` (html)
 * `docs/reference/DLTLikelihood.html` (html)
 * `docs/reference/Data-class.html` (html)
 * `docs/reference/Data.html` (html)
 * `docs/reference/DataDA-class.html` (html)
 * `docs/reference/DataDA.html` (html)
 * `docs/reference/DataDual-class.html` (html)
 * `docs/reference/DataDual.html` (html)
 * `docs/reference/DataMixture-class.html` (html)
 * `docs/reference/DataMixture.html` (html)
 * `docs/reference/DataParts-class.html` (html)
 * `docs/reference/DataParts.html` (html)
 * `docs/reference/Design-class.html` (html)
 * `docs/reference/Design.html` (html)
 * `docs/reference/DualDesign-class.html` (html)
 * `docs/reference/DualDesign.html` (html)
 * `docs/reference/DualEndpoint-class.html` (html)
 * `docs/reference/DualEndpoint.html` (html)
 * `docs/reference/DualEndpointBeta-class.html` (html)
 * `docs/reference/DualEndpointBeta.html` (html)
 * `docs/reference/DualEndpointEmax-class.html` (html)
 * `docs/reference/DualEndpointEmax.html` (html)
 * `docs/reference/DualEndpointOld-class.html` (html)
 * `docs/reference/DualEndpointRW-class.html` (html)
 * `docs/reference/DualEndpointRW.html` (html)
 * `docs/reference/DualResponsesDesign-class.html` (html)
 * `docs/reference/DualResponsesDesign.html` (html)
 * `docs/reference/DualResponsesSamplesDesign-class.html` (html)
 * `docs/reference/DualResponsesSamplesDesign.html` (html)
 * `docs/reference/DualSimulations-class.html` (html)
 * `docs/reference/DualSimulations.html` (html)
 * `docs/reference/DualSimulationsSummary-class.html` (html)
 * `docs/reference/EffFlexi-class.html` (html)
 * `docs/reference/EffFlexi.html` (html)
 * `docs/reference/Effloglog-class.html` (html)
 * `docs/reference/Effloglog.html` (html)
 * `docs/reference/ExpEff.html` (html)
 * `docs/reference/GeneralData-class.html` (html)
 * `docs/reference/GeneralModel-class.html` (html)
 * `docs/reference/GeneralSimulations-class.html` (html)
 * `docs/reference/GeneralSimulations.html` (html)
 * `docs/reference/GeneralSimulationsSummary-class.html` (html)
 * `docs/reference/IncrementMin-class.html` (html)
 * `docs/reference/IncrementMin.html` (html)
 * `docs/reference/Increments-class.html` (html)
 * `docs/reference/IncrementsNumDoseLevels-class.html` (html)
 * `docs/reference/IncrementsNumDoseLevels.html` (html)
 * `docs/reference/IncrementsRelative-class.html` (html)
 * `docs/reference/IncrementsRelative.html` (html)
 * `docs/reference/IncrementsRelativeDLT-class.html` (html)
 * `docs/reference/IncrementsRelativeDLT.html` (html)
 * `docs/reference/IncrementsRelativeParts-class.html` (html)
 * `docs/reference/IncrementsRelativeParts.html` (html)
 * `docs/reference/LogisticIndepBeta-class.html` (html)
 * `docs/reference/LogisticIndepBeta.html` (html)
 * `docs/reference/LogisticKadane-class.html` (html)
 * `docs/reference/LogisticKadane.html` (html)
 * `docs/reference/LogisticLogNormal-class.html` (html)
 * `docs/reference/LogisticLogNormal.html` (html)
 * `docs/reference/LogisticLogNormalMixture-class.html` (html)
 * `docs/reference/LogisticLogNormalMixture.html` (html)
 * `docs/reference/LogisticLogNormalSub-class.html` (html)
 * `docs/reference/LogisticLogNormalSub.html` (html)
 * `docs/reference/LogisticNormal-class.html` (html)
 * `docs/reference/LogisticNormal.html` (html)
 * `docs/reference/LogisticNormalFixedMixture-class.html` (html)
 * `docs/reference/LogisticNormalFixedMixture.html` (html)
 * `docs/reference/LogisticNormalMixture-class.html` (html)
 * `docs/reference/LogisticNormalMixture.html` (html)
 * `docs/reference/McmcOptions-class.html` (html)
 * `docs/reference/McmcOptions.html` (html)
 * `docs/reference/MinimalInformative.html` (html)
 * `docs/reference/Model-class.html` (html)
 * `docs/reference/ModelEff-class.html` (html)
 * `docs/reference/ModelPseudo-class.html` (html)
 * `docs/reference/ModelTox-class.html` (html)
 * `docs/reference/NextBest-class.html` (html)
 * `docs/reference/NextBestDualEndpoint-class.html` (html)
 * `docs/reference/NextBestDualEndpoint.html` (html)
 * `docs/reference/NextBestMTD-class.html` (html)
 * `docs/reference/NextBestMTD.html` (html)
 * `docs/reference/NextBestMaxGain-class.html` (html)
 * `docs/reference/NextBestMaxGain.html` (html)
 * `docs/reference/NextBestMaxGainSamples-class.html` (html)
 * `docs/reference/NextBestMaxGainSamples.html` (html)
 * `docs/reference/NextBestNCRM-class.html` (html)
 * `docs/reference/NextBestNCRM.html` (html)
 * `docs/reference/NextBestTD-class.html` (html)
 * `docs/reference/NextBestTD.html` (html)
 * `docs/reference/NextBestTDsamples-class.html` (html)
 * `docs/reference/NextBestTDsamples.html` (html)
 * `docs/reference/NextBestThreePlusThree-class.html` (html)
 * `docs/reference/NextBestThreePlusThree.html` (html)
 * `docs/reference/ProbitLogNormal-class.html` (html)
 * `docs/reference/ProbitLogNormal.html` (html)
 * `docs/reference/PseudoDualFlexiSimulations-class.html` (html)
 * `docs/reference/PseudoDualFlexiSimulations.html` (html)
 * `docs/reference/PseudoDualSimulations-class.html` (html)
 * `docs/reference/PseudoDualSimulations.html` (html)
 * `docs/reference/PseudoDualSimulationsSummary-class.html` (html)
 * `docs/reference/PseudoSimulations-class.html` (html)
 * `docs/reference/PseudoSimulations.html` (html)
 * `docs/reference/PseudoSimulationsSummary-class.html` (html)
 * `docs/reference/Quantiles2LogisticNormal.html` (html)
 * `docs/reference/Report.html` (html)
 * `docs/reference/RuleDesign-class.html` (html)
 * `docs/reference/RuleDesign.html` (html)
 * `docs/reference/Samples-class.html` (html)
 * `docs/reference/Samples.html` (html)
 * `docs/reference/Simulations-class.html` (html)
 * `docs/reference/Simulations.html` (html)
 * `docs/reference/SimulationsSummary-class.html` (html)
 * `docs/reference/Stopping-class.html` (html)
 * `docs/reference/StoppingAll-class.html` (html)
 * `docs/reference/StoppingAll.html` (html)
 * `docs/reference/StoppingAny-class.html` (html)
 * `docs/reference/StoppingAny.html` (html)
 * `docs/reference/StoppingCohortsNearDose-class.html` (html)
 * `docs/reference/StoppingCohortsNearDose.html` (html)
 * `docs/reference/StoppingGstarCIRatio-class.html` (html)
 * `docs/reference/StoppingGstarCIRatio.html` (html)
 * `docs/reference/StoppingHighestDose-class.html` (html)
 * `docs/reference/StoppingHighestDose.html` (html)
 * `docs/reference/StoppingList-class.html` (html)
 * `docs/reference/StoppingList.html` (html)
 * `docs/reference/StoppingMTDdistribution-class.html` (html)
 * `docs/reference/StoppingMTDdistribution.html` (html)
 * `docs/reference/StoppingMinCohorts-class.html` (html)
 * `docs/reference/StoppingMinCohorts.html` (html)
 * `docs/reference/StoppingMinPatients-class.html` (html)
 * `docs/reference/StoppingMinPatients.html` (html)
 * `docs/reference/StoppingPatientsNearDose-class.html` (html)
 * `docs/reference/StoppingPatientsNearDose.html` (html)
 * `docs/reference/StoppingTDCIRatio-class.html` (html)
 * `docs/reference/StoppingTDCIRatio.html` (html)
 * `docs/reference/StoppingTargetBiomarker-class.html` (html)
 * `docs/reference/StoppingTargetBiomarker.html` (html)
 * `docs/reference/StoppingTargetProb-class.html` (html)
 * `docs/reference/StoppingTargetProb.html` (html)
 * `docs/reference/TDDesign-class.html` (html)
 * `docs/reference/TDDesign.html` (html)
 * `docs/reference/TDsamplesDesign-class.html` (html)
 * `docs/reference/TDsamplesDesign.html` (html)
 * `docs/reference/ThreePlusThreeDesign.html` (html)
 * `docs/reference/Validate.html` (html)
 * `docs/reference/and-Stopping-Stopping-method.html` (html)
 * `docs/reference/and-Stopping-StoppingAll-method.html` (html)
 * `docs/reference/and-StoppingAll-Stopping-method.html` (html)
 * `docs/reference/approximate.html` (html)
 * `docs/reference/as.list-GeneralData-method.html` (html)
 * `docs/reference/biomLevel.html` (html)
 * `docs/reference/crmPack-package.html` (html)
 * `docs/reference/crmPackExample.html` (html)
 * `docs/reference/crmPackHelp.html` (html)
 * `docs/reference/dinvGamma.html` (html)
 * `docs/reference/dose.html` (html)
 * `docs/reference/examine.html` (html)
 * `docs/reference/fit.html` (html)
 * `docs/reference/fitGain.html` (html)
 * `docs/reference/fitPEM.html` (html)
 * `docs/reference/gain.html` (html)
 * `docs/reference/get-Samples-character-method.html` (html)
 * `docs/reference/getEff.html` (html)
 * `docs/reference/getMinInfBeta.html` (html)
 * `docs/reference/getResultList.html` (html)
 * `docs/reference/index.html` (html)
 * `docs/reference/initialize-DualEndpointOld-method.html` (html)
 * `docs/reference/is.bool.html` (html)
 * `docs/reference/is.probRange.html` (html)
 * `docs/reference/is.probability.html` (html)
 * `docs/reference/is.range.html` (html)
 * `docs/reference/is.scalar.html` (html)
 * `docs/reference/is.wholenumber.html` (html)
 * `docs/reference/joinBodies.html` (html)
 * `docs/reference/joinModels.html` (html)
 * `docs/reference/logit.html` (html)
 * `docs/reference/matchTolerance.html` (html)
 * `docs/reference/maxDose.html` (html)
 * `docs/reference/maxSize.html` (html)
 * `docs/reference/mcmc.html` (html)
 * `docs/reference/minSize.html` (html)
 * `docs/reference/multiplot.html` (html)
 * `docs/reference/myBarplot.html` (html)
 * `docs/reference/myBayesLogit.html` (html)
 * `docs/reference/nextBest.html` (html)
 * `docs/reference/noOverlap.html` (html)
 * `docs/reference/or-Stopping-Stopping.html` (html)
 * `docs/reference/or-Stopping-StoppingAny.html` (html)
 * `docs/reference/or-StoppingAny-Stopping.html` (html)
 * `docs/reference/pinvGamma.html` (html)
 * `docs/reference/plot-Data-ModelTox-method.html` (html)
 * `docs/reference/plot-Data-missing-method.html` (html)
 * `docs/reference/plot-DataDA-missing-method.html` (html)
 * `docs/reference/plot-DataDual-ModelEff-method.html` (html)
 * `docs/reference/plot-DataDual-missing-method.html` (html)
 * `docs/reference/plot-DualSimulations-missing-method.html` (html)
 * `docs/reference/plot-DualSimulationsSummary-missing-method.html` (html)
 * `docs/reference/plot-GeneralSimulations-missing-method.html` (html)
 * `docs/reference/plot-GeneralSimulationsSummary-missing-method.html` (html)
 * `docs/reference/plot-PseudoDualFlexiSimulations-missing-method.html` (html)
 * `docs/reference/plot-PseudoDualSimulations-missing-method.html` (html)
 * `docs/reference/plot-PseudoDualSimulationsSummary-missing-method.html` (html)
 * `docs/reference/plot-PseudoSimulationsSummary-missing-method.html` (html)
 * `docs/reference/plot-Samples-DALogisticLogNormal-method.html` (html)
 * `docs/reference/plot-Samples-DualEndpoint-method.html` (html)
 * `docs/reference/plot-Samples-Model-method.html` (html)
 * `docs/reference/plot-Samples-ModelEff-method.html` (html)
 * `docs/reference/plot-Samples-ModelTox-method.html` (html)
 * `docs/reference/plot-SimulationsSummary-missing-method.html` (html)
 * `docs/reference/plot.gtable.html` (html)
 * `docs/reference/plotDualResponses.html` (html)
 * `docs/reference/plotGain.html` (html)
 * `docs/reference/printVignette.html` (html)
 * `docs/reference/prob.html` (html)
 * `docs/reference/probit.html` (html)
 * `docs/reference/qinvGamma.html` (html)
 * `docs/reference/rinvGamma.html` (html)
 * `docs/reference/safeInteger.html` (html)
 * `docs/reference/sampleSize.html` (html)
 * `docs/reference/saveSample.html` (html)
 * `docs/reference/setSeed.html` (html)
 * `docs/reference/show-DualSimulationsSummary-method.html` (html)
 * `docs/reference/show-GeneralSimulationsSummary-method.html` (html)
 * `docs/reference/show-PseudoDualSimulationsSummary-method.html` (html)
 * `docs/reference/show-PseudoSimulationsSummary-method.html` (html)
 * `docs/reference/show-SimulationsSummary-method.html` (html)
 * `docs/reference/simulate-Design-method.html` (html)
 * `docs/reference/simulate-DualDesign-method.html` (html)
 * `docs/reference/simulate-DualResponsesDesign-method.html` (html)
 * `docs/reference/simulate-DualResponsesSamplesDesign-method.html` (html)
 * `docs/reference/simulate-RuleDesign-method.html` (html)
 * `docs/reference/simulate-TDDesign-method.html` (html)
 * `docs/reference/simulate-TDsamplesDesign-method.html` (html)
 * `docs/reference/size.html` (html)
 * `docs/reference/stopTrial.html` (html)
 * `docs/reference/summary-DualSimulations-method.html` (html)
 * `docs/reference/summary-GeneralSimulations-method.html` (html)
 * `docs/reference/summary-PseudoDualFlexiSimulations-method.html` (html)
 * `docs/reference/summary-PseudoDualSimulations-method.html` (html)
 * `docs/reference/summary-PseudoSimulations-method.html` (html)
 * `docs/reference/summary-Simulations-method.html` (html)
 * `docs/reference/update-Data-method.html` (html)
 * `docs/reference/update-DataDA-method.html` (html)
 * `docs/reference/update-DataDual-method.html` (html)
 * `docs/reference/update-DataParts-method.html` (html)
 * `docs/reference/update-EffFlexi-method.html` (html)
 * `docs/reference/update-Effloglog-method.html` (html)
 * `docs/reference/update-LogisticIndepBeta-method.html` (html)
 * `docs/reference/writeModel.html` (html)

### Configuration Summary

Based on the default config's presets, Renovate will:

  - Start dependency updates only once this onboarding PR is merged
  - Separate major versions of dependencies into individual branches/PRs
  - Do not separate patch and minor upgrades into separate PRs for the same dependency
  - Upgrade to unstable versions only if the existing version is unstable
  - Raise PRs immediately (after branch is created)
  - If semantic commits detected, use semantic commit type <code>fix</code> for dependencies and <code>chore</code> for all others
  - Keep existing branches updated even when not scheduled
  - Disable automerging feature - wait for humans to merge all PRs
  - Ignore `node_modules`, `bower_components`, `vendor` and various test/tests directories
  - Update existing lock files only when <code>package.json</code> is modified
  - Autodetect whether to pin dependencies or maintain ranges
  - Rate limit PR creation to a maximum of two per hour
  - Limit to maximum 20 open PRs at any time
  - Group known monorepo packages together
  - Use curated list of recommended non-monorepo package groupings

:abcd: Would you like to change the way Renovate is upgrading your dependencies? Simply edit the `renovate.json` in this branch with your custom config and the list of Pull Requests in the ""What to Expect"" section below will be updated the next time Renovate runs.

---
You have configured Renovate to use branch `master` as base branch.


### What to Expect

With your current configuration, Renovate will create 1 Pull Request:

<details>
<summary>Update dependency clipboard.js to v2</summary>

  - Schedule: [""at any time""]
  - Branch name: `renovate/clipboard.js-2.x`
  - Merge into: `master`
  - Upgrade [clipboard.js](https://togithub.com/zenorocha/clipboard.js) to `sha256-inc5kl9MA1hkeYUt+EC3BhlIgyp/2jDIyBLS6k3UxPI=`


</details>


---

:question: Got questions? Check out Renovate's [Docs](https://docs.renovatebot.com/), particularly the Getting Started section.
If you need any further assistance then you can also [request help here](https://togithub.com/renovatebot/config-help/issues).


---

This PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#Roche/crmPack).
","renovate[bot]",432,432
"Configure Renovate","https://github.com/Roche/rtables/pull/26","closed",2020-04-15,2020-04-17,2020-04-17,0,"Welcome to [Renovate](https://togithub.com/renovatebot/renovate)! This is an onboarding PR to help you understand and configure settings before regular Pull Requests begin.

:vertical_traffic_light: To activate Renovate, merge this Pull Request. To disable Renovate, simply close this Pull Request unmerged.



---
### Detected Package Files

 * `docs/404.html` (html)
 * `docs/ISSUE_TEMPLATE.html` (html)
 * `docs/LICENSE-text.html` (html)
 * `docs/articles/index.html` (html)
 * `docs/articles/rtables.html` (html)
 * `docs/articles/rtabulate.html` (html)
 * `docs/authors.html` (html)
 * `docs/dev/ISSUE_TEMPLATE.html` (html)
 * `docs/dev/LICENSE-text.html` (html)
 * `docs/dev/articles/index.html` (html)
 * `docs/dev/articles/rtables.html` (html)
 * `docs/dev/articles/rtabulate.html` (html)
 * `docs/dev/authors.html` (html)
 * `docs/dev/index.html` (html)
 * `docs/dev/news/index.html` (html)
 * `docs/dev/reference/Viewer.html` (html)
 * `docs/dev/reference/as.rtable.html` (html)
 * `docs/dev/reference/as.rtable.table.html` (html)
 * `docs/dev/reference/as_html.default.html` (html)
 * `docs/dev/reference/as_html.html` (html)
 * `docs/dev/reference/compare_rtables.html` (html)
 * `docs/dev/reference/dim.rheader.html` (html)
 * `docs/dev/reference/dim.rtable.html` (html)
 * `docs/dev/reference/format_rcell.html` (html)
 * `docs/dev/reference/header-set.html` (html)
 * `docs/dev/reference/header.html` (html)
 * `docs/dev/reference/header_add_N.html` (html)
 * `docs/dev/reference/indented_row.names.html` (html)
 * `docs/dev/reference/index.html` (html)
 * `docs/dev/reference/is.no_by.html` (html)
 * `docs/dev/reference/levels.no_by.html` (html)
 * `docs/dev/reference/list_rcell_format_labels.html` (html)
 * `docs/dev/reference/names.rtable.html` (html)
 * `docs/dev/reference/no_by.html` (html)
 * `docs/dev/reference/order_rrows.html` (html)
 * `docs/dev/reference/order_rtables.html` (html)
 * `docs/dev/reference/rbind.rtable.html` (html)
 * `docs/dev/reference/rbindl_rtables.html` (html)
 * `docs/dev/reference/rcell.html` (html)
 * `docs/dev/reference/rheader.html` (html)
 * `docs/dev/reference/row.names-set-.rtable.html` (html)
 * `docs/dev/reference/row.names.rheader.html` (html)
 * `docs/dev/reference/row.names.rtable.html` (html)
 * `docs/dev/reference/rrow.html` (html)
 * `docs/dev/reference/rrowl.html` (html)
 * `docs/dev/reference/rtable.html` (html)
 * `docs/dev/reference/rtablel.html` (html)
 * `docs/dev/reference/rtabulate.data.frame.html` (html)
 * `docs/dev/reference/rtabulate.factor.html` (html)
 * `docs/dev/reference/rtabulate.html` (html)
 * `docs/dev/reference/rtabulate.logical.html` (html)
 * `docs/dev/reference/rtabulate.numeric.html` (html)
 * `docs/dev/reference/sort_rrows.html` (html)
 * `docs/dev/reference/sort_rtables.html` (html)
 * `docs/dev/reference/sprintf_format.html` (html)
 * `docs/dev/reference/sub-.rheader.html` (html)
 * `docs/dev/reference/sub-.rtable.html` (html)
 * `docs/dev/reference/toString.rtable.html` (html)
 * `docs/dev/reference/unlist.rtable.html` (html)
 * `docs/index.html` (html)
 * `docs/news/index.html` (html)
 * `docs/reference/Viewer.html` (html)
 * `docs/reference/as.rtable.html` (html)
 * `docs/reference/as.rtable.table.html` (html)
 * `docs/reference/as_html.default.html` (html)
 * `docs/reference/as_html.html` (html)
 * `docs/reference/as_html.rtable.html` (html)
 * `docs/reference/by_add_total.html` (html)
 * `docs/reference/by_all.html` (html)
 * `docs/reference/by_combine.html` (html)
 * `docs/reference/by_compare_subset.html` (html)
 * `docs/reference/by_drop_empty_cols.html` (html)
 * `docs/reference/by_factor_to_matrix.html` (html)
 * `docs/reference/by_header.html` (html)
 * `docs/reference/by_header_to_string.html` (html)
 * `docs/reference/by_hierarchical.html` (html)
 * `docs/reference/by_quartile.html` (html)
 * `docs/reference/cbind_rtables.html` (html)
 * `docs/reference/col_by_to_factor.html` (html)
 * `docs/reference/col_by_to_matrix.html` (html)
 * `docs/reference/combine_rrows.html` (html)
 * `docs/reference/compare_rtables.html` (html)
 * `docs/reference/dim.rheader.html` (html)
 * `docs/reference/dim.rtable.html` (html)
 * `docs/reference/empty_rtable.html` (html)
 * `docs/reference/format_rcell.html` (html)
 * `docs/reference/header-set.html` (html)
 * `docs/reference/header.html` (html)
 * `docs/reference/header_add_N.html` (html)
 * `docs/reference/header_indent-set.html` (html)
 * `docs/reference/header_indent.html` (html)
 * `docs/reference/header_row.names-set.html` (html)
 * `docs/reference/header_row.names.html` (html)
 * `docs/reference/indent.html` (html)
 * `docs/reference/indented_row.names.html` (html)
 * `docs/reference/index.html` (html)
 * `docs/reference/insert_rrow.html` (html)
 * `docs/reference/is.no_by.html` (html)
 * `docs/reference/is_empty_rtable.html` (html)
 * `docs/reference/is_non_empty_rtable.html` (html)
 * `docs/reference/is_rtable.html` (html)
 * `docs/reference/label.html` (html)
 * `docs/reference/levels.no_by.html` (html)
 * `docs/reference/list_rcell_format_labels.html` (html)
 * `docs/reference/names.rtable.html` (html)
 * `docs/reference/no_by.html` (html)
 * `docs/reference/order_rrows.html` (html)
 * `docs/reference/order_rtables.html` (html)
 * `docs/reference/rbind.rtable.html` (html)
 * `docs/reference/rbindl_rtables.html` (html)
 * `docs/reference/rcell.html` (html)
 * `docs/reference/rheader.html` (html)
 * `docs/reference/row.names-set-.rtable.html` (html)
 * `docs/reference/row.names.rheader.html` (html)
 * `docs/reference/row.names.rtable.html` (html)
 * `docs/reference/rrow.html` (html)
 * `docs/reference/rrowl.html` (html)
 * `docs/reference/rtable.html` (html)
 * `docs/reference/rtablel.html` (html)
 * `docs/reference/rtabulate.data.frame.html` (html)
 * `docs/reference/rtabulate.factor.html` (html)
 * `docs/reference/rtabulate.html` (html)
 * `docs/reference/rtabulate.logical.html` (html)
 * `docs/reference/rtabulate.numeric.html` (html)
 * `docs/reference/sort_rrows.html` (html)
 * `docs/reference/sort_rtables.html` (html)
 * `docs/reference/sprintf_format.html` (html)
 * `docs/reference/sub-.rheader.html` (html)
 * `docs/reference/sub-.rtable.html` (html)
 * `docs/reference/toString.empty_rtable.html` (html)
 * `docs/reference/toString.rtable.html` (html)
 * `docs/reference/unlist.rcell.html` (html)
 * `docs/reference/unlist.rrow.html` (html)
 * `docs/reference/unlist.rtable.html` (html)
 * `docs/reference/var_labels-set.html` (html)
 * `docs/reference/var_labels.html` (html)
 * `docs/reference/var_labels_remove.html` (html)
 * `docs/reference/var_relabel.html` (html)
 * `docs/reference/with_by_header.html` (html)
 * `docs/reference/with_label.html` (html)

### Configuration Summary

Based on the default config's presets, Renovate will:

  - Start dependency updates only once this onboarding PR is merged
  - Separate major versions of dependencies into individual branches/PRs
  - Do not separate patch and minor upgrades into separate PRs for the same dependency
  - Upgrade to unstable versions only if the existing version is unstable
  - Raise PRs immediately (after branch is created)
  - If semantic commits detected, use semantic commit type <code>fix</code> for dependencies and <code>chore</code> for all others
  - Keep existing branches updated even when not scheduled
  - Disable automerging feature - wait for humans to merge all PRs
  - Ignore `node_modules`, `bower_components`, `vendor` and various test/tests directories
  - Update existing lock files only when <code>package.json</code> is modified
  - Autodetect whether to pin dependencies or maintain ranges
  - Rate limit PR creation to a maximum of two per hour
  - Limit to maximum 20 open PRs at any time
  - Group known monorepo packages together
  - Use curated list of recommended non-monorepo package groupings

:abcd: Would you like to change the way Renovate is upgrading your dependencies? Simply edit the `renovate.json` in this branch with your custom config and the list of Pull Requests in the ""What to Expect"" section below will be updated the next time Renovate runs.

---
You have configured Renovate to use branch `master` as base branch.


### What to Expect

With your current configuration, Renovate will create 7 Pull Requests:

<details>
<summary>Update dependency clipboard.js to v2.0.6</summary>

  - Schedule: [""at any time""]
  - Branch name: `renovate/clipboard.js-2.x`
  - Merge into: `master`
  - Upgrade [clipboard.js](https://togithub.com/zenorocha/clipboard.js) to `sha256-inc5kl9MA1hkeYUt+EC3BhlIgyp/2jDIyBLS6k3UxPI=`


</details>

<details>
<summary>Update dependency font-awesome to v5.13.0</summary>

  - Schedule: [""at any time""]
  - Branch name: `renovate/font-awesome-5.x`
  - Merge into: `master`
  - Upgrade [font-awesome](https://togithub.com/FortAwesome/Font-Awesome) to `sha256-wN7QJaqAwQ03kgUhyN4EU2phRdDkLrQYbFe0EvpQ60U=`
  - Upgrade [font-awesome](https://togithub.com/FortAwesome/Font-Awesome) to `sha256-h20CPZ0QyXlBuAw7A+KluUYx/3pK+c7lYEpqLTlxjYQ=`


</details>

<details>
<summary>Update dependency headroom to v0.11.0</summary>

  - Schedule: [""at any time""]
  - Branch name: `renovate/headroom-0.x`
  - Merge into: `master`
  - Upgrade [headroom](https://togithub.com/WickyNilliams/headroom.js) to `sha256-ZX/yNShbjqsohH1k95liqY9Gd8uOiE1S4vZc+9KQ1K4=`
  - Upgrade [headroom](https://togithub.com/WickyNilliams/headroom.js) to `sha256-AsUX4SJE1+yuDu5+mAVzJbuYNPHj/WroHuZ8Ir/CkE0=`


</details>

<details>
<summary>Update dependency jquery to v3.5.0</summary>

  - Schedule: [""at any time""]
  - Branch name: `renovate/jquery-3.x`
  - Merge into: `master`
  - Upgrade [jquery](https://togithub.com/jquery/jquery) to `sha256-xNzN2a4ltkB44Mc/Jz3pT4iU1cmeR0FkXs4pru/JxaQ=`


</details>

<details>
<summary>Update dependency mathjax to v2.7.7</summary>

  - Schedule: [""at any time""]
  - Branch name: `renovate/mathjax-2.x`
  - Merge into: `master`
  - Upgrade [mathjax](https://togithub.com/mathjax/MathJax) to `sha256-i3irDLHRqq2zJOdZcSjClFErB7aIoT2dCUOOjILQBOQ=`
  - Upgrade [mathjax](https://togithub.com/mathjax/MathJax) to `sha256-y6wabJ5k7SsCCoLIfG266Ea3KiRvzUD6o7tNcZAhG0g=`


</details>

<details>
<summary>Update dependency twitter-bootstrap to v3.4.1</summary>

  - Schedule: [""at any time""]
  - Branch name: `renovate/twitter-bootstrap-3.x`
  - Merge into: `master`
  - Upgrade [twitter-bootstrap](https://togithub.com/twbs/bootstrap) to `sha256-nuL8/2cJ5NDSSwnKD8VqreErSWHtnEP9E7AySL+1ev4=`
  - Upgrade [twitter-bootstrap](https://togithub.com/twbs/bootstrap) to `sha256-bZLfwXAP04zRMK2BjiO8iu9pf4FbLqX6zitd+tIvLhE=`


</details>

<details>
<summary>Update dependency twitter-bootstrap to v4</summary>

  - Schedule: [""at any time""]
  - Branch name: `renovate/twitter-bootstrap-4.x`
  - Merge into: `master`
  - Upgrade [twitter-bootstrap](https://togithub.com/twbs/bootstrap) to `sha256-WqU1JavFxSAMcLP2WIOI+GB2zWmShMI82mTpLDcqFUg=`
  - Upgrade [twitter-bootstrap](https://togithub.com/twbs/bootstrap) to `sha256-L/W5Wfqfa0sdBNIKN9cG6QA5F2qx4qICmU2VgLruv9Y=`


</details>

<br />

:children_crossing: Branch creation will be limited to maximum 2 per hour, so it doesn't swamp any CI resources or spam the project. See docs for `prhourlylimit` for details.


---

:question: Got questions? Check out Renovate's [Docs](https://docs.renovatebot.com/), particularly the Getting Started section.
If you need any further assistance then you can also [request help here](https://togithub.com/renovatebot/config-help/issues).


---

This PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#Roche/rtables).
","renovate[bot]",2,0
"GitHub Actions CI","https://github.com/openpharma/visR/pull/49","closed",2020-04-15,2020-04-20,2020-04-19,2,"PR to issue ref: #26 

Finally I have used Github Actions to set up CI workflow. I have set up basic CI workflow which is evaluating pipelines in linux and windows environment. Moreover actions/cache makes that CI workflow is much more faster (caching dependencies) 

Working on that I have met some troubles. During CI build, after installation of all newest versions of dependencies, Alluvial vignette throw mysterious error while running vr_alluvial_plot() function:
`The subscript 'tibble_vars[[i]]' has value 0 but must be a positive location.`.
I have been digging and It takes me a piece of time to find that it is as follows: 
function `easyalluvial::alluvial_long()` is calling inside` dplyr::select_if()` on tibble handling data where columns in the tibble are named using 'i' (iterator).  In the past there have been already problem like that: https://github.com/tidyverse/dplyr/issues/4380 but this time I have found that it is not caused by updating of dplyr but latest tibble 3.0.0 released 16 days ago. When I force installation of previous version of  tibble in DESCRIPTION FILE then everything works fine. So it is temporary solution until tibble package team will not fix that.  

Also for some reason there has been problem with automate installing of : ""rstantools"", ""RBesT"", ""rcmdcheck"" and I decided to add a line with 'manual' installation before installing all dependencies what solved the case.  

For now package is build including vignettes and check throw:
0 errors ✔ | 8 warnings ✖ | 8 notes ✖
**so we have 0 errors but warnings need to be fixed.**

details are here: https://github.com/openpharma/visR/runs/587378443?check_suite_focus=true

For now CI build on GitHub Actions CI branch have failed only because I have set restrictive option : `error_on = ""warning""` . It is option what we need to discuss of course.  

In next step I will add CD part of workflow (rebuilding of docs file).","kawap",4,-1
"Metric for whether a BugReports URL is provided","https://github.com/pharmaR/riskmetric/issues/100","closed",2020-04-15,2020-05-05,2020-05-05,0,"We already have a `pkg_ref`field for `bug_reports_url`, but we don't wrap this in a `pkg_metric` or have a scoring mechanism. 

To complete this metric, we need to add
- `assess_has_bug_reports_url`
   - I don't think we need any `pkg_ref` dispatch for this as any sub-class-specific behavior is handled in `pkg_ref_cache.bug_reports_url`
   - **returns:** a `character` value containing the BugReports field contents wrapped in a  `c(""pkg_metric_has_bug_reports_url"", ""pkg_metric"", ""character"")` S3 class (constructed using `pkg_metric()`)
- `score.pkg_metric_has_bug_reports_url`
   - **returns:** a `logical` value indicating whether the package has a BugReports field filled in

`pkg_ref_cache.bug_reports_url` was already added as part of #48 

---

@elimillera volunteered to help with this one 👍 . Please let us know if you need any further clarification or if bandwidth to work on it is hard to come by.","dgkf",20,0
"add test if  roxygen has been run","https://github.com/Roche/rtables/pull/27","closed",2020-04-17,2020-05-02,2020-05-01,5,"Hey @gmbecker,

I have added a simple circleci check to see whether the manuals, DESCRIPTION and NAMESPACE have been update.","waddella",14,-1
"Dev/website","https://github.com/pharmaR/riskmetric/pull/101","closed",2020-04-19,2020-05-10,2020-05-10,2,"","elong0527",21,0
"Issue 100 has bug reports url","https://github.com/pharmaR/riskmetric/pull/102","closed",2020-04-20,2020-05-05,2020-05-05,1,"This resolves #100.

I tested this on a couple of packages and it looks to be working as expected. Let me know if I am missing anything and I would be happy to change it!
I also updated the assess_test file to reflect the changes.

Also, ignore all the commits, RStudio did not like working with GitHub today.","elimillera",15,0
"[New Metric] code coverage pkg_source objs; Issue #6","https://github.com/pharmaR/riskmetric/pull/104","closed",2020-04-26,2021-03-31,2020-04-29,0,"[Attempt number two](#103) - hopefully with less conflicts.

- Had to implement a 'custom' code method to test code coverage to avoid termination on error. It's practically identical to the base `covr::package_coverage` but skips the line that stops on errors.
- Added caching for both function- and expression-tallied coverage
- Added scoring for package coverage, returning total coverage as returned from `covr`
- Updated `summarize_risk` to handle `NA`s 
- Updated `.risk_weights` to include default weights for recently added metrics","dgkf",3,-336
"Adding code coverage metric","https://github.com/pharmaR/riskmetric/pull/103","closed",2020-04-26,2020-04-26,2020-04-26,1,"- Had to implement a 'custom' code method to test code coverage to avoid termination on error. It's practically identical to the base `covr::package_coverage` but skips the line that stops on errors.
- Added caching for both function- and expression-tallied coverage
- Added scoring for package coverage, returning total coverage as returned from `covr`
- Updated `summarize_risk` to handle `NA`s 
- Updated `.risk_weights` to include default weights for recently added metrics","dgkf",0,0
"argument height","https://github.com/Roche/ggtips/issues/30","open",2020-04-27,2020-04-30,NA,6,"If I don't specify the height in plotwithTooltips a get the error:
Error object 'height' not found
if i do specify it: 
ggtips::plotWithTooltips(plot, varDict = varDict, height = 750)

i get the error:
formal argument ""height"" matched by multiple actual arguments

complete part in server part
 output$fluoplot <- renderUI ({
plot= ggplot()+
                geom_point(data = dataselectFM_pressure,
                           aes(x = get(Xvaluefluo), 
                               y = pressure,
                               color = as.character(FMcolor))) +
                geom_point(data = dataselectGM_pressure,
                           aes(x = get(Xvaluefluo),
                               y = pressure,
                               color = as.character(GMcolor)))+
                # coord_cartesian(xlim = ranges$x, ylim = ranges$y, expand = FALSE)+
                facet_grid(.~batch, scales = ""free_x"")
    varDict=list(time = """", pressure = ""bar"")
    ggtips::plotWithTooltips(plot, varDict = varDict, height = 750)
)}

complete part in ui part for this plot:

fluidRow (
              box(
                width=12,
                collapsible = T,
                collapsed = F,
                uiOutput(""fluoplot""#,
                             # dblclick = ""OMUplot_dblclick"",
                             # brush = brushOpts(id = ""OMUplot_brush"",
                             # resetOnNew = TRUE )
                        
                       
                             
                             
                             
           ),
                radioButtons(inputId = ""rb_Xasfluo"",
                             label = h5(""set X-axis""),
                             choices = list(
                               ""Date"" = ""time"",
                               ""Hours of incubation in batch "" = ""incubation""),
                             selected = ""time"",
                             inline = TRUE),
                
                checkboxInput(inputId = ""cb_facetfluo"",
                              label = h5(""set batches grid""),
                              value = TRUE,
                )
              )
            )
;
The ggplot works when not using in in renderPlot

what i'm i doing wrong?

regards","wietse1",420,417
"pkg_ref_cache_DESCRIPTION.R reads ""description"" instead of ""DESCRIPTION""","https://github.com/pharmaR/riskmetric/issues/106","closed",2020-04-29,2020-05-10,2020-05-10,3,"I'm not sure if in some cases the DESCRIPTION file is lower-case, but I think these need to be swapped to upper-case. `pkg_ref(""dplyr"") %>% as_tibble() %>% assess()` results in the following warning: 
Warning message:
In read.dcf(file.path(x$path, ""description"")) :
  cannot open compressed file '~/my-R-libs/dplyr/description', probable reason 'No such file or directory'","ndelcamp",11,0
"source code coverage from remote ","https://github.com/pharmaR/riskmetric/issues/105","open",2020-04-29,2020-06-19,NA,1,"Remote package source
1. github repo
1. gitlab repo
1. CRAN remote version

-> remote package code coverage (URL)

0. create temporary folder to download the source code
1. run code coverage/metrics using source code 

```
as_pkg_source <- function(x) {

extract_metric_remote <- function(URL, cache_method_from_source)
```","elong0527",418,367
"Confirm checking up-to-date man pages is working","https://github.com/Roche/rtables/issues/28","closed",2020-05-01,2020-12-16,2020-12-16,0,"@waddella this doesn't appear to work, going into circleci I see:

```
> roxygen2::roxygenize('.', roclets = c('rd', 'collate', 'namespace'))
Warning: Version of roxygen2 last used with this package is 7.1.0.  You only have version 7.0.2
Writing NAMESPACE
Loading rtables
Loading required package: magrittr
Creating a generic function for ‘nrow’ from package ‘base’ in package ‘rtables’
Creating a generic function for ‘ncol’ from package ‘base’ in package ‘rtables’
Creating a generic function for ‘rbind’ from package ‘base’ in package ‘rtables’
Writing DM.Rd
Writing NAMESPACE
> 
> 
manuals are upto date with roxygen comments
```

The ""Writing DM.Rd"" suggests that the rd files were not up to date and thus this checek should have failed, correct?

_Originally posted by @gmbecker in https://github.com/Roche/rtables/pull/27/files_","gmbecker",229,0
"rd-up-to-date checking should come before R CMD check","https://github.com/Roche/rtables/issues/29","closed",2020-05-01,2020-12-16,2020-12-16,0,"@waddella rd-up-to-date checking should come before R CMD check and end the pipeline if it fails because doing the expensive check is pointless if the checks  aand example running isn't happening on the correct files anyway

_Originally posted by @gmbecker in https://github.com/Roche/rtables/pull/27/review_comment/create_","gmbecker",229,0
"add contributors #28","https://github.com/Roche/ggtips/pull/34","closed",2020-05-06,2020-05-08,2020-05-08,0,"Add list of contributors unfortunately I was not able to do this automatically using  GitHub API like in my other repo, because not all users commit with their GitHub email.

![contributors](https://user-images.githubusercontent.com/280241/81218173-166d6080-8fde-11ea-8744-6393ef7ada1f.png)

So I've added them by hand, and no avatars. just username and link to his profile if he have one.","jcubic",2,0
"fix issue with tooltip offset with scrollbar #31","https://github.com/Roche/ggtips/pull/32","closed",2020-05-06,2020-05-06,2020-05-06,0,"Fixing tooltip offset when there is scrollbar on the page. Should also fix any scrollbar on any container that include the plot.","jcubic",0,0
"Unit tests failing for R:release","https://github.com/Roche/ggtips/issues/33","closed",2020-05-06,2020-05-08,2020-05-08,3,"## Observed behavior:

```
> test_check(""ggtips"")
── 1. Failure: isNullUnit() (@test_grobs.R#70)  ────────────────────────────────
ggtips:::isNullUnit(unit(1, ""null"")) isn't true.
── 2. Error: isNullUnit() (@test_grobs.R#71)  ──────────────────────────────────
object 'unit.list' not found
Backtrace:
 1. testthat::expect_true(...)
 6. grid:::unit.list
 7. base::get(name, envir = asNamespace(pkg), inherits = FALSE)
```

## Environment:

```
R version 4.0.0 (2020-04-24) -- ""Arbor Day""
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)
```","cosi1",2,0
"Wrong tooltip position","https://github.com/Roche/ggtips/issues/31","closed",2020-05-06,2020-05-07,2020-05-07,6,"Reproduction:
1. add some element to the demo app UI:
```
mainPanel = mainPanel(
  shiny::div(style = ""height:400px;""), # like this one
  uiOutput(outputId = ""myPlot"")
)
```
2. Run demo app and scroll to bottom
3. Hover on some point
  - expected: a tooltip shows next to the point
  - observed: a tooltip appears above the plot (see screenshot)
![Screenshot from 2020-05-06 11-14-38](https://user-images.githubusercontent.com/29655451/81161392-cc5b8f00-8f8b-11ea-9208-991a39e7d005.png)","mjakubczak",1,0
"Add a clickable Travis-CI badge","https://github.com/Roche/ggtips/pull/37","closed",2020-05-08,2020-05-18,2020-05-08,0,"","cosi1",0,-10
"Fix for R 4.0.0","https://github.com/Roche/ggtips/pull/35","closed",2020-05-08,2020-05-08,2020-05-08,0,"","mjakubczak",0,0
"fix getBBox in Firefox","https://github.com/Roche/ggtips/pull/38","closed",2020-05-08,2020-05-18,2020-05-11,0,"There problem was that proximity using size was founding rec that have 0 width and height that was throwing
exception in Firefox. It was working fine in Chrome

Fix #36","jcubic",3,-7
"Some tooltips are not displayed in firefox","https://github.com/Roche/ggtips/issues/36","closed",2020-05-08,2020-05-15,2020-05-11,1,"Reproduction:
open demo app in firefox: https://jcubic.shinyapps.io/ggtips/

expected: all tooltips are displayed properly
observed: some tooltips don't show up + there's an error in the console 
![Screenshot from 2020-05-08 12-37-35](https://user-images.githubusercontent.com/29655451/81398168-fbf3ce00-9128-11ea-8962-3ba292632d2e.png)
","mjakubczak",3,-4
"use upper-case description filename; Fixes #106","https://github.com/pharmaR/riskmetric/pull/107","closed",2020-05-08,2021-03-31,2020-05-08,2,"- changed expected description file name from ""description"" to ""DESCRIPTION""
- tested on macos (not-case sensitive file system) and linux (case-sensitive file system) to confirm changes work as expected on all platforms","dgkf",0,-327
"`pkg_ref_cache.bug_reports_host` throws STRSXP error when $bug_reports_url is NULL","https://github.com/pharmaR/riskmetric/issues/108","closed",2020-05-12,2020-09-15,2020-09-15,0,"Encountered when running the following code:

```r
x <- pkg_ref(""gsDesign"") # pkg_install
x$bug_reports_url
#> NULL
assess_last_30_bugs_status(x)
#> Error in get_component_(x, 1) : Not compatible with STRSXP: [type=NULL]. 
```

I believe this is due to not handling `NULL` as a possible input in `urltools::domain`. 

Suggest changing from `x$bug_reports_url` returning `NULL` when no url is provided to instead return `NA_character_`. ","dgkf",126,0
"blog post for R Validation Hub ","https://github.com/pharmaR/riskmetric/issues/109","closed",2020-05-13,2020-06-24,2020-06-24,2,"  
- draft an outline (just the riskmetric package)

- High level summary of the use for riskmetric from user perspective
- how to extract a metric and put into a report 
","elong0527",42,0
"Implement a unit test for proxy - bug report","https://github.com/pharmaR/riskmetric/issues/111","closed",2020-05-13,2020-05-27,2020-05-27,1,"","elong0527",14,0
"Implement a unit testing for additional packages checking","https://github.com/pharmaR/riskmetric/issues/110","closed",2020-05-13,2020-06-10,2020-06-10,3,"
for unit testing: embed source code ","elong0527",28,0
"`pkgdown::build_site()` not working due to issue in `vr_alluvial_plot`","https://github.com/openpharma/visR/issues/51","closed",2020-05-14,2020-05-16,2020-05-16,3,"#### Issue description

`pkgdown::build_site()` not working due to issue in `vr_alluvial_plot`

#### Steps to reproduce the issue

Run `vignettes/Alluvial.Rmd` up to line 79 using R 4.0 and the latest version of tibble.

#### What's the actual result?

```r
vr_alluvial_plot(dataset,
                 id = ""PatientID"",
                 linename = ""LineName"",
                 linenumber = ""LineNumber"",
                 data_source = ""Simulatation"")

Error: Must extract column with a single valid subscript.
x Subscript `tibble_vars[[i]]` has value 0 but must be a positive location.
Run `rlang::last_error()` to see where the error occurred. 
```
#### Additional details / screenshot

May be an R 4.0 issue?","epijim",2,0
"Ensure pkg_ref_cache.covr_coverage.pkg_source points to appropriate path to the package","https://github.com/pharmaR/riskmetric/issues/112","closed",2020-05-14,2020-05-14,2020-05-14,2,"The call to `covr::package_coverage()` does not include the `path` argument, which has default value `"".""`. Since users will likely not have the source code in their working directory, I think line 14 of R/pkg_ref_cache_covr_coverage.R should point to the `pkg_ref` path: 
```R
covr::package_coverage(path = x$path, type = ""none"", code = deparse(expr))
```
Example to reproduce error:
```R
library(riskmetric)
source_code_path <- ""source-code/acepack_1.4.1/acepack/""
ref <- pkg_ref(source_code_path)
ref$covr_coverage
# Error: ‘/home/ndelcamp/risk-assessments’ does not contain a package!

# Results are expected to match:
expr <- bquote(tools::testInstalledPackage(""acepack"", types = 'tests'))
covr::package_coverage(path = source_code_path, type = ""none"", code = deparse(expr))
# acepack Coverage: 33.57%
# R/zzz.R: 0.00%
# src/rlsmo.f: 0.00%
# R/acepack.R: 17.88%
# src/avas.f: 34.32%
# src/ace.f: 59.89%
```
I did test the change on my repo, which resulted in the expected result.","ndelcamp",0,0
"explicitly declare covr package coverage path; Fixes #103","https://github.com/pharmaR/riskmetric/pull/113","closed",2020-05-14,2020-05-14,2020-05-14,1,"- Adds explicit package path to `covr::package_coverage` call
- Added a small comment to explain why we pass this expression to the covr call for anyone that happens to stumble up on this code.","dgkf",0,0
"Remove bioconductor dependency","https://github.com/openpharma/visR/issues/50","closed",2020-05-14,2020-05-14,2020-05-14,2,"#### Issue description

We have bioconductor dependencies for the example data - this makes installation difficult I'm getting errors now on R 4.0

See here: #42 

","epijim",0,0
"Update license","https://github.com/Roche/ggtips/pull/39","closed",2020-05-15,2020-05-18,2020-05-15,4,"","cosi1",0,-3
"hotfix for issue 515","https://github.com/openpharma/visR/pull/52","closed",2020-05-16,2020-05-16,2020-05-16,0,"This doesn't solve the problem properly - just implements a workaround","epijim",0,0
"running checks has 1 error ✖ | 8 warnings ✖ | 7 notes ✖","https://github.com/openpharma/visR/issues/54","closed",2020-05-16,2020-05-20,2020-05-20,0,"See https://github.com/openpharma/visR/runs/681093111?check_suite_focus=true

Will try and knock those down a bit in this issue","epijim",4,0
"Update docs","https://github.com/openpharma/visR/pull/53","closed",2020-05-16,2020-05-16,2020-05-16,0,"","epijim",0,0
"All the warnings and errors gone! Maybe.","https://github.com/openpharma/visR/pull/57","closed",2020-05-17,2021-03-03,2020-05-20,0,"This will close issue #54","epijim",3,-287
"Fixes the errors in package check, and ~5 of the warnings","https://github.com/openpharma/visR/pull/55","closed",2020-05-17,2020-05-17,2020-05-17,0,"Still lots more to sort out - including some bugs/difficult bits to handle like the attrition plot writing to the system","epijim",0,0
"Update master with dev","https://github.com/openpharma/visR/pull/56","closed",2020-05-17,2020-05-17,2020-05-17,0,"","epijim",0,0
"generating kaplan-meier table/plot without strata","https://github.com/openpharma/visR/issues/59","closed",2020-05-19,2020-10-01,2020-10-01,2,"#### Issue description
I'm hoping to generate kaplan-meier plots/tables without stratifying my population. My equation looks like this: 
surv_eq <- ""survival::Surv(time, status)~1""


#### Steps to reproduce the issue

Please share code if possible.

```r
surv_eq <- ""survival::Surv(time, status)~1""

vr_kaplan_meier_summary(km_dt, surv_eq)

vr_kaplan_meier(km_dt, surv_eq)
```

#### What's the expected result?
I get back a summary table if I supply ""ms_subtype"" rather than ""1"" as the strata. For possibly unrelated reasons, I'm unable to generate a kaplan-meier plot even with strata supplied (see below).

#### What's the actual result?

vr_kaplan_meier_summary() generates this error if I _do not_ supply strata:
Error: Column `strata` must be length 9 (the number of rows) or one, not 0

vr_kaplan_meier_summary() generates the expected tables if I _do_ supply strata.

vr_kaplan_meier() generates this error if I _do not_ supply strata:
Error in data.frame(time = survfit_summary$time, n.risk = survfit_summary$n.risk, : arguments imply differing number of rows: 43, 0

vr_kaplan_meier() generates this error if I _do_ supply strata:
Error in summarize(., max_time = max(time)) : argument ""by"" is missing, with no default

#### Additional details / screenshot
","kzalocusky",135,0
"NA Handling in vr_table_one","https://github.com/openpharma/visR/issues/58","closed",2020-05-19,2021-05-26,2021-05-26,3,"Greetings!

I'm hoping to use vr_table_one, but some of my values are missing/NA. I run into this error:

Error in quantile.default(x, probs = 0.25) : 
  missing values and NaN's not allowed if 'na.rm' is FALSE

If I change the NAs to ""missing"", as in the example in the doc, it then treats my continuous variable (age) as a categorical, and rather than get mean/median/etc, I get ""number of unique values"" in the table.

Is there a good workaround for this?

Thanks!
Kelly","kzalocusky",372,0
"Update docs","https://github.com/openpharma/visR/pull/60","closed",2020-05-20,2020-05-20,2020-05-20,0,"","epijim",0,0
"Fix for missing plot data","https://github.com/Roche/ggtips/pull/40","closed",2020-05-21,2020-05-21,2020-05-21,0,"ggplot ignores data rows with NA coordinates (x, y). The ggtips demo will produce an error for the following case:
```
# update the function in demo server.R and then run the demo
plotIris <- function(x_aes, y_aes) {
  d <- iris
  d[5, ""Sepal.Length""] <- NA
  ggplot(data = d, mapping = aes_string(x = x_aes, y = y_aes)) +
    geom_point(mapping = aes(colour = Species)) +
    theme(legend.position = ""bottom"")
}
```
The error message:
```
Warning: Removed 1 rows containing missing values (geom_point).
Warning: Error in data.frame: arguments imply differing number of rows: 150, 149
```

This PR resolves this issue.","mjakubczak",0,0
"Unstratified estimates, summary and plot.","https://github.com/openpharma/visR/pull/61","closed",2020-05-21,2020-10-01,2020-10-01,1,"Allow for unstratified estimates, summary and plot by adding $strata to list.","SHAESEN2",133,0
"fix pkg_ref_cache.name_first_letter","https://github.com/pharmaR/riskmetric/pull/114","closed",2020-05-22,2020-06-01,2020-06-01,9,"This fix is necessary because this line only matches dispatches on classes of `pkg_ref_cache` objects, so must at least include `.default`:
https://github.com/pharmaR/riskmetric/blob/b2c8f5097b6fc8c2b13a7ed6cc01dc22efc54bf2/R/pkg_ref_cache.R#L91
The general workflow will still work without this, but for example, calling the `print` method will ignore any new cached metrics.

---

Note that this is a draft PR because there's a bug that needs to be fixed first: the `bugs_status` assess returns an `<error>`, which causes `score()` to generate warnings.","mpadge",10,0
"Dependency dplyr tibble magrittr janitor","https://github.com/pharmaR/riskmetric/pull/115","closed",2020-05-23,2020-09-10,2020-06-30,1,"remove dependency of 

dplyr 
tibble 
magrittr
janitor","elong0527",38,-72
"Adds two embeded packages and updates unit tests for assessments","https://github.com/pharmaR/riskmetric/pull/116","closed",2020-05-24,2020-06-30,2020-06-30,1,"I have created two synthetic packages that can mimic packages being tested from source. Next on the list is to create tests for pkg_ref_class and figure out HTTP mocking.

This is part of #110 but should not close it.","elimillera",37,0
"Extend the NA rows removal","https://github.com/Roche/ggtips/pull/41","closed",2020-05-25,2020-05-25,2020-05-25,0,"This extends the #40 by checking the presence of all aesthetics required by the layer. It also allows to use callback with an empty varDict and fixes the getLayerAesthetics function.","mjakubczak",0,0
"Handle removing NAs in data for geom_blank","https://github.com/Roche/ggtips/pull/42","closed",2020-05-25,2020-05-25,2020-05-25,0,"","marcin-kam",0,0
"Prevent undefined columns select","https://github.com/Roche/ggtips/pull/43","closed",2020-05-25,2020-05-25,2020-05-25,0,"","marcin-kam",0,0
"Discussion of the alignment with the shiny app","https://github.com/pharmaR/riskmetric/issues/120","closed",2020-05-27,2020-08-05,2020-08-05,6,"","elong0527",70,0
"Discussion of user cases","https://github.com/pharmaR/riskmetric/issues/119","closed",2020-05-27,2020-07-22,2020-07-22,2,"","elong0527",56,0
"Introduce `pkg_metric_na` subclass to differentiate not-applicable assessments","https://github.com/pharmaR/riskmetric/issues/118","closed",2020-05-27,2020-08-04,2020-08-04,1,"The warnings generated by assessments which may not be applicable to certain `pkg_ref` subclasses seem to be generating a lot of confusion. Rightfully so. The warnings signal quite a bit of internal jargon and give no indication that they are expected behavior.

As mentioned in the discussion in #114 with @mpadge, and in a few emails I've received from users, these warnings seem to be missing the mark in terms of user reaction, so something isn't being communicated properly.

To mitigate this, I suggest adding a `pkg_metric_na` subclass similar to our existing `pkg_metric_error`. This will differentiate metrics which are explicitly not applicable from those that have not yet been implemented (maybe we should even have a `pkg_metric_todo`?). We could then choose how to handle these separately from errors and hopefully provide more meaningful output to the user.

Open for feedback on the design here, but I think it's worth experimenting with. ","dgkf",69,0
"Rename high-level user-facing functions","https://github.com/pharmaR/riskmetric/pull/117","closed",2020-05-27,2021-03-31,2020-06-10,3,"As outlined in #77, moved forward with various function renamings with a few quality-of-life fixes along the way. 

- `score` => `pkg_score` for `tbl_df` and `list_of_pkg_metric`
- `score` => `metric_score` for `pkg_metric`
- `assess` => `pkg_assess`
- `summarize_risk` => `summarize_score`
- `pkg_score` applied to a `tbl_df` now also performs `summarize_score`, storing results in a hard-coded column, ""pkg_score""
- `riskmetric.Rmd` and `extending-riskmetric.Rmd` updated to reflect changes
- errors triggered through `bug_reports`, first logged in #108 fixed
- related to #108, improved error messages for errors caused within `scrape_bug_reports`
- `score.pkg_metric_has_bug_reports_url` changed to  returning a numeric instead of a logical to be consistent with other scores
- added `%||%` (common shorthand for ""if not NULL else"") to utils
- added safeguard to `pkg_metric` constructor disallowing accidental `structure(NULL, ...)` which will throw a warning. We should still aim to avoid this, though it shouldn't crop up accidentally now. ","dgkf",14,-294
"as_html is not working correctly","https://github.com/Roche/rtables/issues/30","closed",2020-05-28,2020-07-28,2020-07-28,0," try with `Viewer(tbl)` (at exmple toString.VTableTree","waddella",61,0
"adding scoring for remaining webapp metrics as outlined in #94","https://github.com/pharmaR/riskmetric/pull/121","closed",2020-06-02,2021-03-31,2020-06-03,0,"Hey @elong0527 - I went through and added score functions for some of the remaining webapp metrics. These were pretty trivial to implement, but I wanted to get them finished up so that the web app work can move forward. 

There are a lot of files changed, but it boils down to primarily
- Rebuilt documentation so that `assess_has_bug_reports_url`, `score.pkg_metric_has_bug_reports_url` get added to `NAMESPACE`
- Added `assess_has_website`, `score.pkg_metric_has_website`
- Added `assess_has_maintainer`, `score.pkg_metric_has_maintainer`
- Added `assess_has_source_control`, `score.pkg_metric_has_source_control`

minor changes:
- renamed `pkg_websites` to `website_urls`, as the `pkg` part is implied by it being a field of a `pkg_ref` class object. ","dgkf",1,-301
"fixing missed documentation updates during copy-and-paste","https://github.com/pharmaR/riskmetric/pull/123","closed",2020-06-03,2020-06-03,2020-06-03,0,"","dgkf",0,0
"Include weight for downloads_1yr in .risk_weights ","https://github.com/pharmaR/riskmetric/issues/124","closed",2020-06-03,2020-09-30,2020-09-30,2,"The downloads_1yr metric is not included in the risk calculation because it is not included in `.risk_weights`.","ndelcamp",119,0
"Update assess_* functions that have the assess_news_current description","https://github.com/pharmaR/riskmetric/issues/122","closed",2020-06-03,2020-06-03,2020-06-03,2,"Small documentation updates are needed to a couple of the `assess_*` functions. `assess_license`, and `assess_covr_coverage` have the description ""Assess a package for an up-to-date NEWS file"".","ndelcamp",0,0
"Metric for CRAN check results","https://github.com/pharmaR/riskmetric/issues/125","closed",2020-06-04,2021-05-26,2021-05-26,3,"Motivated by the now fairly stable interface provided by rOpenSci's [`cchecks` package](https://github.com/ropenscilabs/cchecks) which archives all results of CRAN checks at [`cranchecks.info`](https://docs.cranchecks.info/). This would admittedly be restricted to CRAN packages only, and so would exclude bioconductor, but these checks provide very useful diagnostic indicators. The following compares [`foghorn`](https://github.com/fmichonneau/foghorn) (current check results only) output with `cchecks` (by default last 30 days of checks):

``` r
library(foghorn)
pkg <- ""rstan""
res1 <- cran_details(pkg = ""rstan"")
chk <- apply (res1, 1, function (i) {
              print (cli::boxx (paste0 (i [[""result""]],
                                        "" (N = "", i [[""n_flavors""]], "")""),
                                padding = c (0, 5, 0, 5)))
              message (i [[""message""]])
})
#> ┌───────────────────────┐
#> │     NOTE (N = 12)     │
#> └───────────────────────┘
#>      GNU make is a SystemRequirements.
#> ┌───────────────────────┐
#> │     NOTE (N =  7)     │
#> └───────────────────────┘
#>      installed size is 192.0Mb
#>      sub-directories of 1Mb or more:
#>      libs  189.2Mb

library(cchecks)
x <- cch_pkgs_history (x = pkg)
h <- x$data$history$check_details # main data.frame of check results
table (data.frame (output = h$output,
                   n_flavors = vapply (h$flavors, length, integer (1))))
#>                                    n_flavors
#> output                              12
#>   GNU make is a SystemRequirements. 30
```

<sup>Created on 2020-06-04 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

The 30 values for `ccheck` results are the last 30 days of checks, with that Note occurring 12 times on each day. (""installed size"" Notes do not appear in `ccheck` results for some reason?). One of the primary motivations of `cchecks` is because CRAN often update their checks without warning, with authors only getting an email sometime after packages start failing. Accessing these services could provide an additional useful diagnostic.","mpadge",356,0
"Avoid Rplots.pdf creation in the app dir","https://github.com/Roche/ggtips/pull/44","closed",2020-06-10,2020-06-11,2020-06-11,0,"For some reason, `ggplot2::ggplot_gtable()` function creates the Rplots.pdf file when called in non-interactive R sessions (Rscript, shiny server call etc). This function is called by `gridExtra::arrangeGrob()`.
The issue is that the file is being created in the app directory - which basically may be read-only from the shiny server perspective. As a result, the app may crash when trying to generate tooltips - write permissions not available.
This small fix changes the working directory to temp when generating a grob from a plot (and restores it afterwords).","mjakubczak",1,0
"demo of enhance category package dependency ","https://github.com/pharmaR/riskmetric/issues/126","closed",2020-06-10,2020-08-11,2020-08-11,2,"
related issue: #99 

There are another four packages in the enhanced category. I will need help to understand how to achieve that.

```
    gh,
    jsonlite,
    vctrs,
    pillar,
```","elong0527",62,0
"here are some things that I have been working on","https://github.com/Roche/rtables/pull/31","closed",2020-06-10,2020-06-18,2020-06-18,1,"especially have a look at summary","waddella",8,0
"remove rvest package dependency ","https://github.com/pharmaR/riskmetric/issues/127","closed",2020-06-10,2020-07-22,2020-07-22,0,"Follow-up issue #99 

Below is a list of functions we used  
```
rvest::html_table
rvest::html_node
rvest::html_text
```","elong0527",42,0
"Fix/issue58","https://github.com/openpharma/visR/pull/62","closed",2020-06-11,2020-06-26,2020-06-26,0,"This addresses two small issue with the `vr_create_tableone` function:

- Some `dplyr` functions (e.g. `n()`, `syms()`) did not have the necessary prefix causing errors if you only loaded the `visR` package
- The quantile function used to calculate the IQR would throw an error if missing values were present.","kentm4",15,0
"About column name in RTF","https://github.com/atorus-research/pharmaRTF/issues/1","closed",2020-06-12,2020-08-04,2020-06-17,3,"Hi, 

The pharmaRTF package is so good to creat RTF file, but I have a query that what's the reason put the column names in header. According to RTF in clinical trials, we usually put the whole table including column names in the RTF body part,  certainly I'm not familiar with RTF.

I'm looking for some solutions to creat RTF instead of SAS in R

Thanks! ","kaigu1990",5,-48
"Collection of issues","https://github.com/Roche/rtables/issues/32","closed",2020-06-12,2020-07-02,2020-07-02,0,"Here are some issues I have found:

* General
    - [x] delete commented out code
    - [x] ready to delete old code in `rtable.R`, `rtabulate.R`, and all the other code that is not needed anymore?
    - [x] remove `empty_rtable` references
* `build_table` 
    -  [x]  document more concisely  `...` ?
    -  [x] `col_counts` argument does not automatically show the column counts
* `add_rowby_varlevels`
    - [x] we need to be able to add a total or all patients column. This might require a `add_total_col` function so that we can flexibly use it with other `add_*` functions
    - [x] add an example for `splfun` and more info in details
    - [x] this needs to be printed compressed:
      ```r
      l <- NULL %>%
        add_colby_varlevels(""ARM"") %>%
        add_rowby_varlevels(""RACE"") %>%
        add_analyzed_vars(""AGE"", ""Age"", afun = mean, fmt = ""xx.xx"")
 
      build_table(l, DM)
      ```
      is currently not exported, use `add_summary`
* `add_analyzed_colvars`
    - [x] TODOs, example does not work
* `add_colcounts` 
   -  [x] warning messages in example
   -  [x] `N=xx` formatting is not applied
* `add_analyzed_colvars`
   - [x ] has quite a few TODO's 
   - [x] remove `var` argument 
* `add_colby_varwbline`
* `add_colby_staticcut`etc.
   - [x] need examples
* `rtab_inner`
   - [x] export?
   - [x] `rtab_inner(iris$Species)` does not print itself
* `rtabulate`
* `get_formatted_rows`

","waddella",20,0
"Errors on huxtable 5.0.0","https://github.com/atorus-research/pharmaRTF/issues/2","closed",2020-06-13,2020-06-18,2020-06-17,4,"Hi guys,

I've been running reverse dependency checks on huxtable dependencies. pharmaRTF currently gets a couple of errors in running examples:

```
*   checking examples ... ERROR
  
    > library(huxtable)
    
 ...
    > ht <- huxtable(
    +   column1 = 1:5,
    +   column2 = letters[1:5]
    + )
    > rtf <- rtf_doc(ht, list(hf_line(""aTitle"")))
    > 
    > header_rows(rtf)
    Error in UseMethod(""header_rows"") : 
      no applicable method for 'header_rows' applied to an object of class ""rtf_doc""
    Calls: header_rows
    Execution halted
```

I guess `header_rows` is a pharmaRTF method that is now getting interfered with by the new huxtable generic and function, of the same name.

I also get some testing failures:

```
      [ OK: 212 | SKIPPED: 0 | WARNINGS: 1 | FAILED: 5 ]
      1. Error: insert_buffer adds a blank column correctly (@test_helpers.r#37) 
      2. Failure: hf_string orderes lines properly (@test_rtf-code-generators.r#24) 
      3. Failure: header_string lines populates correctly (@test_rtf-code-generators.r#123) 
      4. Failure: header_string lines populates correctly (@test_rtf-code-generators.r#124) 
      5. Failure: rtf_doc returns a list with a table, title, and footnotes (@test_rtf_doc.r#14) 
```

You can test the latest version of huxtable with

```
remotes::install_github(""hughjonesd/huxtable"")
```

The master branch is now in bugfix-only mode.","hughjonesd",4,-1
"Updating documentation after package dependency removal","https://github.com/pharmaR/riskmetric/pull/128","closed",2020-06-14,2020-06-14,2020-06-14,0,"Hi @elong0527 and @dgkf , re-generating the documentation on branch [dependency_dplyr_tibble_magrittr_janitor](https://github.com/pharmaR/riskmetric/pull/115) updated the NAMESPACE and some man files. I am adding these updates to the same branch for completeness.

Thanks!","marlycormar",0,0
"baseline doesn't respect row-splitting","https://github.com/Roche/rtables/issues/33","closed",2020-06-18,2020-07-24,2020-07-24,0,"Baseline comparisons work but only if there is no row-splitting. Need to figure out a way to apply the rowsplits to it within the tabulation machinery.","gmbecker",36,0
"Add labels to score metrics","https://github.com/pharmaR/riskmetric/issues/129","closed",2020-06-19,2021-02-03,2021-02-03,2,"This would help automatical labelling in the riskassessment app.  The assess* functions have labels but these are not always applicable for scores.

For example, if the last 30 bug reports is scored, a suitable label might be ""A percentage of last 30 BugReports whose status is 'closed'""","andyofsmeg",229,0
"fix pkgdown","https://github.com/Roche/rtables/pull/34","closed",2020-06-19,2020-06-29,2020-06-19,0,"","waddella",0,-10
"General fixes - bugs & typos","https://github.com/pharmaR/riskmetric/pull/130","closed",2020-06-24,2020-06-30,2020-06-30,0,"Hi @elong0527 & @dgkf! I went over the package and found typos/bugs. This PR addresses them.","marlycormar",6,0
"metric for R CMD check ","https://github.com/pharmaR/riskmetric/issues/131","closed",2020-06-24,2021-02-17,2021-02-17,2,"capture the output of R CMD check 

option 1: run the command from local 

option 2: parse information in CRAN e.g. https://cran.r-project.org/web/checks/check_results_ggplot2.html","elong0527",238,0
"update README to match recent function name changes","https://github.com/pharmaR/riskmetric/issues/132","closed",2020-06-24,2020-09-02,2020-09-02,2,"I realized the README on the main page wasn't updated with the rest of the function names. Hopefully an easy revision.","dgkf",70,0
"Work on documentation and toString","https://github.com/Roche/rtables/pull/35","closed",2020-06-26,2020-06-29,2020-06-27,1,"","waddella",1,-2
"Feature/tableone structure","https://github.com/openpharma/visR/pull/63","closed",2020-06-28,2020-09-23,2020-09-23,0,"This request includes a few basic structural changes to the set of table one functions. The major change is pulling the table logic out of the `create_table_one` function into a helper function so we don't call the `create_table_one` function inside of `create_table_one`. The resulting output of the function call have not changed. In summary this request includes: 

- A new TableOne vignette.
- A new feature of setting variable labels instead of using the variable name in the table. See `vr_var_label`.
- Minor variable name updates to use snake_case like other functions.
- Use dat instead of data for function input.

This update will also allow the addition of p-values to the table, which I have started to implement a basic version of here: https://github.com/kentm4/visR/tree/feature/tableone_p_val
","kentm4",87,0
"address issues for getting 0 errors on R 4.0.1","https://github.com/Roche/rtables/pull/37","closed",2020-06-30,2020-06-30,2020-06-30,0,"note `xml2` needs to be in suggests due to using the `JunitReporter` that is used in `testthat`. I also get an error with the `cbind_rtables` function  in R 4.0.1  in the examples that I do not get when I run it interactively.","waddella",0,0
"Allow to use NULL as varDict to disable generating tooltip data","https://github.com/Roche/ggtips/pull/45","closed",2020-06-30,2020-06-30,2020-06-30,0,"This feature will allow to toggle tooltips data generation, that sometime take lot of time.","jcubic",0,0
"create unit-tests for indenting","https://github.com/Roche/rtables/issues/36","open",2020-06-30,2020-06-30,NA,0,"Indenting should be fixed after a regression, with the indent_mod machinery working correctly but we need unit-tests to make sure indenting is how we/the SPAs actually want it.","gmbecker",356,356
"Remove rvest","https://github.com/pharmaR/riskmetric/pull/133","closed",2020-06-30,2020-08-05,2020-08-05,2,"Per #127, This removes all rvest functions from the package and replaces them with xml2 and predicates. The logic for all of these comes from the bug_reports file. I tested it on a couple package and it all looks good to me.

There are a bunch of other things in the test directory that I have another PR for so we might want to wait to merge this in until that has gone through.

Example:
`
> coin_ref <- pkg_ref(""coin"")
> head(coin_ref$archive_release_dates)
     name   version  date        
[1,] ""coin"" ""0.2.10"" ""2005-05-04""
[2,] ""coin"" ""0.2.11"" ""2005-06-02""
[3,] ""coin"" ""0.2.12"" ""2005-06-15""
[4,] ""coin"" ""0.2.13"" ""2005-07-11""
[5,] ""coin"" ""0.2.14"" ""2005-07-26""
[6,] ""coin"" ""0.2.6""  ""2005-02-25""
> coin_ref$maintainer
[1] ""Torsten Hothorn  <Torsten.Hothorn at R-project.org>""
> coin_ref$release_date
[1] ""2019-08-28""
> coin_ref$website_urls
[1] ""http://coin.r-forge.r-project.org""
`

This closes #127 ","elimillera",36,0
"Adding pkg_metric_na, pkg_metric_todo subclasses","https://github.com/pharmaR/riskmetric/pull/134","closed",2020-07-01,2020-08-04,2020-08-04,0,"Primarily this lays out the foundation for addressing Issue #118 and I also addressed a few bugs that I encountered in the process:

- Added `pkg_metric_na` subclass for when a metric is not applicable given the pkg_ref class
- Added `pkg_metric_todo` subclass for when a metric is appliable, but not yet implemented
- Added `pkg_metric_error` constructor, which was left to ad-hoc creation before
- Fixed bug when pulling a license from a remote CRAN/Bioconductor webpage (introduced `pkg_ref_cache.license`)
- Fixed bug with vignettes throwing an error when pulled from a CRAN/Bioconductor webpage
- Touched up some unit tests that were broken following our naming convention changes

To test, I suggest trying to run an assessment on an installed or remote package, which should give NA for the covr_coverage assessment.","dgkf",34,0
"full functions are printed for layout","https://github.com/Roche/rtables/issues/38","closed",2020-07-01,2020-07-02,2020-07-02,0,"@waddella do you have a reprex for this?","gmbecker",1,0
" `pag_tt_indices`  needs example","https://github.com/Roche/rtables/issues/42","closed",2020-07-02,2020-12-16,2020-12-16,0," maybe wait for `random.cdisc.data`","waddella",167,0
" `show` method for `rrow`, `rcell`","https://github.com/Roche/rtables/issues/39","closed",2020-07-02,2020-07-28,2020-07-28,0,"","waddella",26,0
" split_row_by add an example for newtoplev","https://github.com/Roche/rtables/issues/44","closed",2020-07-02,2020-07-02,2020-07-02,0,"","waddella",0,0
"`analyze` document the arguments `x` and `df`  for `afun` (either or)","https://github.com/Roche/rtables/issues/40","closed",2020-07-02,2020-07-02,2020-07-02,0,"","waddella",0,0
"cell_value(tbl, complete_abs_row_path, complete_abs_column_path)","https://github.com/Roche/rtables/issues/45","closed",2020-07-02,2020-10-16,2020-10-16,1,"","waddella",106,0
"fix `>999` format","https://github.com/Roche/rtables/issues/41","closed",2020-07-02,2020-07-03,2020-07-03,0,"","waddella",1,0
"more discussion points","https://github.com/Roche/rtables/issues/43","closed",2020-07-02,2020-07-28,2020-07-28,0,"
* `rcell`
   - [ ] `format` should be `fmt` (even if we rename it)
* `manual_col`
   - [ ] should this function be exported?

# Design discussion

* display justification and alignment: left, center, right, dot 
   - per cell or per column (if per cell encoded in format or separate argument)
* `compare_rtables`
   - [ ] needs a new reimplementation
toString(<empty_rtable>)

* What does `as.vector` mean for tables with more than 1 row?


# Formatting

Should we reformat to

```r
l <- NULL %>%
   add_colby_varlevels(""ARM"") %>% 
   add_analyzed_vars()
```

instead of 

```r
l <- NULL %>% add_colby_varlevels(""ARM"") %>% 
     add_analyzed_vars(...)
```
","waddella",26,0
"renaming arguments day 1","https://github.com/Roche/rtables/issues/46","closed",2020-07-06,2020-12-16,2020-12-16,0,"```r
build_table(lyt, data, col_counts) # maybe build_table(lyt, data, col_counts)

split_fun
cut_fun
compare_fun # comparison function
afun # analysis function
cfun # summary function (to create ) summarize_row_groups()

splfmt > format
cfmt > cformat

analyze(
  lyt, vars, afun = rtab_inner, var_labels = vars,
  format = NULL,
  # defrowlab: remove
  nested = TRUE, na_rm = FALSE,
  extra_args = list(), show_labels = TRUE,
  indent_mod = 0L
)


# add .names in in_rows
in_rows(
  ""Mean (perc in %)"" = rcell(mean_perc(), ...),
  .list = ,
  .names = c(""mean_perc"", ...),
  .labels = NULL
)

in_rows <- function(..., .list, .names = NULL, .labels = NULL) {
  rows <- list(...)
  
  if (is.null(.names)) {.names <- names(rows)}
  if (is.null(.labels)) {.labels <- names(rows)}
  
}

split_rows_by(
  lyt,
  var, # variable name
  labels_var = var, # variable name
  split_label = var, # scalar string
  split_fun = NULL,
  format = NULL,
  nested = TRUE,
  child_labels =  c(""default"", ""visible"", ""hidden""),
  indent_mod = 0L
)

split_cols_by(
  lyt,
  var, # SEX
  labels_var = var, # SEX_LABELS
  split_label = var, # ""Gender""
  split_fun = ...,  # TODO
  format = NULL,
  nested = TRUE,
  child_labels = c(""default"", ""visible"", ""hidden""), # only in relevant if transposing layouts
  colwise_args = list(),
  ref_group = NULL
 # incl_all = FALSE remove
)

add_colcounts(lyt, format = ""(N=xx)"")

summarize_row_groups(
  lyt,
  # var, remove
  cfun = cff_count_perc(), # use nrow, also add cff_count_perc_unique()
  format = ""xx (xx.x%)"",
  indent_mod = 0L
)

```


## Used Abbreviations

```
column: col
color: color
variable name: var, vars
layout: lyt
continuous: cont
reference: ref
```","waddella",163,0
"Figure out what to do with the code in tt_rsp.R","https://github.com/Roche/rtables/issues/48","closed",2020-07-07,2020-10-16,2020-10-16,0,"Commented out for now but it should be put somewhere else, probably a vignette","gmbecker",101,0
"render discussion","https://github.com/Roche/rtables/issues/47","open",2020-07-07,2020-07-07,NA,0,"
```r
tbl <- build_table() # carry the propose_column_widths function


row_gap_before_row = row_gap_heuristic(obj)


rtbl <- renderASCIITable(
  tbl,
  row_gap_at = c(10, 13, 18)
)

rtbl <- renderASCIITable(
  tbl,
  row_gap_at = row_gap_heuristic
)


rtbl_ascii <- renderASCIITable(
  rtbl,
  col_width = c(43, 20, 10),
)


rtbl_ascii <- renderASCIITable(
  rtbl,
  col_width = propose_column_widths,
)

   1
   2
   
   
50000000

rtbl_html <- renderHTMLTable(rtbl, ...)

paginate(rtbl_ascii) # list of renderedASCIITable
paginate(rtbl_html) # list of renderedHTMLTable

list(tbls, render_obj) <- paginate(rtbl_ascii) 

print(tbl, render_obj)

render_obj(tbl)


tbl[[1]]

tbl[[2]]
tbl[[2]][2:3, ]


render_details()
render_details_ascii()
render_details_html()
render_details_rtf()

  ascii_render_details(tbl, ""col_width"") <- propose_column_widths
  ascii_render_details(tbl, ""col_width"") <- c(10, 18, 29)
  
  
# column pagination
tbli <- tbl[1, 1][[1]]



before pagination: 
overall: (rows_heights:optimal_row_height, col_width: proprose_column_widths)
overall[1:2, 1:2]: (rows_heights:optimal_row_height, col_width: proprose_column_widths)

            a       b       |     c      d
r1
r2
--
r3


after pagination:
overall: (rows_heights:c(2,1,3), col_width: c(4, 10, 3, 29))

ul: (rows_heights:c(2,1), col_width: c(4, 10))
ur: (rows_heights:c(2,1), col_width: c( 3, 29))
ll: (rows_heights:c(3), col_width: c(4, 10))
lr: (rows_heights:c(3), col_width: c( 3, 29))


ul[1, ]:(rows_heights:c(2), col_width: c(4, 10))
```","waddella",349,349
"Devtools document","https://github.com/pharmaR/riskmetric/pull/136","closed",2020-07-08,2020-07-23,2020-07-23,0,"Update package per `devtools::document` output","marlycormar",15,0
"Set default assessments weight to 1.","https://github.com/pharmaR/riskmetric/pull/135","closed",2020-07-08,2020-09-28,2020-09-28,7,"Addresses issue #124 ","marlycormar",82,0
"Correct README","https://github.com/atorus-research/Tplyr/pull/2","closed",2020-07-10,2020-07-10,2020-07-10,0,"## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [ ] I have read the **CONTRIBUTING** document.
- [ ] My code follows the code style of this project.
- [ ] My change requires a change to the documentation.
- [X] I have updated the documentation accordingly.
- [ ] I have added tests to cover my changes.
- [ ] All new and existing tests passed.
","atorus-research",0,0
"Development sprint 4 alpha","https://github.com/atorus-research/Tplyr/pull/1","closed",2020-07-10,2020-07-10,2020-07-10,0,"Update GitHub deployment with alpha release","atorus-research",0,0
"Aw july 08","https://github.com/Roche/rtables/pull/49","closed",2020-07-12,2020-07-30,2020-07-30,0,"Hi @gmbecker,

Note that I have added `TODO` notes to the vignettes, those are the most important to discuss/resolve.

Best,
Adrian","waddella",18,0
"bug in subsetting","https://github.com/Roche/rtables/issues/53","closed",2020-07-13,2020-07-13,2020-07-13,1,"```r
library(rtables)
library(dplyr)

tbl <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  split_rows_by(""SEX"", split_fun = drop_split_levels) %>%
  analyze(c(""AGE"", ""STRATA1"")) %>%
  build_table(ex_adsl %>% filter(SEX %in% c(""M"", ""F"")))

tbl[1,1] # correct
tbl[2,1] # returns NULL

tbl[1,1, drop=TRUE] # correct
tbl[2,1, drop=TRUE] # error
```","waddella",0,0
"Correct builds","https://github.com/atorus-research/Tplyr/pull/4","closed",2020-07-13,2020-07-13,2020-07-13,0,"## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [ ] I have read the **CONTRIBUTING** document.
- [ ] My code follows the code style of this project.
- [ ] My change requires a change to the documentation.
- [ ] I have updated the documentation accordingly.
- [ ] I have added tests to cover my changes.
- [ ] All new and existing tests passed.
","atorus-research",0,0
"Correct Travis Build","https://github.com/atorus-research/Tplyr/pull/3","closed",2020-07-13,2020-07-13,2020-07-13,0,"## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [ ] I have read the **CONTRIBUTING** document.
- [ ] My code follows the code style of this project.
- [ ] My change requires a change to the documentation.
- [ ] I have updated the documentation accordingly.
- [ ] I have added tests to cover my changes.
- [ ] All new and existing tests passed.
","atorus-research",0,0
"different subsetting functions proposal","https://github.com/Roche/rtables/issues/55","closed",2020-07-13,2021-04-26,2021-04-26,0,"```r
ij_table() # mapped to `[`

ij_cell_value() # this mapped to `[`
ij_rcell_value()

cell_value(tbl, path_rows, path_cols) # `[[`
rcell_value(tbl, path_rows, path_cols)
```","waddella",287,0
"label_var not working","https://github.com/Roche/rtables/issues/50","closed",2020-07-13,2020-08-12,2020-08-12,0,"```r
library(rtables)
library(tibble)
library(dplyr)

ADSL <- ex_adsl

s_summary <- function(x, lblstr, ...) {
  if (is.numeric(x)) {
    in_rows(
      ""n"" = rcell(sum(!is.na(x)), format = ""xx""),
      ""Mean (sd)"" = rcell(c(mean(x, na.rm = TRUE), sd(x, na.rm = TRUE)), format = ""xx.xx (xx.xx)""),
      ""IQR"" = rcell(IQR(x, na.rm = TRUE), format = ""xx.xx""),
      ""min - max"" = rcell(range(x, na.rm = TRUE), format = ""xx.xx - xx.xx"")
    )
  } else if (is.factor(x)) {
    
    vs <- as.list(table(x))
    do.call(in_rows, lapply(vs, rcell, format = ""xx""))
    
  } else (
    stop(""type not supported"")
  )
}

ADSL_M_F <- filter(ADSL, SEX %in% c(""M"", ""F""))


ADSL_M_F_l <- ADSL_M_F %>% 
  mutate(lbl_sex = case_when(
    SEX == ""M"" ~ ""Male"",
    SEX == ""F"" ~ ""Female"",
    SEX == ""U"" ~ ""Unknown"",
    SEX == ""UNDIFFERENTIATED"" ~ ""Undifferentiated""
  ))

basic_table() %>% 
  split_cols_by(var = ""ARM"") %>%
  add_colcounts() %>%
  split_rows_by(""SEX"", labels_var = ""lbl_sex"", split_fun = drop_split_levels, child_labels = ""visible"") %>%
  analyze(c(""AGE"", ""BMRKR2""), s_summary) %>%
  build_table(ADSL_M_F_l)

```","waddella",30,0
"Needed regression tests","https://github.com/Roche/rtables/issues/56","closed",2020-07-13,2021-04-21,2021-04-21,1,"1.  in_rows with only one row doesn't cause rcell format to be lost

```r
afun = function(x) {in_rows(""name"" = rcell(123.31241231, format= ""xx.xx""))}
```

2. Default content functions work as you would expect with and particularly without specifying a variable

3. Subsetting at label rows
Make sure label rows with no related rows are not dropped.

Make sure `tbl[i,j]` for scalars `i`,`j` works when `i`th row is a label row, for  both `drop=TRUE` and `drop=FALSE`
","gmbecker",282,0
"rcell formats get lost within in_rows","https://github.com/Roche/rtables/issues/51","closed",2020-07-13,2020-07-13,2020-07-13,1,"```r
basic_table() %>%
  split_cols_by(""Species"") %>%
  analyze(""Sepal.Length"", afun = function(x) {
    in_rows(
      ""A"" = rcell(c(1, 2), format = ""xx.xx, xx.xx"")
    )
  }) %>%
  build_table(iris)

basic_table() %>%
  split_cols_by(""Species"") %>%
  analyze(""Sepal.Length"", afun = function(x) {
    in_rows(
      ""A"" = rcell(c(1.32342432, 2.423432), format = ""xx.xx - xx.xx"")
    )
  }) %>%
  build_table(iris)
```

note though that not using `in_rows` works:

```r
basic_table() %>%
  split_cols_by(""Species"") %>%
  analyze(""Sepal.Length"", afun = function(x) {
      rcell(c(1.32342432, 2.423432), format = ""xx.xx - xx.xx"", label = ""aaa"")
  }) %>%
  build_table(iris)
```


rcell(rell()) is not identity","waddella",0,0
"rtab_inner to return an in_rows with the correct row names","https://github.com/Roche/rtables/issues/52","closed",2020-07-13,2020-07-13,2020-07-13,1,"","waddella",0,0
"sub setting drops table rows","https://github.com/Roche/rtables/issues/54","closed",2020-07-13,2020-07-13,2020-07-13,1,"```r
tbl2 <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  split_cols_by(""SEX"", split_fun = drop_split_levels) %>%
  analyze(c(""AGE"", ""STRATA1"")) %>%
  build_table(ex_adsl %>% filter(SEX %in% c(""M"", ""F"")))

tbl2

tbl2[1:3,]
```

drops the label rows.

If that is not possible just throw a warning.","waddella",0,0
"Update Travis Build pt2","https://github.com/atorus-research/Tplyr/pull/5","closed",2020-07-13,2020-07-13,2020-07-13,0,"## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [ ] I have read the **CONTRIBUTING** document.
- [ ] My code follows the code style of this project.
- [ ] My change requires a change to the documentation.
- [ ] I have updated the documentation accordingly.
- [ ] I have added tests to cover my changes.
- [ ] All new and existing tests passed.
","atorus-research",0,0
"Assessment discussion ","https://github.com/pharmaR/riskmetric/issues/138","open",2020-07-22,2020-09-16,NA,0,"1. identify one metric for assessment discussion","elong0527",334,278
"Dev/issue 131","https://github.com/pharmaR/riskmetric/pull/137","closed",2020-07-22,2020-10-09,2020-10-09,6,"Addition of R CMD checks (caching and assessment) for  cran_remotes, bioc_remotes and source. It does not appear possible to run R CMD check on an installed package so I set a default pkg_ref method to return `NA`. 

I am wondering if `R CMD check` should be a separate assessment from CRAN/Bioc check summaries. 
  1. `R CMD check` can be run on any pkg_ref subclass (except pkg_install), in theory. 
  1. `R CMD check` and the CRAN/Bioc check summaries provide different information, IMHO
        1. `R CMD check` checks  whether the package will install on your system and if there are any potential problems with the install. For example, when I run `R CMD check` I get a warning for every package because I do not have the ‘qpdf’ package for checks on size reduction of PDFs.
        1. CRAN/Bioc checks summaries provides a snapshot of how a package would install on numerous systems, i.e. its portability. This to me is a different, albeit important potential metric. To me a package that is portable is of lower risk than one that is less portable.
  1. I thought about pulling individual checks from CRAN to match with the `R CMD check` but decided against it since we would have to match the users environment with the environments that CRAN runs the checks on and assume that they are the same which seems counter to proper risk assessment principles.","emilliman5",79,0
"removed double == from the end of string","https://github.com/Roche/ggtips/pull/46","closed",2020-07-28,2020-07-28,2020-07-28,0,"","kgruba",0,0
"Added example with custom weights","https://github.com/pharmaR/riskmetric/pull/139","closed",2020-07-29,2020-09-08,2020-09-08,1,"see discussion on issue #135","jmanitz",41,0
"Logo in README","https://github.com/Roche/ggtips/pull/47","closed",2020-07-29,2020-07-29,2020-07-29,0,"Added logo to README it was hanging on my disk.","jcubic",0,0
"Development sprint 5 beta Merge","https://github.com/atorus-research/Tplyr/pull/6","closed",2020-07-31,2020-07-31,2020-07-31,0,"## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [ ] I have read the **CONTRIBUTING** document.
- [ ] My code follows the code style of this project.
- [ ] My change requires a change to the documentation.
- [ ] I have updated the documentation accordingly.
- [ ] I have added tests to cover my changes.
- [ ] All new and existing tests passed.
","atorus-research",0,0
"latest changes","https://github.com/Roche/rtables/pull/57","closed",2020-07-31,2020-11-30,2020-11-30,0,"Hi @gmbecker can you please merge the `aw_july_08` branch into `gabe_table_tree` and then delete `aw_july_08`. Please use

![image](https://user-images.githubusercontent.com/7786462/89032754-a39e2800-d335-11ea-8c28-192939de6d57.png)

and not squash merge.","waddella",122,0
"the following code should give a table with 1 column and 0 rows:","https://github.com/Roche/rtables/issues/58","closed",2020-08-04,2020-12-16,2020-12-16,2,"```r
basic_table() %>%
  build_table(iris)
```","gmbecker",134,0
"Identify items to be prioritize in 2020.09","https://github.com/pharmaR/riskmetric/issues/142","closed",2020-08-05,2020-09-02,2020-09-02,0,"","elong0527",28,0
"Integration of RSPM","https://github.com/pharmaR/riskmetric/issues/140","open",2020-08-05,2020-08-15,NA,1,"","elong0527",320,310
"Pass all testing cases ","https://github.com/pharmaR/riskmetric/issues/141","closed",2020-08-05,2020-10-13,2020-10-13,0,"We can split the work based on the upcoming pull request. ","elong0527",69,0
"add linter to gh actions","https://github.com/openpharma/simaerep/pull/1","closed",2020-08-07,2020-08-07,2020-08-07,0,"","erblast",0,0
"Update test structure","https://github.com/pharmaR/riskmetric/pull/143","closed",2020-08-07,2021-03-31,2020-09-09,0,"Here are some of the tests that I have implemented and the setup structures that I have started working on.

### Setup Objects
In setup-xyz.R I use two packages for each package type(Bioconductor remote isn't implemented yet).

- For source I embedded two packages to test for source packages. The first one is generally a ""good"" package with documentation and tests, the second is basically a single function and not much else.
- For installed packages I chose dplyr and utils. They should always be installed on a machine that is running tests for this packages.
- I'm still exploring options for HTTP mocking or other solutions in testthat for testing remote packages well. I have selected a couple packages that were reasonably popular and downloaded their CRAN page to the testing directory. This isn't perfect but it works pretty well.

Goal right now is to have a test_that for every assessment, reference, and score for each package type.




### Still TODO:

- Finish the rest of the assess tests
- All ref/cache tests
 - Better solution for testing remote/github API checks.



All tests are passing even though some are skipping/empty and this should resolve #141 ","elimillera",33,-203
"jsonlite dependency ","https://github.com/pharmaR/riskmetric/issues/144","closed",2020-08-11,2020-08-27,2020-08-27,0,"There are only two place we use jsonlite.

Also `covr` and `httr` will need `jsonlite`. Suggest to keep it as is

```
#' @importFrom curl curl
#' @importFrom jsonlite parse_json
scrape_bug_reports.github <- function(x, ...) {
  owner_repo_issues <- gsub("".*github[^/]*/(.*)"", ""\\1"", x$bug_reports_url)
  out <- parse_json(curl(sprintf(
    ""%s/repos/%s?state=all&per_page=%s"",
    getOption(""riskmetric.github_api_host""),
    owner_repo_issues,
    30)))
  bug_report_metadata(out, x)
}



#' @importFrom curl curl
#' @importFrom urltools url_encode
#' @importFrom jsonlite parse_json
scrape_bug_reports.gitlab <- function(x, ...) {
  owner_repo_issues <- gsub("".*gitlab[^/]*/(.*)"", ""\\1"", x$bug_reports_url)
  owner_repo <- gsub(""(.*)/issues"", ""\\1"", owner_repo_issues)
  out <- parse_json(curl(sprintf(
    ""%s/projects/%s/issues?per_page=%s"",
    getOption(""riskmetric.gitlab_api_host""),
    url_encode(owner_repo),
    30)))
  bug_report_metadata(out, x)
}
```","elong0527",16,0
"vctrs and pillar dependency","https://github.com/pharmaR/riskmetric/issues/145","closed",2020-08-11,2020-08-27,2020-08-27,0,"`pillar`  is used to format output. There are several place we are using it. 

`pillar` also depends on `vctrs`","elong0527",16,0
"Coverage","https://github.com/openpharma/simaerep/pull/3","closed",2020-08-12,2020-08-12,2020-08-12,1,"","erblast",0,0
"Devel","https://github.com/openpharma/simaerep/pull/2","closed",2020-08-12,2020-08-12,2020-08-12,0,"","erblast",0,0
"data input columns","https://github.com/openpharma/simaerep/issues/4","closed",2020-08-18,2021-02-05,2021-02-05,1,"data input columns need to fit the required naming scheme by `site_aggr`, there are parameters for renaming but they are useless because they will only rename the `site_aggr` output but not the initial visit data which also needs to be passed to other functions of the downstream workflow which will then fail.

- remove renaming parameters
- consider OO approach","erblast",171,0
"Getting unit tests passing again","https://github.com/pharmaR/riskmetric/pull/146","closed",2020-08-18,2020-08-21,2020-08-21,0,"Following PR #117, I had somewhat disregarded maintenance of unit tests. I went through and tried to resolve as many as possible.

At this point I think that most of the current test cases are passing again. The only exception is the `bugs_status` tests. So far today I think I've exceeded my allowance for public github api requests, so it's now throwing errors, but I think it should be fine otherwise. However, I think we will have to look into spoofing the api endpoint so that we can decouple our tests from GitHub. 

For now I've disabled this test until we have something more reliable in the hopes of soon getting us back on track with some continuous integration to help with code review. 

I also took the liberty of removing some legacy tests we had in there from early on in the project. These were entirely commented out without any hope of reintegrating them, so I see no problem with removing them.  ","dgkf",3,0
"Fix CRAN/CI Build","https://github.com/pharmaR/riskmetric/issues/147","closed",2020-08-19,2020-09-16,2020-09-16,2,"The CI is failing due to a few changes to dependencies  and documentation.","elimillera",28,0
"Improving error messages explanation","https://github.com/pharmaR/riskmetric/issues/149","closed",2020-08-19,2020-09-30,2020-09-30,3,"When a package doesn't contain some of the metrics we are assessing, e.g., NEWS, bug reports, etc., the user will get warnings/errors which do not state which metrics are missing but rather output a generic error message. Should we improve the warning/error messages shown?

To see this issue in action, we can use `riskmetric` on the `extratests` package. This package lacks some of the metrics we test. For example, the following code

```r
library(dplyr)
library(riskmetric)

pkg_ref(""extratests"") %>%
  pkg_assess() %>%
  pkg_score() 
```

produces this list of warnings

```
Warning messages:
1: In error_handler(x, ...) :
  no available scoring algorithm for metric of class ""pkg_metric_error"", returning default score of 0.
2: In error_handler(x, ...) :
  no available scoring algorithm for metric of class ""pkg_metric_error"", returning default score of 0.
3: In error_handler(x, ...) :
  no available scoring algorithm for metric of class ""pkg_metric_error"", returning default score of 0.
4: In error_handler(x, ...) :
  no available scoring algorithm for metric of class ""pkg_metric_error"", returning default score of 0.
5: In error_handler(x, ...) :
  no available scoring algorithm for metric of class ""pkg_metric_error"", returning default score of 0.
6: In error_handler(x, ...) :
  no available scoring algorithm for metric of class ""pkg_metric_error"", returning default score of 0.
7: In error_handler(x, ...) :
  no available scoring algorithm for metric of class ""pkg_metric_error"", returning default score of 0.
8: In error_handler(x, ...) :
  no available scoring algorithm for metric of class ""pkg_metric_error"", returning default score of 0.
9: In error_handler(x, ...) :
  no available scoring algorithm for metric of class ""pkg_metric_error"", returning default score of 0.
10: In error_handler(x, ...) :
  no available scoring algorithm for metric of class ""pkg_metric_error"", returning default score of 0.
```

from which you cannot conclude that the NEWS file for example is missing. ","marlycormar",42,0
"Update roxygen function description for pkg_score","https://github.com/pharmaR/riskmetric/pull/148","closed",2020-08-19,2020-09-01,2020-09-01,1,"`pkg_score()` now calculates the risk of using a package (rather than its quality). This PR updates the roxygen comments for this function accordingly.","marlycormar",13,0
"add texPreview as an option to preview latex tables","https://github.com/openpharma/visR/issues/65","open",2020-08-27,2021-05-31,NA,0,"It could be a nice feature to add a print method to preview latex tables using [texPreview](https://github.com/yonicd/texpreview) (apologies for the shameless self plug). Many times it is a pain to tweak latex tables since they need to be rendered in a pdf doc to see them. texPreview quickly renders latex in the preview window of RStudio so users can iterate over tables much like they do in ggplot workflows.","yonicd",298,21
"convert render_table into an S3 method","https://github.com/openpharma/visR/issues/64","closed",2020-08-27,2021-05-30,2021-05-30,2,"Converting this core package function into an S3 method would:

  - make the package more extendable and accessible to more developers to add on different table engines that they use. 
  - make testing more compartmental and simpler to track since each engine would be self contained.
  - create a simpler way to make `knitr::knit_print` methods to better connect with `knitr` and its methods.

https://github.com/openpharma/visR/blob/b257ad4a01aa5e62a9e61cfdc9e6d0c07cd05d74/R/vr_render_table.R#L19","yonicd",276,0
"Metric for license complications","https://github.com/pharmaR/riskmetric/issues/151","open",2020-09-02,2020-10-13,NA,1,"Hi! Great package, thanks for doing all this it is a much needed work.

It has been noted that some licenses are incompatible between them. Sometimes developers (and certainly CRAN) do not pay attention to this. It would be nice to have a metric that assess this. 

I've been working on a package [`compatibler`](https://github.com/llrs/compatibler) that aims to check if license are compatible but still is on early experimental/development process.

This is different from #53, as it does not only look at one package License but to all of its dependencies. On the bright site it will only need to be computed once for each package and can be cached. 

BTW to extract the information about packages there is the `available.packages()` function, there is no need to call the svn repository of CRAN and parse manually as I've seen on #53.","llrs",292,251
"Test updates, partial build fix","https://github.com/pharmaR/riskmetric/pull/150","closed",2020-09-02,2020-09-09,2020-09-09,2,"### Test Updates
The testing was updated to the third edition of testthat. This is a bit ahead of what is on CRAN, but the improvements to snapshot testing makes it worth it in my opinion.

- A line was added to the description to note which edition of testthat is being used.
- I've moved the tests I've created to a folder where they won't get tested. I think the snapshots are the way to go for what we're testing.

Still todo:
1) You can run this three times without getting a 403 from github and causing the tests to fail so that is something I still have to work out.
2) Bioconductor packages are still something I want to target.


### Updates for passing build
Several small updates to docs for spelling and to correct some build issues. Partially resolves some things in #147 
","elimillera",7,0
"Filter geoms outside panel","https://github.com/Roche/ggtips/pull/48","closed",2020-09-03,2020-09-07,2020-09-07,1,"","marcin-kam",4,0
"Prevent empty df error","https://github.com/Roche/ggtips/pull/49","closed",2020-09-07,2020-09-07,2020-09-07,0,"","marcin-kam",0,0
"adding example with custom weights; thanks @jmanitz #139","https://github.com/pharmaR/riskmetric/pull/154","closed",2020-09-08,2021-03-31,2021-03-03,0,"Updated `pkg_score` docs to include an example using custom weights as suggested by @jmanitz in #139","dgkf",176,-28
"CRAN release wish list ","https://github.com/pharmaR/riskmetric/issues/152","closed",2020-09-08,2021-02-17,2021-02-17,1,"I hope to open this issue for us to discuss what is the gap to release first CRAN release version

@dgkf @marlycormar 

","elong0527",162,0
"Resolves #108, fixes reference to missing field in vignettes_from_html","https://github.com/pharmaR/riskmetric/pull/153","closed",2020-09-08,2020-09-15,2020-09-15,0,"@emilliman5 - I reviewed the bug report in #108. Although I think I had previously fixed the STRSXP error that was being thrown as part of #117, I think that other bugs had been introduced causing this particular case to continue to throw misleading errors.

If you have the bandwidth, I would appreciate if you could rerun your example from #108 and confirm that it's working now. For this particular package, `gsDesign`, `pkg_assess` should report that the DESCRIPTION does not include a BugReports field. ","dgkf",7,0
"Coords flipped fix","https://github.com/Roche/ggtips/pull/50","closed",2020-09-09,2020-09-09,2020-09-09,0,"","marcin-kam",0,0
"Repo maintenance: Clearing out stale branches","https://github.com/pharmaR/riskmetric/issues/155","closed",2020-09-09,2021-05-26,2021-05-26,1,"We've got quite a few branches at the moment, most of which are defunct or have been pulled into master but were not deleted. I propose at our next sprint meeting we go through our old branches and clear out the ones that aren't under active development. I suspect that the vast majority of dev/ branches can be removed, but let's confirm on a call before clearing things out. 

Hopefully this helps to keep the project a bit more organized and focused.","dgkf",259,0
"Dev/GitHub action","https://github.com/pharmaR/riskmetric/pull/156","closed",2020-09-10,2020-09-15,2020-09-15,2,"Enable github action for:

* package check 
* pkgdown
* code coverage","elong0527",5,0
"`make_afun` using formals","https://github.com/Roche/rtables/issues/60","closed",2020-09-14,2020-10-02,2020-10-01,2,"","waddella",17,-1
"Adding webmocking for web requests","https://github.com/pharmaR/riskmetric/pull/157","closed",2020-09-14,2020-09-16,2020-09-16,1,"## Overview

Since a LOT of files got changed, I want to direct you to the most important parts:
- `setup_mock_web_requests.R` has the code for setting up the various http endpoints and mocked responses
- `setup_test_packages.R` is where I create some packages for use throughout testing. This is sort of a merge of code I had previously and the prior `setup-xyz.R`
- A bunch of local files saved as prepared mock reponses are stored in `tests/testthat/test_webmocks/`
- test packages have been moved to a directory in `tests/testthat/test_packages/` and have been renamed to reflect a -""good"" and -""bad"" naming scheme used throughout for all `pkg_ref` subclasses for testing.
- snapshots have not been updated

If you can run the tests and things don't fail catastrophically, I think we're in good shape. If anything goes wrong, you should see errors suggesting that a stub web mock hasn't been set up for a given http request, but hopefully I've caught all those.

## Changes

### metric updates
- A few internal functions have changed from using `curl` to `httr` such that we can intercept web requests using `webmockr` and avoid hitting public APIs during testing runs
- Created a set of stub `pkg_refs` for testing, characterized as ""good"" or ""bad"" to try to test success and failure modes of each metric
- A minor update to `assess_has_vignettes` which would throw errors for remote `pkg_ref`s

### testing updates
- Added stubs for various cran- and github-related web requests that we issue throughout testing
- Added local versions of the http response for CRAN and GitHub responses
- Added function to generate cranlogs downloads response
- *TODO:* split cran responses into a representative ""good"" and ""bad"" remote package
- *TODO:* add bioconductor package testing

### tests
- Rewrote most tests to use these new, webmock'ed packages
- *TODO:* Update snapshots for snapshot tests after updates

---

Unit tests _almost_ pass, with only the snapshot tests now failing. I wanted to get input on the direction before making changes to the snapshots.
","dgkf",2,0
"Formatting issue in ""table"" vignette ","https://github.com/atorus-research/Tplyr/issues/7","closed",2020-09-14,2020-09-17,2020-09-17,2,"In the “table” vignette, under “Additional Treatment Groups” . . .
![image](https://user-images.githubusercontent.com/45572279/93075317-3aefde00-f64b-11ea-92a5-b014f190805d.png)
","zittau17",3,0
"render XML","https://github.com/Roche/rtables/issues/61","closed",2020-09-14,2021-04-28,2021-04-28,1,"* HTML
* look at ClinicalTrials.gov
","waddella",226,0
"Vignette on using `s_abc`, `make_unstratified_analysis`, and layout building functions (e.g. ae tables) and conditional layouts","https://github.com/Roche/rtables/issues/59","closed",2020-09-14,2021-04-26,2021-04-26,0,"","waddella",224,0
"Column should be assigned only in condition is met","https://github.com/Roche/ggtips/pull/51","closed",2020-09-15,2020-09-15,2020-09-15,0,"","ewaostrowiecka",0,0
"Column should be assigned only in condition is met + change in tests","https://github.com/Roche/ggtips/pull/52","closed",2020-09-15,2020-09-16,2020-09-16,0,"","ewaostrowiecka",1,0
"fix warnings","https://github.com/Roche/rtables/issues/62","closed",2020-09-15,2020-10-16,2020-10-16,0,"","waddella",31,0
"modified the paring of the bug url to grab the last domain before the…","https://github.com/pharmaR/riskmetric/pull/158","closed",2020-09-16,2020-09-17,2020-09-17,0,"… TLD, this should be more robust to bug urls that use a subdomain instead of domain+path. I opted to keep the same intended behavior because the bugs_url_host is used for S3 dispatch of `scrape_bug_reports`. This is in reference to #92 ","emilliman5",1,0
"various houskeeping items to clean up tests","https://github.com/pharmaR/riskmetric/pull/159","closed",2020-09-17,2020-09-26,2020-09-26,2,"Mostly organizational changes in here.

### Snapshot issues encountered:
1. Order of `pkg_ref` fields is critical to getting passing diffs. In a couple runs I encountered outputs that reordered the fields and diffs would get issued for just rearrangement, despite having no structural difference to the objects. I can dig into how we can make the output more consistent, but it doesn't seem like an immediate priority unless we are sure snapshots are absolutely necessary.
2. html parsed using `xml2` is stored as a a memory address pointer in R which will inevitably change between snapshots. 
3. `pkg_ref`s contain paths which will be inconsistent across individual machines and will trigger snapshot diffs
4. message output isn't captured, meaning that `<pkg_ref>$covr_coverage` won't be diff'ed in any meaningful way
5. downloads are calculated from the `Sys.Date()`, and will vary depending on the day on which the test suite is run.

### Other notes:
I thought that the message output from `covr::package_coverage` might have been the source of some test issues, so I wrote a wrapper to capture the messages, warnings, outputs and errors during code evaluation. I think this will be helpful for eventually building an audit log of all the operations that were performed, but for now it's just used for suppressing messages. It turned out these messages were just being triggered when testthat tries to print out the contents of a `<pkg_ref>$covr_coverage` for snapshotting. Oh well, I think this function will be useful later. ","dgkf",9,0
"GitHub Actions CI - store /docs in new repo","https://github.com/openpharma/visR/pull/66","closed",2020-09-18,2021-03-03,2020-11-19,6,"The CI_CD Action will now store the /docs folder in the new https://github.com/openpharma/visR-docs/ repo. 

The action will run checks, build the site and commit to a branch called `copied-docs` in the new repo. 

It does this on push to 
- `github_actions_ci` branch (this can be used as a branch name if looking to edit this Action)
- `develop`
- `master`

Along with this I deleted the /docs folder from this repo, as it's now stored elsewhere.
Also uncommented a line in the README which I think was causing issues before - seems to be fixed now.

Still to do with relation to this PR is change the source of the website to the new repo (in the Settings of the repositories) - this should happen pre-merge of this pull request so the website doesn't break when the docs folder in this repo is deleted, but I thought I should warn people before doing this.

It's worth noting that since the docs get pushed to the `copied-docs` branch (not straight to `master`), that any time the website needs to be updated, someone will need to manually merged that branch into `master` on `visR-docs`. I did this so that the website wouldn't just update every time someone pushes to a test branch - it's not a major concern but it does just mitigate someone breaking things without realising. 

","Jonnie-Bevan",62,-104
"repeated sorting somehow removing unrelated content","https://github.com/Roche/rtables/issues/63","closed",2020-09-18,2020-09-22,2020-09-22,0,"
<img width=""1162"" alt=""after"" src=""https://user-images.githubusercontent.com/908721/93644848-94dc0500-f9b7-11ea-895d-03f092716c5b.png"">
<img width=""1165"" alt=""before"" src=""https://user-images.githubusercontent.com/908721/93644851-96a5c880-f9b7-11ea-91df-097081e6d389.png"">
","gmbecker",4,0
"Package assessment challenge example: labeling -> ggplot2","https://github.com/pharmaR/riskmetric/issues/160","open",2020-09-19,2021-05-26,NA,3,"While reviewing all `tidyverse` package dependency. There are few package that need to be carefully discussed in preparing the qualification documentation. 

Package name: `labeling`
CRAN github snapshot: https://github.com/cran/labeling 
Description: https://cran.r-project.org/web/packages/labeling/index.html

Issue: There is no developer repo, no unit test for `labeling` package. 

The dependency line is `ggplot2` -> `scales` ->  `labeling`   

The package can be classified to high risk because of the current status. 

If our strategy is to classify `ggplot2` and all its dependency in the same risk category. How shall we justify `labeling` package?  


Note: similar issue will happen in `RColorBrewer` and `munsell` package. ","elong0527",275,26
"Merge sandbox","https://github.com/openpharma/visR/pull/67","closed",2020-09-20,2020-10-13,2020-09-25,0,"Merge visR-survival repository and maintain commit history https://github.com/visR-sandbox/visR-survival.
* Experimental api for survival time2event plotm including risk table and table summaries. 
 ","bailliem",5,-18
"`inclueNA` does not work in `analyze`","https://github.com/Roche/rtables/issues/65","closed",2020-09-21,2020-09-21,2020-09-21,0,"","waddella",0,0
"split_cols_by_multivar cannot change var labels","https://github.com/Roche/rtables/issues/64","closed",2020-09-21,2020-09-21,2020-09-21,0,"The `varlabels` argument of `split_cols_by_multivar` does not work.

Reproducible example (adapted from help page):

```r
library(dplyr)
ANL <- DM %>% 
  mutate(
    value = rnorm(n()), 
    pctdiff = runif(n())
  )
basic_table() %>% split_cols_by(""ARM"") %>%
  split_cols_by_multivar(c(""value"", ""pctdiff""), varlabels = c(""Measurement"", ""Pct Diff"")) %>%
  split_rows_by(""RACE"", split_label = ""ethnicity"", split_fun = drop_split_levels) %>%
  summarize_row_groups() %>%
  analyze_colvars(afun = mean, format = ""xx.xx"") %>%
  build_table(ANL)
```
","waddella",0,0
"summarize_row_groups should also take `.var` argument in case that ""var"" is specified","https://github.com/Roche/rtables/issues/66","closed",2020-09-21,2020-09-23,2020-09-21,4,"There will be many situations where an analyze call to a variable, see below for `AGE`, is preceded by a summary statement. In that case it would be great if the following can work to summarize the number of non-missing variable numbers before:

```r
library(rtables)
DM$AGE[1:50] <- NA

t1 <- basic_table() %>% 
  split_cols_by(""ARM"") %>%
  split_rows_by(""RACE"") %>%
  summarize_row_groups(
    label_fstr = ""%s (n)"", 
    var = ""AGE"",
    cfun = function(df, ..., .N_col, .var) {
      # c(nrow(df), nrow(df)/.N_col)
      sum(!is.na(df[[.var]])) * c(1, 1/.N_col)
    }) %>%
  analyze(""AGE"", afun = list_wrap_x(summary) , format = ""xx.xx"") %>%
  build_table(DM)
t1
```","danielinteractive",0,-2
"head() and tail() just give NULL","https://github.com/Roche/rtables/issues/68","closed",2020-09-22,2020-10-20,2020-10-20,5,"When calling `head()` or `tail()` on an `rtables` table, we just get `NULL` currently.

---

Reproducible example:

```r
library(rtables)

rawtable <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  split_cols_by(""SEX"") %>%
  split_rows_by(""RACE"") %>%
  summarize_row_groups() %>%
  split_rows_by(""STRATA1"") %>%
  summarize_row_groups() %>%
  analyze(""AGE"") %>%
  build_table(DM)
head(rawtable)
tail(rawtable)
```

Session info:

```r
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8       
 [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C              
[10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9005 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.1  htmltools_0.4.0 tools_3.6.1     Rcpp_1.0.3      digest_0.6.23   packrat_0.5.0  
[7] rlang_0.4.2     purrr_0.3.3    
```
","danielinteractive",28,0
"inconsistent error of calling `analyze` twice with multiple variables specified in `vars` argument","https://github.com/Roche/rtables/issues/69","closed",2020-09-22,2020-09-23,2020-09-23,1,"I would expect that `analyze` is agnostic over the position of the `vars` column names, when called twice consecutively. However, in the example below, the first version works, while the second version fails - just by moving the single variable name ""STRATA1"" from the first to the second call of `analyze`.

---

Reproducible example:

```r
library(rtables)

works <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  analyze(c(""SEX"", ""RACE"", ""STRATA1""), afun = list_wrap_x(table)) %>%
  analyze(""COUNTRY"", afun = list_wrap_x(table)) %>%
  build_table(DM)

fails <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  analyze(c(""SEX"", ""RACE""), afun = list_wrap_x(table)) %>%
  analyze(c(""COUNTRY"", ""STRATA1""), afun = list_wrap_x(table)) %>%
  build_table(DM)
# Error in (function (classes, fdef, mtable) : unable to find an inherited method 
# for function ‘labelrow_visible’ for signature ‘""AnalyzeMultiVars""’

```

Session info:

```r
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8       
 [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C              
[10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9005 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.1  htmltools_0.4.0 tools_3.6.1     Rcpp_1.0.3      digest_0.6.23   packrat_0.5.0  
[7] rlang_0.4.2     purrr_0.3.3  
```","danielinteractive",1,0
"sorting in this example removes top level analysis rows","https://github.com/Roche/rtables/issues/67","closed",2020-09-22,2020-09-22,2020-09-22,2,"Below is a small example where we have an `analyze` call followed by the first path variable split (""MHBODSYS""). We would like to keep the 2 rows coming out of this first `analyze` call in the sorted table. However, currently they are removed.

---

reproducible example:

```r
library(rtables)
library(assertthat)
library(dplyr)
library(random.cdisc.data)

ADSL <- radsl(cached = TRUE) %>%
  filter(SAFFL == 'Y') %>% 
  select(USUBJID, ARM)

ADMH <- radmh(cached = TRUE) %>%
  filter(SAFFL == 'Y')

a_num_unique <- function(x, .N_col) {
  in_rows(
    num_percent_unique =rcell(c(length(unique(x)), length(unique(x)) / .N_col), ""xx (xx.x%)""),
    length = rcell(length(x), ""xx"")
  )
}

a_count_event <- function(df, 
                          .N_col, 
                          .var = ""MHDECOD"", 
                          id = ""USUBJID"") {
  
  terms <- df[[.var]] # vector of all terms
  ids <- df[[id]] # vector of all subjids
  terms_count <- (table(terms, ids) > 0) %>% # logical indicating whether a subject reported a term at least once
    apply(1, sum) %>% # sum across subjects
    as.list()
  in_rows(
    .list = lapply(
      terms_count, 
      function(i, denom) rcell(c(i, i/denom), ""xx (xx.x%)""), 
      denom =.N_col
    )
  )
}

N_per_arm <- table(ADSL$ARM)
N_per_arm_tot <- c(N_per_arm, ""All Patients"" = dim(ADSL)[1])

lyt <- basic_table() %>%
  split_cols_by(""ARM"", split_fun = add_overall_level(""All Patients"", first = FALSE)) %>%
  add_colcounts() %>%
  analyze(
    vars = ""USUBJID"",
    afun = a_num_unique,
    show_labels = ""hidden""
  ) %>%
  split_rows_by(""MHBODSYS"", split_fun = drop_split_levels, child_labels = ""visible"", nested = FALSE)  %>%
  analyze(
    vars = ""USUBJID"",
    afun = a_num_unique,
    show_labels = ""hidden""
  ) %>%
  analyze(
    vars = ""MHDECOD"",
    afun = a_count_event,
    show_labels = ""hidden""
  )

# table without sorting: top summary rows are visible
t1 <- lyt %>%
  build_table(ADMH, col_counts = c(N_per_arm_tot)) %>%
  prune_table()
t1

score_total_events <- function(tt) {
  vals <- row_values(tt) ## retrieves a DataRow object’s values in the form of a list
  vals1 <- vapply(vals, '[[', i=1, numeric(1)) ## first value from each element in the list
  sum(vals1)
}

# table with sorting: top summary rows no longer visible
t2 <- t1 %>%
  sort_at_path(path = c(""MHBODSYS"", ""*"", ""MHDECOD""), scorefun = score_total_events) 
t2
```

Note that `t1` contains 2 top rows, which are deleted in `t2`. We would like to keep them in `t2`.

session info:

```r
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C              LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] random.cdisc.data_0.3.5.9000 dplyr_0.8.3                  assertthat_0.2.1             rtables_0.3.2.17.9000       
[5] magrittr_1.5                

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.3            packrat_0.5.0         digest_0.6.23         crayon_1.3.4          R6_2.4.1             
 [6] pillar_1.4.2          rlang_0.4.2           rstudioapi_0.10       tools_3.6.1           glue_1.3.1           
[11] purrr_0.3.3           yaml_2.2.0            parallel_3.6.1        compiler_3.6.1        pkgconfig_2.0.3      
[16] utils.nest_0.2.5.9000 htmltools_0.4.0       tidyselect_0.2.5      tibble_2.1.3    
```","danielinteractive",0,0
"summarize_row_groups and analyze_colvars should get argument `extra_args`","https://github.com/Roche/rtables/issues/70","closed",2020-09-23,2020-09-28,2020-09-28,2,"","gmbecker",5,0
"Incorrect denom counts when creating combined treatment group","https://github.com/atorus-research/Tplyr/issues/8","closed",2020-09-24,2020-09-30,2020-09-29,3,"
### Description

[Description of the bug or feature]

### Steps to Reproduce (Bug Report Only)

I executed the following code: 
```
adae_table <- tplyr_table(adae, TRTA) %>%
  add_treat_grps(""Treated"" = c(""Xanomeline High Dose"", ""Xanomeline Low Dose"")) %>%
  add_layer(
    group_count(AEDECOD) %>%
      set_distinct_by(USUBJID) %>% 
      set_nest_count(TRUE)
  )

adae_build <- adae_table %>%
  build()
```

**Expected behavior:** The creation of a combined treatment group named ""Treated"", and accurately calculated summary statistics for all treatment groups. 

**Actual behavior:** While a new treatment group named ""Treated"" was created, and denominator counts and percentages were correctly calculated, this is not the case for the original two treatment groups. ""Xanomeline High Dose"" and ""Xanomeline Low Dose""  denominator counts are not being correctly calculated, causing the percentages to be rendered as ""(Inf%)"". 

### Versions
R version 4.0.2 (2020-06-22) Platform: x86_64-pc-linux-gnu (64-bit) Running under: Ubuntu 18.04.5 LTS  Matrix products: default BLAS:   /usr/lib/x86_64-linux-gnu/openblas/libblas.so.3 LAPACK: /usr/lib/x86_64-linux-gnu/libopenblasp-r0.2.20.so  locale:  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        LC_COLLATE=C.UTF-8      [5] LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    LC_PAPER=C.UTF-8       LC_NAME=C               [9] LC_ADDRESS=C           LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C     attached base packages: [1] stats     graphics  grDevices utils     datasets  methods   base       other attached packages:  [1] huxtable_5.0.0  magrittr_1.5    Tplyr_0.1.1     forcats_0.5.0   stringr_1.4.0    [6] dplyr_1.0.0     purrr_0.3.4     readr_1.3.1     tidyr_1.1.0     tibble_3.0.3    [11] ggplot2_3.3.2   tidyverse_1.3.0  loaded via a namespace (and not attached):  [1] Rcpp_1.0.5       cellranger_1.1.0 pillar_1.4.6     compiler_4.0.2   dbplyr_1.4.4      [6] odbc_1.2.3       tools_4.0.2      bit_1.1-15.2     lubridate_1.7.9  jsonlite_1.7.0   [11] lifecycle_0.2.0  gtable_0.3.0     pkgconfig_2.0.3  rlang_0.4.7      reprex_0.3.0     [16] cli_2.0.2        DBI_1.1.0        rstudioapi_0.11  yaml_2.2.1       haven_2.3.1      [21] xfun_0.15        withr_2.2.0      xml2_1.3.2       httr_1.4.2       knitr_1.29       [26] fs_1.4.2         hms_0.5.3        generics_0.0.2   vctrs_0.3.2      bit64_0.9-7.1    [31] grid_4.0.2       tidyselect_1.1.0 glue_1.4.1       R6_2.4.1         fansi_0.4.1      [36] readxl_1.3.1     modelr_0.1.8     blob_1.2.1       backports_1.1.8  scales_1.1.1     [41] ellipsis_0.3.1   rvest_0.3.5      assertthat_0.2.1 colorspace_1.4-1 stringi_1.4.6    [46] munsell_0.5.0    broom_0.7.0      crayon_1.3.4
--



","snehagaddam",5,-1
"[WIP] Building out testing suite and transition to GitHub actions","https://github.com/pharmaR/riskmetric/pull/161","closed",2020-09-26,2020-10-02,2020-10-02,4,"- Migrate to GitHub actions
- Lay out framework for having mock packages embedded in testing suite for source package metrics
- Mock web requests for installed/remote package metrics
- Some reworking of web requests to use `httr` for all web requests allowing `webmockr` to intercept requests
- Minor bug fixes to address issues encountered along the way","dgkf",6,0
"fixing R CMD check warnings & notes (errors require webmockr update)","https://github.com/pharmaR/riskmetric/pull/163","closed",2020-09-26,2020-09-26,2020-09-26,0,"- added .github to .Rbuildignore
- some minor typo fixes
- documented some previously undocumented parameters
- updated some import statements as caught by R CMD check
- removed crayon functions, formatting using only base condition formatting","dgkf",0,0
"Improve ?riskmetric documentation","https://github.com/pharmaR/riskmetric/issues/162","open",2020-09-26,2020-09-28,NA,0,"I realized today that our package documentation (in `./R/riskmetric.R`) is quite barebones. For the time being, I'm just copying over our DESCRIPTION blurb, but I think we could make this much more meaningful. 

Some ideas for things we could include:

- An overview of the general workflow and primary ""verbs"" of riskmetric, as outlined in our getting started vignette
- A catalog of implemented metrics
- Background about package status, how to contribute, how to feed back new use cases and design considerations","dgkf",268,266
"nested not defaulting to FALSE for summarize_row_groups after multiple analyze","https://github.com/Roche/rtables/issues/71","closed",2020-09-28,2020-09-28,2020-09-28,1,"```
    lyt2 <- basic_table() %>%
        analyze(""SEX"") %>%
        analyze(""STRATA1"") %>%
        split_rows_by(""SEX"") %>%
        analyze(""SEX"")
    tbl2 <- build_table(lyt2, DM)
    expect_equal(dim(tbl2), c(29, 1))
```
","gmbecker",0,0
"summarize_row_groups on root split is broken","https://github.com/Roche/rtables/issues/72","closed",2020-09-28,2020-09-28,2020-09-28,1,"","gmbecker",0,0
"summarize_row_groups should take extra_args whcih are passed to content function(s).","https://github.com/Roche/rtables/issues/73","closed",2020-09-28,2020-10-06,2020-10-06,1,"","gmbecker",8,0
"use remote dependency webmockr","https://github.com/pharmaR/riskmetric/pull/164","closed",2020-09-28,2020-09-28,2020-09-28,0,"- updating github issues webmock
- switch to remote webmockr dependency
- add test for upcoming webmockr release","dgkf",0,0
"`extra_args` does not work","https://github.com/Roche/rtables/issues/75","closed",2020-09-29,2020-09-29,2020-09-29,3,"The following code gives an error

```
basic_table() %>%
  analyze(""Sepal.Length"", afun = function(x, a) {
     in_rows(mean_a = rcell(mean(x) + a , format = ""xx""))
     
  }, extra_args = list( a = 1)) %>%
  build_table(iris)
```

with the error

```
Error in is(x, ""CellValue"") : argument ""a"" is missing, with no default
```","waddella",0,0
"split_* on a numeric behavior","https://github.com/Roche/rtables/issues/74","closed",2020-09-29,2020-12-16,2020-12-16,2,"","gmbecker",78,0
"`analyze_colvars` gives a warning when `extra_args` are used","https://github.com/Roche/rtables/issues/76","closed",2020-09-30,2020-09-30,2020-09-30,2,"`analyze_colvars` gives a warning when `extra_args` are used in the `build_table` step. 

When I tried to debug this, then I found that the `exargs` list only has 5 elements instead of the required 6 in the example below, when passing to the `mapply` call at the end of 
`gen_rowvalues(dfpart, datcol = datcol, cinfo, func, splextra = splextra, takesdf = takesdf, baselines, inclNAs = inclNAs)`. 

Example:

```r
library(rtables)

dta_test <- data.frame(
  USUBJID = rep(1:6, each = 3),
  PARAMCD = rep(""lab"", 6*3),
  AVISIT = rep(paste0(""V"", 1:3), 6),
  ARM = rep(LETTERS[1:3], rep(6, 3)),
  AVAL = c(9:1, rep(NA, 9)),
  CHG = c(1:9, rep(NA, 9))
)

## Default output within a `rtables` pipeline.
l <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  split_rows_by(""AVISIT"") %>%
  split_cols_by_multivar(vars = c(""AVAL"", ""CHG"")) %>%
  analyze_colvars(mean, extra_args = list(na.rm = TRUE))

build_table(l, dta_test)
```

Session info:
```r
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C              LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9014 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.1  htmltools_0.4.0 tools_3.6.1     Rcpp_1.0.3      digest_0.6.23   packrat_0.5.0   rlang_0.4.3     purrr_0.3.3 
```
","danielinteractive",0,0
"Clean up error messages issued on a `pkg_missing` reference","https://github.com/pharmaR/riskmetric/issues/165","open",2020-10-01,2020-10-01,NA,0,"Following up on #149, we currently get a whole slew of warnings when running a `pkg_missing` reference, but give no indication that the pkg was not able to found from one of our sources. 

We should consider how we might want to short-circuit on this situation to provide some more meaningful feedback to the user.","dgkf",263,263
"`add_colcounts()` fails when applied without column split","https://github.com/Roche/rtables/issues/78","closed",2020-10-02,2020-10-05,2020-10-05,1,"The example below gives an error: `Error in (function (classes, fdef, mtable)  : 
  unable to find an inherited method for function ‘disp_ccounts<-’ for signature ‘""NULL""’`

```
basic_table() %>% 
  add_colcounts() %>%
  analyze(""AGE"") %>%
  build_table(DM)
```

Expected result:
```
        all obs  
       (N=356)
--------------
Mean    34.22 
```","danielinteractive",3,0
"add features to `make_afun` ","https://github.com/Roche/rtables/issues/77","closed",2020-10-02,2020-10-06,2020-10-05,5,"Thanks @gmbecker for `make_afun`, it looks pretty good already. However, in order to switch to using it in production, we would still need the following features for `make_afun`:

- I think this is more a bug, but also listing here: The labels that are passed from the statistics function result are not ending up in the table as they should. Example:
	```r
	s_summary <- function(x) {
	  stopifnot(is.numeric(x))
	
	  list(
	    n = with_label(sum(!is.na(x)), ""N subjects""),
	    mean_sd = with_label(c(mean = mean(x), sd = sd(x)), ""My mean and SD""),
	    min_max = with_label(range(x), ""Range"")
	  )
	}
	a_summary <- make_afun(
	  s_summary,
	  .labels = c(n = ""n subjects""),  # only overwrite the label of the `n` statistics here.
	  .formats = c(n = ""xx"", mean_sd = ""xx.xx (xx.xx)"", min_max = ""xx.xx - xx.xx"")
	)
	basic_table() %>%
	  analyze(
	    ""Sepal.Length"",
	    afun = a_summary
	  ) %>%
	  build_table(iris)
	```
	Here we have labels ""n"", ""mean_sd"" and ""min_max"" instead of the expected ""n subjects"", ""My mean and SD"" and ""Range"".

- We need `indent_mods` functionality for `make_afun`, analogous to `formats` functionality (only nonnegative indent modification would be sufficient, compare current prototype we have internally in `tern`)

- I think it is nice to be able to change default arguments of the statistics function. However, would it be possible to make the logical step to also allow to set a new default for arguments that did not have a default earlier in the statistics function? Example:
	```r
	s_foo <- function(df, .N_col, a = 1, b = 2) {
	   list(
	      nrow_df = nrow(df),
	      .N_col = .N_col,
	      a = a,
	      b = b
	   )
	}
	a_foo <- make_afun(s_foo, .N_col = 40,
	 .formats = c(nrow_df = ""xx.xx"", "".N_col"" = ""xx."", a = ""xx"", b = ""xx.x""),
	 .labels = c(nrow_df = ""Nrow df"", "".N_col"" = ""n in cols"", a = ""a value"", b = ""b value"")
	)
	a_foo(iris)
	```
	does not work currently.

- When handling reference columns we need to be able to pass empty strings instead of
numbers from a statistics function. In that case, the `afun` returned by `make_afun` should handle that case by changing the format to `""xx""` and not use the usually numeric format which will fail in the table production step. (I could imagine that this might be also solved by modifying the general interpretation of formats to not do anything when a string is detected.) Note that we cannot work with `NULL` instead of strings because that does not allow attributes which we need for passing labels.

	Example:
	```r
	s_summary_ref <- function(x, .in_ref_col) {
	  list(
        n = with_label(`if`(in_ref_col, """", length(x)), ""Number of patients""),
        mean = with_label(`if`(in_ref_col, """", mean(x)), ""Mean""),
        median = with_label(`if`(in_ref_col, """", median(x)), ""Median"")
      )
	}
	a_summary_ref <- make_afun(
	  s_summary_ref,
	  .formats = c(n = ""xx"", mean_sd = ""xx.xx (xx.xx)"", min_max = ""xx.xx - xx.xx"")
	)
	basic_table() %>%
	  split_cols_by(""Species"", ref_group = ""setosa"") %>%
	  analyze(""Sepal.Length"", afun = a_summary_ref) %>%
	  build_table(iris)
	```
","danielinteractive",3,-1
"Failed to execute iopages example","https://github.com/pharmaR/riskmetric/issues/166","closed",2020-10-02,2020-10-07,2020-10-07,2,"I did devtools::install_github(""pharmaR/riskmetric"") as instructed at iopages.
Then I ran example code as follows resulting in failure to find ""assess()""
> library(riskmetric)
> 
> pkg_ref(c(""riskmetric"", ""utils"", ""tools"")) %>%
+     as_tibble() %>%
+     assess() %>%
+     score() %>%
+     mutate(risk = summarize_risk(.))
Error in assess(.) : could not find function ""assess""","keaven",5,0
"Updating to R-CMD-check GitHub action badge, fixed example","https://github.com/pharmaR/riskmetric/pull/167","closed",2020-10-02,2021-03-31,2020-10-07,2,"Updating the badge to reflect our shift from travis to GitHub actions so that it reflects our build status properly","dgkf",5,-175
"Update vignette for KM analysis + General bug fixes","https://github.com/openpharma/visR/pull/68","closed",2020-10-03,2021-03-03,2020-10-05,0,"","SHAESEN2",2,-149
"`col_counts` are wrong for total column in this example","https://github.com/Roche/rtables/issues/79","closed",2020-10-05,2020-10-07,2020-10-07,6,"It seems that sometimes the total column count is right, but sometimes not. Here is an example where it is wrong:

```r
library(rtables)

adsl <- ex_adsl
n_per_arm <- table(adsl$ARM)

adcm <- ex_adcm

result <- basic_table() %>%
  split_cols_by(var = ""ARM"", split_fun = add_overall_level(""All Patients"", first = FALSE)) %>%
  add_colcounts() %>%
  build_table(adcm, col_counts = n_per_arm)
result
```

Session info:

```r
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8   
 [6] LC_MESSAGES=C              LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9015 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.1  htmltools_0.4.0 tools_3.6.1     Rcpp_1.0.3      digest_0.6.23   packrat_0.5.0   rlang_0.4.3     purrr_0.3.3 
```","danielinteractive",2,0
"Added collapse to add_risktable","https://github.com/openpharma/visR/pull/69","closed",2020-10-05,2021-03-03,2020-10-08,0,"","SHAESEN2",3,-146
"Consolidate vr_utils.R and utilities.R","https://github.com/openpharma/visR/issues/71","closed",2020-10-05,2021-05-30,2021-05-30,3,"It looks like we have several places where utility functions are defined: minimally R/vr_utils.R and R/utilities.R. Maybe it's good to agree on one single place for this? Happy to be convinced otherwise.","cschaerfe",237,0
"Unable to reproduce minimally informative prior from Neuenschwander (2008) paper","https://github.com/Roche/crmPack/issues/6","closed",2020-10-05,2021-01-26,2021-01-26,4,"Hello, I am trying to reproduce the non-informative prior given in the Neuenschwander (2008) paper, from which the MinimalInformative function is based off of. They arrive at the parameters
mu1 = 2.27
mu2 = 0.26
sigma1 = 1.98
sigma2 = 0.40
rho = -.16

Using the code below, I get
mu1 = .98
mu2 = -.79
sigma1 = 1.63
sigma2 = 0.29
rho = .71


```r
library(crmPack)
set.seed(132)
MinimalInformative(dosegrid = c(1, 2.5, 5, 10, 15, 20, 25, 30, 40, 50, 75, 100, 150, 200, 250),
                   refDose = 250,
                   threshmin = .6,
                   threshmax = .2,
                   logNormal = TRUE)
```","jfiksel",113,0
"Use ggplot mechanics to remove rows with NA","https://github.com/Roche/ggtips/pull/53","closed",2020-10-05,2020-10-06,2020-10-06,3,"Improved NA removal. In some cases NA value should NOT be removed (colour aes for `geom_point` etc). In this solution the default ggplot mechanics is used to remove incorrect rows.

Minimal reproducible example:
```
library(ggplot2)
df <- data.frame(x = c(1,2,3), y = c(1,2,3), col = factor(c(""one"", ""two"", NA)))
p <- ggplot(df, aes(x, y, colour = col)) + geom_point()
varDict <- list(col = ""cvar"")
res <- ggtips::getSvgAndTooltipdata(p, varDict)
```
Returns an error for the current ggtips version:
```
arguments imply differing number of rows: 2, 3 
```

And works fine in this PR:
```
> res$data
$points
$points[[1]]
                      tooltip    coordX     coordY
1 <ul><li>cvar: one</li></ul> 0.1392658 0.87689388
2 <ul><li>cvar: two</li></ul> 0.4529426 0.46633951
3  <ul><li>cvar: NA</li></ul> 0.7666194 0.05578515
```","mjakubczak",1,0
"vignette on how to put model results in a table","https://github.com/Roche/rtables/issues/80","open",2020-10-05,2020-11-04,NA,2,"see the working code in the slides with 2 examples:

 1. using broom
 2. create a results `data.frame`

Not too much text is needed.","waddella",259,229
"vr_render_table always collapses rows when using kable engine","https://github.com/openpharma/visR/issues/70","closed",2020-10-05,2021-05-31,2021-05-31,0,"#### Issue description

vr_render_table always collapses rows when using kable engine. This is not what we always need and should be an option or so.

#### Steps to reproduce the issue

Please share code if possible.

```r
library(survival)
data(lung)


lung %>% 
  head(10) %>% 
  vr_render_table(title = ""First 10 observations of `lung_cohort`."",
                  caption = """",
                  datasource = DATASET, 
                  engine = ""kable"")
```

#### What's the expected result?

- I want to see each row of the first ten samples


#### What's the actual result?

- Those consecutive row cells with same content are collapsed into one


#### Additional details / screenshot
","cschaerfe",238,0
"vr_summarize and get_summary","https://github.com/openpharma/visR/issues/72","closed",2020-10-05,2021-05-30,2021-05-30,4,"We have multiple functions creating different kinds of summaries:

- `vr_summarize` and `vr_summarize_tab1` are defined and used in the context of creating a summary table (in vr_utils.R)
- `get_summary` is defined to create a summary of a survfit object

I wonder if we should consolidate these methods or alternatively have more distinct names for them to avoid confusion?","cschaerfe",237,0
"""(xx, xx)"" format doesn't work correctly","https://github.com/Roche/rtables/issues/82","closed",2020-10-06,2020-12-16,2020-12-16,0,"```
> library(rtables)
> format_rcell(rcell(c(2, 5), format = ""(xx, xx)""))
[1] ""(25)""
```

As opposed to the `""(xx.x, xx.x)""` format which sort of does

```
> format_rcell(rcell(c(2, 5), format = ""(xx.x, xx.x)""))
[1] ""(2, 5)""
```
Though the above should be `""(2.0, 5.0)""` I think?

@waddella 
","gmbecker",71,0
"`make_afun` in this example cannot set value for argument of stats function","https://github.com/Roche/rtables/issues/81","closed",2020-10-06,2020-10-06,2020-10-06,2,"This does not work and I don't understand why:

```r
s_foo <- function(df, .N_col, a = 1, b = 2, c) {
  list(
    nrow_df = nrow(df),
    .N_col = .N_col,
    a = a,
    b = b,
    c = c
  )
}

a_foo <- make_afun(s_foo, c = 40,
                    .formats = c(nrow_df = ""xx.xx"", "".N_col"" = ""xx."", a = ""xx"", b = ""xx.x""),
                    .labels = c(nrow_df = ""Nrow df"", "".N_col"" = ""n in cols"", a = ""a value"", b = ""b value"")
)

a_foo(iris, .N_col = 20)
```

Session info:

```
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Red Hat Enterprise Linux

Matrix products: default
BLAS/LAPACK: /usr/lib64/libopenblas-r0.3.3.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8       
 [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C              
[10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9021 magrittr_1.5         

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.5        rstudioapi_0.11   knitr_1.29        usethis_1.6.1     devtools_2.3.1   
 [6] pkgload_1.0.2     R6_2.4.0          rlang_0.4.7       fansi_0.4.0       tools_3.6.1      
[11] pkgbuild_1.0.6    packrat_0.5.0     xfun_0.16         sessioninfo_1.1.1 cli_2.0.2        
[16] withr_2.1.2       remotes_2.2.0     htmltools_0.5.0   ellipsis_0.3.0    rprojroot_1.3-2  
[21] assertthat_0.2.1  digest_0.6.25     crayon_1.3.4      processx_3.4.1    purrr_0.3.4      
[26] callr_3.4.3       fs_1.3.1          ps_1.3.0          curl_4.2          testthat_2.3.2   
[31] memoise_1.1.0     glue_1.4.1        compiler_3.6.1    backports_1.1.5   desc_1.2.0       
[36] prettyunits_1.0.2
```","danielinteractive",0,0
"`in_rows` no longer respects `.labels` argument","https://github.com/Roche/rtables/issues/83","closed",2020-10-07,2020-10-07,2020-10-07,1,"In most recent version I see that `.labels` no longer works in `in_rows`.

```r
count_fraction <- CellValue(
  c(107, 0.798),
  format = ""xx (xx.x%)""
)

in_rows(
  .list = list(count_fraction = count_fraction),
  .labels = ""Total number of deaths""
)
```

session:

```r
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C              LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] utils.nest_0.2.5.9000        testthat_2.3.2               dplyr_0.8.5                  assertthat_0.2.1            
[5] random.cdisc.data_0.3.5.9000 tern_0.6.8.9000              rtables_0.3.2.17.9024        magrittr_1.5  
```","danielinteractive",0,0
"Fix for aes names","https://github.com/Roche/ggtips/pull/54","closed",2020-10-07,2020-10-07,2020-10-07,0,"Fix for the following example:
```library(ggplot2)
library(dplyr)
p <- ggplot(
  data = mpg %>% dplyr::mutate(class = factor(class)),
  mapping = aes(x = displ, y = cty)
) + 
  geom_point() + 
  geom_line() + 
  facet_wrap(~ class)

varDict <- list(
  displ = ""Display"",
  cty = ""Cty"",
  class = ""Class""
)

data <- ggtips::getSvgAndTooltipdata(
  plot = p,
  varDict = varDict,
  width = 300,
  height = 400,
  plotScales = list(x = ""identity"", y = ""identity""),
  addAttributes = TRUE
)
```","mjakubczak",0,0
"Format the table1 summarize results","https://github.com/openpharma/visR/pull/75","closed",2020-10-07,2020-10-08,2020-10-08,0,"Added digits argument to round the table1 summarize results.","galachad",1,0
"Parameter names are not consistent across functions","https://github.com/openpharma/visR/issues/73","closed",2020-10-07,2020-10-09,2020-10-09,1,"Functions should be checked for consistent parameter names for a more intuitive behavior. 

For example:
visR::add_annotation(..., lbl = NULL, ...)
vs
visR::vr_plot(..., y_label = NULL, ...)

","timtreis",2,0
"Testing of Wrappers around model (summaries)","https://github.com/openpharma/visR/issues/74","closed",2020-10-07,2021-04-21,2021-04-21,1,"This was an interesting idea from the Validation workshop of R in pharma:
They are using peer-reviewed literature for estimates of models to test again with testthat. I really like this idea for our wrapper functions for models and the summary measures.


![Validation](https://user-images.githubusercontent.com/47894155/95347589-59996b80-08bd-11eb-8c6a-38dfc4691c96.jpg)
","SHAESEN2",196,0
"[KM Plot] Order of N at risk, censored, events in Risktable does not agree with Morris et al.'s suggestion anymore","https://github.com/openpharma/visR/issues/77","closed",2020-10-08,2020-10-13,2020-10-13,3,"The guidance from the Kmunicate paper is to arrange n.risk, n.censor and n.events by stratum (see example of previos visR KM implementation)
![image](https://user-images.githubusercontent.com/3072980/95437601-784b4100-0955-11eb-9dce-dd128868e9b5.png)

![image](https://user-images.githubusercontent.com/3072980/95437640-84cf9980-0955-11eb-8985-a486268d535f.png)

With our new API, this ordering does not appear possible anymore:
![image](https://user-images.githubusercontent.com/3072980/95437829-c52f1780-0955-11eb-9c00-7c7dc1dcedd3.png)

I think it would be great to include the option to order the elements of the risk table following the KMunicate guidance, though, given that this was one of the motivators to actually write our own  KM function. Maybe in addition to the more common ordering as implemented in ggsurvplot? What do you think?
","cschaerfe",5,0
"[KM Plot] Parameter to define ratio between KM Plot and risktable","https://github.com/openpharma/visR/issues/80","open",2020-10-08,2020-10-08,NA,0,"When following good principles for plotting KM curves, it is advised by Morris et al. to also show an extended risktable with N at risk, censored and events. In it's current implementation, this may lead to a rather small KM plot and the risk tables taking up a large part (I'd guess 50%) of the figure. 
It would be nice to adjust this ratio (similarly to the `tables.height` parameter in ggsurvplot) or have some other options to reduce the plot real estate taken up by the table-part. 

![image](https://user-images.githubusercontent.com/3072980/95475253-4f8f6f80-0986-11eb-9c0e-c313a09c758b.png)
","cschaerfe",256,256
"`in_rows` should not return a list so that we keep names and labels separate","https://github.com/Roche/rtables/issues/93","closed",2020-10-08,2020-10-21,2020-10-21,1,"","waddella",13,0
"`make_pagedf` should use proper recursion","https://github.com/Roche/rtables/issues/95","closed",2020-10-08,2020-10-16,2020-10-16,1,"","waddella",8,0
"add `paginate_table` to `_pkgdown.yaml`","https://github.com/Roche/rtables/issues/84","closed",2020-10-08,2020-12-16,2020-12-16,0,"","waddella",69,0
"Added missing package dependencies ","https://github.com/openpharma/visR/pull/79","closed",2020-10-08,2021-03-03,2020-10-08,0,"for correctly calculating censoring counts in risktable","cschaerfe",0,-146
"Attrition flow chart in Example Analysis vignette not showing correctly","https://github.com/openpharma/visR/issues/76","closed",2020-10-08,2021-05-30,2021-05-30,4,"Building the example analysis locally (either running each chunk in the notebook or knitting the full document) in RStudio works fine. Executing the following code results in the flowchart shown in the viewer or RStudio:
```
attrition_flow <- vr_attrition(
  N_array = cohort_attrition$`Remaining N`,
  descriptions = cohort_attrition$Criteria,
  complement_descriptions = complement_descriptions,
  display = F,
  output_path = attrition_chart_fn)
```
And embedding the exported svg in the report also works:
![image](https://user-images.githubusercontent.com/3072980/95435385-cd398800-0952-11eb-80ca-81f9ec7f6a8f.png)

**When building the vignette using `pkgdown::build_articles()`, the image included by `knitr::include_graphics` is broken:**
![image](https://user-images.githubusercontent.com/3072980/95435214-98c5cc00-0952-11eb-992f-5d2cb734f7db.png)

Additionally, when knitting the vignette, it the svg (that is shown in the Viewer when working interactively) is not incorporated as an image, but as text:
![image](https://user-images.githubusercontent.com/3072980/95435152-85b2fc00-0952-11eb-9cad-f8870397ff22.png)

And this **svg returned by the call to `attrition_flow` does not appear at all when building the vignette.** 
![image](https://user-images.githubusercontent.com/3072980/95435480-e93d2980-0952-11eb-9376-4578cb083170.png)

One problem seems to be the file path used in `knitr::include_graphics` does not seem correct in the context of the fully built website. Not sure how to correct for this, though... Does anyone know have any ideas how to fix this problem and show the final flow chart in our vignette on the website?","cschaerfe",234,0
"Cell, Row, Column references (which will show up in footnotes)","https://github.com/Roche/rtables/issues/92","closed",2020-10-08,2021-04-21,2021-04-21,1,"","waddella",195,0
"contribute to tables work public","https://github.com/Roche/rtables/issues/88","closed",2020-10-08,2020-12-16,2020-12-16,0,"https://blog.rstudio.com/2020/09/15/announcing-the-2020-rstudio-table-contest/

need to contact `gt `to be mentioned: https://gt.rstudio.com/index.html#how-gt-fits-in-with-other-packages-that-generate-display-tables

Adrian: R Consortium","waddella",69,0
"First Draft of Listings","https://github.com/Roche/rtables/issues/99","closed",2020-10-08,2021-04-26,2021-04-26,1,"","waddella",200,0
"Fixing issue with missing N removed in the attrition table","https://github.com/openpharma/visR/pull/78","closed",2020-10-08,2021-03-03,2020-10-08,0,"Added dplyr:: namespace to calculation of n removed.","cschaerfe",0,-146
"look into unit testing","https://github.com/Roche/rtables/issues/86","closed",2020-10-08,2020-12-16,2020-12-16,0,"","waddella",69,0
"New Maintenance Metrics regarding Frequency of Version Releases","https://github.com/pharmaR/riskmetric/issues/168","open",2020-10-08,2021-02-23,NA,2,"Greetings!

While working on the risk assessment shiny app, we had some good discussion regarding new maintenance metrics we'd like to suggest:

- **(1) number of version releases**
- **(2) average / median number of months between releases**

The thought rationale actually came about while discussing our plot on the community usage tab (see plots below). As you can see, there are packages, like `dplyr` that have frequent version releases within a year and other packages like `bshazard` that have zero. Knowing that a package is constantly being improved (like `dplyr`) shows that the maintainers are very active, which is a good sign from a risk perspective. However, a package that hasn't been updated in a while (like 28 months for `bshazard`) for example may pose a potential risk. Let me explain: either the package is really simple and doesn't require much maintenance (low risk) OR the maintainer has abandoned his/ her post (high risk)!

Second, having **number of versions** and **avg months between releases** will also help bring into context the version maturity figure below. At first glance, a risk assessment shiny app user may think that only 1 month since release is really risky, but not until they realize that `dplyr` actually churns out new releases on monthly or bi-monthly cadence.

Thoughts?

![image](https://user-images.githubusercontent.com/17878953/95462131-1aaef880-0945-11eb-8514-75d6d0779eb4.png)

![image](https://user-images.githubusercontent.com/17878953/95462199-34504000-0945-11eb-9a84-149b0f306fc5.png)

","AARON-CLARK",256,118
"release `rtables` on CRAN","https://github.com/Roche/rtables/issues/87","closed",2020-10-08,2021-04-21,2021-04-21,1,"","waddella",195,0
"release on CRAN again","https://github.com/Roche/rtables/issues/98","closed",2020-10-08,2021-04-26,2021-04-26,0,"","waddella",200,0
"row gaps","https://github.com/Roche/rtables/issues/94","open",2020-10-08,2021-04-26,NA,0,"","waddella",256,56
"show N in higher order columns","https://github.com/Roche/rtables/issues/90","closed",2020-10-08,2020-12-16,2020-12-16,1,"","waddella",69,0
"table comparison function","https://github.com/Roche/rtables/issues/96","open",2020-10-08,2021-06-17,NA,1,"- Look at `diffdf` R package
 - values only
 - identical","waddella",256,4
"Titles and Footnotes","https://github.com/Roche/rtables/issues/91","closed",2020-10-08,2021-04-21,2021-04-21,1,"","waddella",195,0
"top left space content","https://github.com/Roche/rtables/issues/89","closed",2020-10-08,2020-12-07,2020-12-07,0,"Either a paragraph OR a table structure summary (a indentation description) - maybe fixed or fluid

Please write me an email and I will look into the printing.


```r

lyt <- basic_table() %>%
   ...


tbl <-  build_table(lyt, DM) 

top_left()
top_left<-
```


# There is a bigger discussion

* correct name
* belongs to layout or table?
* stickiness

```r
tbl <- basic_table() %>%
   ... %>%
   header_label(""Medra\n SOC"") %>%
   build_table(DM)

row_structure_label
table_context
header_label
structure_label
top_left 
table_labels(tbl) <- c(""Medra"", ""  New"")

set_header_label(tbl, ""new\n header"")
```

table_context()


only toplevel table 
* pagination needs to retain that part","waddella",60,0
"Vignette for good analysis function writing","https://github.com/Roche/rtables/issues/97","open",2020-10-08,2020-10-08,NA,0,"","waddella",256,256
"Vignette for pathing","https://github.com/Roche/rtables/issues/85","closed",2020-10-08,2021-04-21,2021-04-21,1,"","waddella",195,0
"write `tree_structure` as a mix of makepagedf, treestruct, summarize","https://github.com/Roche/rtables/issues/100","closed",2020-10-08,2020-12-16,2020-12-16,2,"look at makepagedf using visible_only=FALSE","waddella",69,0
"Changed lbl to label","https://github.com/openpharma/visR/pull/81","closed",2020-10-09,2021-03-03,2020-10-13,1,"","SHAESEN2",4,-141
"Dev/r cmd check","https://github.com/pharmaR/riskmetric/pull/169","closed",2020-10-09,2021-02-25,2021-02-25,3,"This replaces half of #137 by creating an `r_cmd_check` pkg_ref_cache slot and accompanying assessment which counts the number of errors warnings and notes that are produced after running `devtools::check` (equivalent to: `R CMD check`). The ref_cache stores the entire check output, which is a list with some pretty printing (from devtools). This currently only works for `pkg_source` with todos left for `pkg_cran_remote` and `pkg_bioc_remote`","emilliman5",139,0
"Dev/remote checks","https://github.com/pharmaR/riskmetric/pull/170","closed",2020-10-09,2021-02-25,2021-02-17,3,"This is the other half of #137. This creates a `cran_checks` ref_cache which scrapes the cran or Bioc check results. The accompanying assessment tabulates the number of systems that raised an error, warning, note, ok, fail or timeout. This assessment is only applicable to packages published to CRAN or Bioc and that are stores as `pkg_cran_remote` and `pkg_bioc_remote`.","emilliman5",131,-8
"get_COX_HR called data.frame in addition to survfit object ","https://github.com/openpharma/visR/issues/83","closed",2020-10-11,2021-05-31,2021-05-31,1,"I would suggest to add the option to call the get_COX_HR method also on a data.frame. We should not make strong assumptions about the flow/hierarchy of different calls, if it is not necessary. Currently, the get_COX_HR method is only called on a survfit object but it would be very easy to add a function that calls coxph function on a data.frame. ","rebecca-albrecht",232,0
"Parameters, parameter names and assumptions about column names","https://github.com/openpharma/visR/issues/82","closed",2020-10-11,2021-03-03,2021-03-03,0,"Using terminology defined in a standard like CDISC ADaM has a lot of advantages. However, there are several aspects we need to consider, for example:
- general flexibility, 
- the tradeoff between ease of use if data follows the standard vs. if it does not
- how easy it is to learn and understand

Generally, I would suggest not to make strong assumptions about column names. Then again, if we have to make assumptions it is a good idea to follow the standard. Also, I think we should have parameter names that are easy to read and to understand, especially for people familiar with survival analysis but not necessarily with the standard. 

The easiest solution would probably be using the column names from the ADaM standard as default values and using simple parameter names that are meaningful in a functional way. 

Suggestion: Change the function signature for vr_KM_est from 
vr_KM_est(data = adtte, strata = ""TRTP"")
to either
1. vr_KM_est(data=NULL, stratifier=NULL, censor = ""CNSR"", time = ""AVAL"")
2. vr_KM_est(data=NULL, stratifier=NULL, event = ""CNSR"", time = ""AVAL"")","rebecca-albrecht",143,0
"`make_afun` does not pass arguments via `...` to lower level functions","https://github.com/Roche/rtables/issues/102","closed",2020-10-12,2020-10-12,2020-10-12,1,"We quite often have the following situation, where the statistics function passes optional arguments to the lower level helper function. Unfortunately currently `make_afun` does not pass this correctly down.

Example:
```r
library(rtables)

hfun <- function(x, foo = 2) {
  list(a = mean(x * foo))
}

sfun <- function(x, ...) {
  hfun(x, ...)
}

afun <- make_afun(sfun)

hfun(1:10) # 11
hfun(1:10, foo = 3) # 16.5
afun(1:10, foo = 3) # should be 16.5, but gives 11
```

Session info:

```r
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8       
 [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C              
[10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9025 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0  
[7] rlang_0.4.5     purrr_0.3.4 
```","danielinteractive",0,0
"`make_afun` formats don't cover all `fun` results with the same name ","https://github.com/Roche/rtables/issues/101","closed",2020-10-12,2020-10-16,2020-10-16,8,"If the statistics function `fun` returns multiple results with the same name in the list, only the first are correctly processed with formatting through `make_afun`. We would like that all results with the matching name are processed as such.
(Note: We need this functionality to group together results of a common ""class"" that are not appearing all consecutively, and have been using this with our prototype so far.)

Example:

```r
sfun <- function(x) {
  list(
    a = with_label(mean(x), ""mean""),
    a = with_label(mean(x, trim = 0.1), ""mean (trim 0.1)""),
    a = with_label(mean(x, trim = 0.2), ""mean (trim 0.2)"")
  )
}
afun <- make_afun(
  sfun,
  .formats = c(a = ""xx.xxxx""),
  .indent_mods = c(a = 1L)
)
result <- basic_table() %>%
  analyze(""Sepal.Length"", afun = afun) %>%
  build_table(iris)
result
##                      all obs     
## ----------------------------------
##   mean                 5.8433     
## mean (trim 0.1)   5.80833333333333
## mean (trim 0.2)   5.79777777777778
```

So here the indent and numeric format is only applied to the first row, but not to the last 2 rows.

Session info:
```r
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8       
 [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C              
[10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9025 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0  
[7] rlang_0.4.5     purrr_0.3.4 
```","danielinteractive",4,0
"`make_afun` result in package triggers R CMD check note","https://github.com/Roche/rtables/issues/103","closed",2020-10-12,2020-10-12,2020-10-12,1,"For example, we have a function `c_num_patients` produced by `make_afun` in our package code. Then R CMD check triggers the following note:

````
N  checking R code for possible problems (13.3s)
   c_num_patients: no visible binding for global variable ‘x’
   Undefined global functions or variables:
     x
````

While this can be quickly ""fixed"" by setting

```r
utils::globalVariables(c(""x""))
```

in the package, I wonder whether this could be solved more elegantly on rtables side?","danielinteractive",0,0
"Add risktable group","https://github.com/openpharma/visR/pull/84","closed",2020-10-12,2021-03-03,2020-10-13,1,"","SHAESEN2",1,-141
"add option to remove original levels when using `add_combo_levels`","https://github.com/Roche/rtables/issues/104","closed",2020-10-13,2020-10-15,2020-10-14,5,"I am currently trying to produce a table that looks like this:

````
                                         ARM A                          ARM B            
                                        (N=185)                        (N=180)           
                             _____________________________  _____________________________
                                                                                         
  MedDRA System Organ Class  Any Grade  Grade 3-4  Grade 5  Any Grade  Grade 3-4  Grade 5
    MedDRA Preferred Term       (%)        (%)       (%)       (%)        (%)       (%)  
  _______________________________________________________________________________________
                                                                                         
  SKIN AND SUBCUTANEOUS TISSUE DISORDERS                                                     
    ALOPECIA                    49          1         0        57          0         0   
    RASH                        16         <1         0        12          0         0   
    PRURITUS                    15          0         0         7          0         0   
                                                                                         
  GENERAL DISORDERS AND ADMINISTRATION SITE CONDITIONS                                       
    FATIGUE                     42          4         0        44          3         0   
    PYREXIA                     12         <1         0        10         <1         0   
    OEDEMA PERIPHERAL           12          0         0         8         <1         0   
    ASTHENIA                    12          2         0        10          0         0   
````

My approach was to have three logical variables representing the three analysis columns, and then use `analyze_colvars`. The problem there is that the row split (e.g. ""ALOPECIA"") gets its own row, but I would like to have the percentage from `analyze_colvars` in the same row as the row split label. Then I thought of `summarize_row_groups` but that cannot handle the different column variables distinctly, i.e. the summary is the same across the 3 analysis columns.

Is there something missing here in terms of feature? Or am I missing something?","danielinteractive",1,-1
"Dependency risk","https://github.com/pharmaR/riskmetric/issues/172","open",2020-10-13,2021-03-31,NA,3,"Could we create a metric / number of metrics that summarises the risk of the dependency?  For example you could count lines of code to get an idea of scope, but I was thinking something more like an average riskmetric score from the dependencies, or perhaps a flag in the event that any dependency has a risk score of > x.","andyofsmeg",251,82
"Dev2master","https://github.com/openpharma/visR/pull/88","closed",2020-10-13,2020-10-13,2020-10-13,0,"Rebuild documentation prior to rebase of master. 
Workaround fix for issue #76 ","bailliem",0,0
"Different test status on CRAN depending on OS","https://github.com/pharmaR/riskmetric/issues/171","closed",2020-10-13,2021-05-26,2021-05-26,3,"When a package is on CRAN it can be in different state of status depending on operating system, ie passing on some, warning on others and failing on a few.  Is there a way of capturing this in the risk score.

Question posed at R/Pharma by Jonathan Sidi","andyofsmeg",225,0
"General API style","https://github.com/openpharma/visR/issues/85","closed",2020-10-13,2021-03-03,2021-03-03,0,"I think the API as shown in the kick-off by Steve is already great and I really like it a lot!
The key points are:
- Different classes model estimation / necessary calculations (implemented in the vr_KM_est.R) and plotting (vr_plot.R)
- Very generic plotting (vr_plot.R) and generic plotting-helpers (e.g. add_CI), with also consistent and clear naming.
- Use of the general tidyverse philosophy and especially the pipe operator.

A next step could be adding refactoring another plotting function to be integrated into the existing API, for example, the alluvial
The next steps would then be:
- Changing the referencing of column names. Right now they are renamed in the data.frame, I would use the parameter names instead (cf. issue 82).
- Creating an object for the result of the precalculations necessary to plot the alluvial (function vr_alluvial_wrangling).
- Separate alluvial base plot from addons (like adding the N) to have the same calling structure as in the survival example.
- Integrating the alluvial plotting into the vr_plot method.
Each point would be a separate github issue but I don't want to clutter the issue list before we have decided if we do it like this

","rebecca-albrecht",141,0
"Rbest remove from depends ","https://github.com/openpharma/visR/pull/87","closed",2020-10-13,2020-10-13,2020-10-13,1,"This is an experimental function and needs to be developed. At the moment this dependency is causing errors in the visR package. This has been removed and the tidy rbest function moved to indicate it is experimental. ","bailliem",0,0
"Update graphical representation of the architecture / include example","https://github.com/openpharma/visR/issues/86","open",2020-10-13,2020-10-14,NA,0,"Update the graphical representation of the visR architecture. Maybe even add an example with concrete function (names or visualizations) to show how different functions map to the architecture concepts.","rebecca-albrecht",251,250
"Update master for RinPharma","https://github.com/openpharma/visR/pull/89","closed",2020-10-13,2020-10-14,2020-10-14,1,"Update documentation to reflect changes prior to r in pharma. ","bailliem",1,0
"updated metric error/na/todo such that we can still propegate scoring labels","https://github.com/pharmaR/riskmetric/pull/173","closed",2020-10-13,2021-03-09,2021-01-20,2,"- updated the `pkg_metric_error`, `pkg_metric_na` and `pkg_metric_todo` to be subclasses of `pkg_metric_condition` (to easier catch them all as one class for special treatment)
- added util function `firstS3method` (inspired by `getS3method`, but finding returning the first valid method for an object's subclasses)
- added labels for all `metric_score.pkg_metric_*` functions
- added `pkg_metric_eval` as a way of encapsulating evaluation of metrics and allow us to capture errors

Now we should have label attributes for all columns in a scored pkg_ref tibble, and all items in a scored pkg_ref list. ","dgkf",99,-48
"add_risk_table: min at risk = 0","https://github.com/openpharma/visR/issues/91","closed",2020-10-14,2021-04-03,2021-04-03,2,"## Issue description
When the argument `min_at_risk` = 0, I am expecting the risk table to extend the entire x axis

## Solution
I played around a bit and found an easy solution:
```{r}
  if (min_at_risk > 0) {
  max_time <-
    tidy_object %>%
    dplyr::filter(n.risk >= min_at_risk) %>%
    dplyr::group_by(strata) %>%
    dplyr::summarize(max_time = max(time)) %>%
    dplyr::ungroup() %>%
    dplyr::summarize(min_time = min(max_time)) %>%
    dplyr::pull(min_time)
  } else {
    max_time = max(time_ticks)
  }
```","SHAESEN2",171,0
"Forest Plot","https://github.com/openpharma/visR/issues/90","open",2020-10-14,2021-02-06,NA,0,"## Idea

**What is your idea for a new plot/table?**
Not only meta-analyses, but also cohort overviews or results of cox PH models and other regression models are often shown in ForestPlots. @bailliem had some initial ideas, but we haven't gotten around to fully implement this visualisation and help would be appreciated

**Do you have any examples you can share of what it looks like?**
Example for Cox PH Model (example from [forestmodel](https://github.com/NikNakk/forestmodel))
![image](https://user-images.githubusercontent.com/3072980/96006403-bce74880-0e3d-11eb-9306-85326c87ed44.png)

Example for cohort overview from Morris et al.
![image](https://user-images.githubusercontent.com/3072980/96003035-1a799600-0e3a-11eb-9143-9cf1fa0c19f9.png)


**What potential packages/functions could be used to make this plot?**
There are the [forestplot](https://cran.r-project.org/web/packages/forestplot/vignettes/forestplot.html) and [forestmodel](https://github.com/NikNakk/forestmodel) packages on CRAN as well as potentially some good ideas in the [ggforest function of the survminer package](https://rpkgs.datanovia.com/survminer/reference/ggforest.html). Ideally, this would be implemented using ggplot2 only.

**Are you interested to implement this yourself?**
@bailliem started, but not sure how it goes bandwidth wide.","cschaerfe",250,135
"multiple panels ranges","https://github.com/Roche/ggtips/pull/55","closed",2020-10-14,2020-10-16,2020-10-16,0,"","marcin-kam",2,0
"Question on using pharmaRTF in reporting","https://github.com/atorus-research/pharmaRTF/issues/3","closed",2020-10-14,2020-10-16,2020-10-16,1,"Is it possible to use this package to generate a word report which has proper table formatting as shown in this package but also with proper table numbering and referencing? ","zhenglei-gao",2,0
"KM plot show quantiles","https://github.com/openpharma/visR/issues/93","open",2020-10-15,2020-10-15,NA,0,"Add drop lines to show quantiles of the KM distribution.

","SHAESEN2",249,249
"Tutorial/Recommendations for Contributing","https://github.com/openpharma/visR/issues/92","closed",2020-10-15,2020-11-15,2020-11-15,1,"","rebecca-albrecht",31,0
"`analyze_colvar` - Warning when var > 4","https://github.com/Roche/rtables/issues/105","closed",2020-10-16,2020-10-16,2020-10-16,1,"When I want to split across more than 4 columns, a warning message appears; the result in correct though.

```r
library(rtables)
test <- data.frame(
  a = 1,
  b = 1,
  c = 1,
  d = 1,
  e = 1
)

l1 <- split_cols_by_multivar(lyt = NULL, c(""a"", ""b"", ""c"", ""d"")) %>%
  analyze_colvars(afun = identity)
l2 <- split_cols_by_multivar(lyt = NULL, c(""a"", ""b"", ""c"", ""d"", ""e"")) %>%
  analyze_colvars(afun = identity)

build_table(l1, test)
#            a   b   c   d
# ------------------------
# identity   1   1   1   1

build_table(l2, test)
#            a   b   c   d   e
# ----------------------------
# identity   1   1   1   1   1
# Warning message:
#   In mapply(gen_onerv, csub = colexprs, col = datcol, count = colcounts,  :
#               longer argument not a multiple of length of shorter


devtools::session_info()
# ─ Session info ────────────────────────────────────────────────────────────────────────────────────────────────────
# setting  value                      
# version  R version 3.6.3 (2020-02-29)
# os       Debian GNU/Linux 9 (stretch)
# system   x86_64, linux-gnu          
# ui       RStudio                    
# language (EN)                        
# collate  en_US.UTF-8                
# ctype    en_US.UTF-8                
# tz       Etc/UTC                    
# date     2020-10-16                  
#
# ─ Packages ────────────────────────────────────────────────────────────────────────────────────────────────────────
# package     * version       date       lib source                      
# assertthat    0.2.1         2019-03-21 [2] CRAN (R 3.6.3)              
# backports     1.1.6         2020-04-05 [2] CRAN (R 3.6.3)              
# callr         3.4.3         2020-03-28 [2] CRAN (R 3.6.3)              
# cli           2.0.2         2020-02-28 [2] CRAN (R 3.6.3)              
# crayon        1.3.4         2017-09-16 [2] CRAN (R 3.6.3)              
# desc          1.2.0         2018-05-01 [2] CRAN (R 3.6.3)              
# devtools      2.3.0         2020-04-10 [2] CRAN (R 3.6.3)              
# digest        0.6.25        2020-02-23 [2] CRAN (R 3.6.3)              
# ellipsis      0.3.0         2019-09-20 [2] CRAN (R 3.6.3)              
# fansi         0.4.1         2020-01-08 [2] CRAN (R 3.6.3)              
# fs            1.4.1         2020-04-04 [2] CRAN (R 3.6.3)              
# glue          1.4.0         2020-04-03 [2] CRAN (R 3.6.3)              
# htmltools     0.4.0         2019-10-04 [2] CRAN (R 3.6.3)              
# magrittr    * 1.5           2014-11-22 [2] CRAN (R 3.6.3)              
# memoise       1.1.0         2017-04-21 [2] CRAN (R 3.6.3)              
# packrat       0.5.0         2018-11-14 [2] CRAN (R 3.6.3)              
# pkgbuild      1.0.6         2019-10-09 [2] CRAN (R 3.6.3)              
# pkgload       1.0.2         2018-10-29 [2] CRAN (R 3.6.3)              
# prettyunits   1.1.1         2020-01-24 [2] CRAN (R 3.6.3)              
# processx      3.4.2         2020-02-09 [2] CRAN (R 3.6.3)              
# ps            1.3.2         2020-02-13 [2] CRAN (R 3.6.3)              
# purrr         0.3.4         2020-04-17 [2] CRAN (R 3.6.3)              
# R6            2.4.1         2019-11-12 [2] CRAN (R 3.6.3)              
# Rcpp          1.0.4.6       2020-04-09 [2] CRAN (R 3.6.3)              
# remotes       2.1.1         2020-02-15 [2] CRAN (R 3.6.3)              
# rlang         0.4.5         2020-03-01 [2] CRAN (R 3.6.3)              
# rprojroot     1.3-2         2018-01-03 [2] CRAN (R 3.6.3)              
# rstudioapi    0.11          2020-02-07 [2] CRAN (R 3.6.3)              
# rtables     * 0.3.2.17.9027 2020-10-16 [1] xxxxxxxxxxxxxx
# sessioninfo   1.1.1         2018-11-05 [2] CRAN (R 3.6.3)              
# testthat      2.3.2         2020-03-02 [2] CRAN (R 3.6.3)              
# usethis       1.6.0         2020-04-09 [2] CRAN (R 3.6.3)              
# withr         2.2.0         2020-04-20 [2] CRAN (R 3.6.3)              
#
# [1] /opt/xxxxxxxxxxxxxxx
# [2] /usr/local/lib/R/site-library
# [3] /usr/local/lib/R/library
```","FCACollin",0,0
"`analyze_colvars`: `inclNAs`","https://github.com/Roche/rtables/issues/106","closed",2020-10-16,2020-10-16,2020-10-16,1,"I want to process NA values contained in the intersection of a row and a column while splitting my results across columns with `analyze_colvars`. Currently, the NA values are removed from the selection analyzed by `analyze_colvars` and can't be processed.

```r
test <- data.frame(
  a = c(1, 2),
  b = c(1, NA)
)

l <- split_cols_by_multivar(lyt = NULL, c(""a"", ""b"")) %>%
  analyze_colvars(afun = length)

# We expect:
sapply(test, length)
# a b
# 2 2

# But we get:
build_table(l, test)
#          a   b
# --------------
#   length 2   1

devtools::session_info()
#
# ─ Session info ───────────────────────────────────────────────────────────
# setting  value                      
# version  R version 3.6.3 (2020-02-29)
# os       Debian GNU/Linux 9 (stretch)
# system   x86_64, linux-gnu          
# ui       RStudio                    
# language (EN)                        
# collate  en_US.UTF-8                
# ctype    en_US.UTF-8                
# tz       Etc/UTC                    
# date     2020-10-16                  
#
# ─ Packages ───────────────────────────────────────────────────────────────
# package     * version       date       lib source                      
# assertthat    0.2.1         2019-03-21 [2] CRAN (R 3.6.3)              
# backports     1.1.6         2020-04-05 [2] CRAN (R 3.6.3)              
# callr         3.4.3         2020-03-28 [2] CRAN (R 3.6.3)              
# cli           2.0.2         2020-02-28 [2] CRAN (R 3.6.3)              
# crayon        1.3.4         2017-09-16 [2] CRAN (R 3.6.3)              
# desc          1.2.0         2018-05-01 [2] CRAN (R 3.6.3)              
# devtools      2.3.0         2020-04-10 [2] CRAN (R 3.6.3)              
# digest        0.6.25        2020-02-23 [2] CRAN (R 3.6.3)              
# ellipsis      0.3.0         2019-09-20 [2] CRAN (R 3.6.3)              
# fansi         0.4.1         2020-01-08 [2] CRAN (R 3.6.3)              
# fs            1.4.1         2020-04-04 [2] CRAN (R 3.6.3)              
# glue          1.4.0         2020-04-03 [2] CRAN (R 3.6.3)              
# htmltools     0.4.0         2019-10-04 [2] CRAN (R 3.6.3)              
# magrittr    * 1.5           2014-11-22 [2] CRAN (R 3.6.3)              
# memoise       1.1.0         2017-04-21 [2] CRAN (R 3.6.3)              
# packrat       0.5.0         2018-11-14 [2] CRAN (R 3.6.3)              
# pkgbuild      1.0.6         2019-10-09 [2] CRAN (R 3.6.3)              
# pkgload       1.0.2         2018-10-29 [2] CRAN (R 3.6.3)              
# prettyunits   1.1.1         2020-01-24 [2] CRAN (R 3.6.3)              
# processx      3.4.2         2020-02-09 [2] CRAN (R 3.6.3)              
# ps            1.3.2         2020-02-13 [2] CRAN (R 3.6.3)              
# purrr         0.3.4         2020-04-17 [2] CRAN (R 3.6.3)              
# R6            2.4.1         2019-11-12 [2] CRAN (R 3.6.3)              
# Rcpp          1.0.4.6       2020-04-09 [2] CRAN (R 3.6.3)              
# remotes       2.1.1         2020-02-15 [2] CRAN (R 3.6.3)              
# rlang         0.4.5         2020-03-01 [2] CRAN (R 3.6.3)              
# rprojroot     1.3-2         2018-01-03 [2] CRAN (R 3.6.3)              
# rstudioapi    0.11          2020-02-07 [2] CRAN (R 3.6.3)              
# rtables     * 0.3.2.17.9027 2020-10-16 [1] xxxxxxxxxxxxxxxxx
# sessioninfo   1.1.1         2018-11-05 [2] CRAN (R 3.6.3)              
# testthat      2.3.2         2020-03-02 [2] CRAN (R 3.6.3)              
# usethis       1.6.0         2020-04-09 [2] CRAN (R 3.6.3)              
# withr         2.2.0         2020-04-20 [2] CRAN (R 3.6.3)              
#
# [1] /opt/xxxxxxxxxxxxxxxx
# [2] /usr/local/lib/R/site-library
# [3] /usr/local/lib/R/library
```","FCACollin",0,0
"Install Issues - Dependency on V8","https://github.com/openpharma/visR/issues/94","closed",2020-10-16,2021-05-26,2021-05-26,2,"When trying to install the package in our analytics environment, users often run into issues with resolving the V8 dependency:
```
Using PKG_CFLAGS=-I/usr/include/v8 -I/usr/include/v8-3.14
Using PKG_LIBS=-lv8 -lv8_libplatform
-----------------------------[ ANTICONF ]-------------------------------
Configuration failed to find the libv8 engine library. Try installing:
 * deb: libv8-dev or libnode-dev (Debian / Ubuntu)
 * rpm: v8-devel (Fedora, EPEL)
 * brew: v8 (OSX)
 * csw: libv8_dev (Solaris)
To use a custom libv8, set INCLUDE_DIR and LIB_DIR manually via:
R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'
---------------------------[ ERROR MESSAGE ]----------------------------
<stdin>:1:10: fatal error: v8.h: No such file or directory
compilation terminated.
------------------------------------------------------------------------
ERROR: configuration failed for package 'V8'
* removing '/home/reyessia/R/x86_64-pc-linux-gnu-library/4.0/V8'
Error: Failed to install 'visR' from GitHub:
  (converted from warning) installation of package 'V8' had non-zero exit status
```

It can be resolved by following the instructions in the traceback, i.e., installing the corresponding libv8 library in the terminal (not in R, but into the system). 
For ubuntu, apparently also the following worked
`sudo apt install librsvg2-dev`

If I remember correctly, we thought we had removed that dependency in develop a while ago, but it seems to be back both on master and develop. @bailliem, @SHAESEN2 do you know if we need this still?","cschaerfe",222,0
"Update changelog","https://github.com/Roche/ggtips/issues/56","open",2020-10-16,2020-10-17,NA,1,"The changelog need to be updated with all the fixes that was done recently. 

Maybe we should do releases. In one of my FOSS projects, I use devel branch and keep updating changelog and release is just merge to master --no-ff and tag. ","jcubic",248,247
"`indent_mod` of `analyze` does not work anymore","https://github.com/Roche/rtables/issues/107","closed",2020-10-19,2020-10-21,2020-10-21,1,"Just trying to do the looping of `analyze` calls, where I need to fix indentation outside of the afun, and I tried with `indent_mod` but that does not work. Here a (not realistic) toy example:

```r
library(rtables)
basic_table() %>%
  analyze(""Sepal.Width"", afun = mean, show_labels = ""visible"") %>%
  analyze(""Sepal.Width"", afun = median, show_labels = ""hidden"", indent_mod = 2L) %>%
  build_table(iris)
```

Session info:

```r
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8       
 [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C              
[10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9029 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0  
[7] rlang_0.4.5     purrr_0.3.4 
```","danielinteractive",2,0
"add pkgdown website","https://github.com/openpharma/CTP/pull/2","closed",2020-10-19,2020-10-19,2020-10-19,0,"","waddella",0,0
"adding the ability to specify the source when creating a pkg_ref ","https://github.com/pharmaR/riskmetric/issues/175","closed",2020-10-19,2021-03-31,2021-03-31,2,"For example, I want to analyze the latest version of ggplot2 from CRAN and not what I have installed. Currently, when creating a `pkg_ref` `as_pkg_ref` first checks if the package is installed locally, then checks various remote repositories, and lastly a source directory.
It would be helpful to be able to do something like this:
`pkg_list <- pkg_ref(""ggplot2"", source=""pkg_remote"")`
`pkg_list <- pkg_ref(""ggplot2"", source = ""pkg_cran_remote"")`

Or maybe...
`pkg_list <- pkg_ref(""cran/ggplot2"")` #sort of a github install style
`pkg_list <- pkg_ref(setNames(c(""ggplot2"", ""limma""), c(""cran"", ""bioc"")))` #named list

I would propose that we allow shorthand (e.g. ""cran"", ""bioc"") as well as the actual pkg classes names (e.g. ""pkg_cran_remote"").

","emilliman5",163,0
"fix some issues with  build/check/install","https://github.com/openpharma/CTP/pull/1","closed",2020-10-19,2020-10-19,2020-10-19,0,"","waddella",0,0
"Strategy for cohort metrics ","https://github.com/pharmaR/riskmetric/issues/174","open",2020-10-19,2021-06-09,NA,15,"User story: as an organization, we want to evaluate the package risk in a pre-defined list. 

Example: tidyverse and all its dependency

Step 1: identify the package list (total 88 packages)

```
# Those packages will be directly used 
pkgs <- c(""broom"", ""cli"", ""crayon"", ""dbplyr"", ""dplyr"", ""forcats"", ""ggplot2"", 
          ""haven"", ""hms"", ""httr"", ""jsonlite"", ""lubridate"", ""magrittr"", 
          ""modelr"", ""pillar"", ""purrr"", ""readr"", ""readxl"", ""reprex"", ""rlang"", 
          ""rstudioapi"", ""rvest"", ""stringr"", ""tibble"", ""tidyr"", ""xml2"", 
          ""tidyverse"")
```

```
# All dependency packages

pkg_avail <- available.packages(contriburl = contrib.url(repo))
all_pkgs <- miniCRAN::pkgDep(pkgs, 
                               availPkgs = pkg_avail,
                               repos = repo, 
                               type = ""source"", 
                               suggests = FALSE,
                               includeBasePkgs = FALSE)
all_pkgs <- all_pkgs[! all_pkgs %in% base_pkg()]
```
Step 2: run `riskmetric` for each of the package independently
Step 3: run package `assess` and `score` for each package
Step 4: calculate the overall risk of the cohort. Weight can be set based on the type of package. (e.g. directly used by user, dependency package)  

","elong0527",245,12
"unit testing of print","https://github.com/Roche/rtables/issues/108","closed",2020-10-19,2021-04-21,2021-04-21,1,"","waddella",184,0
"Can we change the ""all obs"" title of the default column?","https://github.com/Roche/rtables/issues/110","closed",2020-10-20,2020-10-23,2020-10-22,2,"Can we change the ""all obs"" title of the default column?","danielinteractive",2,-1
"Question on how to account for metadata info in pruning","https://github.com/Roche/rtables/issues/109","closed",2020-10-20,2021-04-13,2021-04-13,5,"Sometimes splitting on factor levels introduces row combinations in a table which are not realistic or possible based on metadata information. For such cases, we would like to come up with an approach to prune based on table data but also taking into account the metadata.

Example:
```r
df <- data.frame(
  arm = c(""a"", ""b"", ""c"", ""a"", ""b"", ""c""),
  discont = factor(c(""dropout"", ""none"", ""none"", ""adverse"", ""moving"", ""none""), 
                   levels = c(""none"", ""dropout"", ""moving"", ""notime"", ""adverse"", ""death"", ""ill"", ""reaction"")),
  discont_group = factor(c(""other"", ""none"", ""none"", ""safety"", ""other"", ""none""))
)

tab <- basic_table() %>%
  split_cols_by(""arm"") %>%
  split_rows_by(""discont_group"", split_fun = keep_split_levels(c(""safety"", ""other""))) %>%
  split_rows_by(""discont"") %>%
  summarize_row_groups() %>%
  build_table(df)
tab
prune_table(tab)
```

Now here the problem is:
- `tab` is too large, i.e. contains many rows which don't have observations and which are not possible at all. For example, there can't be a row under ""safety"" which is ""moving"".
- `prune_table(tab)` (which somehow kills everything here, but supposing it works) would be too small, i.e. does not contain rows we would like to show having 0s. For example, we would like to keep the row ""death"" under ""safety"" to show that it did not happen here.

So the question is how do we include best the requirement here to have specific levels shown for the 2nd factor given the value of the 1st factor?","danielinteractive",175,0
"`cbind_rtables` displays column  names in wrong order in some cases when hierarchy structure differs","https://github.com/Roche/rtables/issues/111","closed",2020-10-21,2020-10-29,2020-10-29,3,"It seems like `cbind_rtables` can only reliably work when used in specific order.

Example:

```r
library(rtables)

tab1 <- rtable(
  header = ""a"",
  rrow(""one"", 1)
)
tab2 <- rtable(
  header = ""b"",
  rrow(""one"", 2)
)
tab3 <- rtable(
  header = ""c"",
  rrow(""one"", 3)
)

first <- cbind_rtables(tab1, tab2)
wrong <- cbind_rtables(first, tab3)
ok <- cbind_rtables(tab3, first)
```

Here `wrong` has the wrong order of column names (but cell content is correct). `ok` is ok.

Session info:

```r
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8       
 [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C              
[10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9029 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0  
[7] rlang_0.4.5     purrr_0.3.4    
```","danielinteractive",8,0
"`cbind_rtables` gives error with `analyze_colvars`","https://github.com/Roche/rtables/issues/113","closed",2020-10-21,2020-10-22,2020-10-22,1,"When`cbind_rtables` is used with `analyze_colvars`, things seem to work until adding in `split_rows_by`. 

```
library(rtables)

ANL <- DM
ANL$DUMMY <- "" "" # Hack needed to make headers the same dimension for cbind_rtables to work
ANL$AGE2 <- ANL$AGE
ANL$AGE3 <- ANL$AGE

t1 <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  split_cols_by_multivar(c(""AGE"", ""BMRKR1"")) %>%
  analyze_colvars(afun = mean, format = ""xx.x"") %>%
  build_table(ANL)

t2 <- basic_table() %>%
  split_cols_by(""DUMMY"") %>%
  split_cols_by_multivar(c(""AGE2"", ""AGE3"")) %>%
  analyze_colvars(afun = mean, format = ""xx.x"") %>%
  build_table(ANL)

# Here cbind works.
cbind_rtables(t1, t2)

# Now repeat with a row split.
t3 <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  split_cols_by_multivar(c(""AGE"", ""BMRKR1"")) %>%
  split_rows_by(""RACE"", split_fun = drop_split_levels) %>%
  analyze_colvars(afun = mean, format = ""xx.x"") %>%
  build_table(ANL)

t4 <- basic_table() %>%
  split_cols_by(""DUMMY"") %>%
  split_cols_by_multivar(c(""AGE2"", ""AGE3"")) %>%
  split_rows_by(""RACE"", split_fun = drop_split_levels) %>%
  analyze_colvars(afun = mean, format = ""xx.x"") %>%
  build_table(ANL)

# Gives error.
cbind_rtables(t3, t4)
```

Session Info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C              LC_PAPER=en_US.UTF-8      
 [8] LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9029 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   rlang_0.4.5     purrr_0.3.4   
```","anajens",1,0
"`cbind_rtables` loses formats of individual tables that are combined","https://github.com/Roche/rtables/issues/112","closed",2020-10-21,2020-10-23,2020-10-22,4,"```r
library(rtables)

tab1 <- rtable(
  header = ""a"",
  rrow(""one"", 1.1111111, format = ""xx.x"")
)
tab2 <- rtable(
  header = ""b"",
  rrow(""one"", 2.2222222, format = ""xx.xxxx"")
)

wrong_format <- cbind_rtables(tab1, tab2)
```

It seems like only the format of the left table is used, so that the formats of the right table are overwritten wrongly by the left table formats. We would want the formats to stay correct per column/sub table. (same session info here as in #111)","danielinteractive",1,-1
"Cohort Metric for Namespace Conflicts","https://github.com/pharmaR/riskmetric/issues/176","open",2020-10-21,2021-04-12,NA,1,"From the R in Pharma validation workshop:

Loading in packages with conflicting function names can cause a number of issues in your package/environment. A good proxy for incompatible packages would be the number of conflicts that arise between namespaces. By using `getNamespaceExports()` on a call to a cohort or library and sum the number of overlaps.

The example used at the workshop was `dplyr` and `plyr`
Here's an example of how these scores could be calculated.
```
> counts <- c(getNamespaceExports(""plyr""), getNamespaceExports(""dplyr"")) %>%
+     plyr::count() %>%
+     dplyr::filter(freq > 1)
          x freq
1   arrange    2
2     count    2
3      desc    2
4  failwith    2
5        id    2
6    mutate    2
7    rename    2
8 summarise    2
9 summarize    2

nrow(counts)
[1] 9
```","elimillera",243,70
"`in_rows` loses `.formats` (at least when used with `analyze_colvars`)","https://github.com/Roche/rtables/issues/114","closed",2020-10-22,2020-10-23,2020-10-22,3,"Example:

```r
colfuns <- list(
  function(x) {
    in_rows(.list = list(a = mean(x)), .formats = ""xx.x"")
  },
  function(x) {
    in_rows(.list = list(a = median(x)), .formats = ""xx.xxxx"")
  }
)

l <- basic_table() %>% split_cols_by(""ARM"") %>%
  split_cols_by_multivar(c(""value"", ""pctdiff"")) %>%
  split_rows_by(""RACE"", split_label = ""ethnicity"", split_fun = drop_split_levels) %>%
  summarize_row_groups() %>%
  analyze_colvars(afun = colfuns)

l
library(dplyr)
ANL <- DM %>% mutate(value = rnorm(n()), pctdiff = runif(n()))

build_table(l, ANL)

```

So here the statistic `a` is just always printed with like all digits it has rather than the requested formats.

Session info:

```r
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8   
 [6] LC_MESSAGES=C              LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9031 magrittr_1.5          dplyr_0.8.5          

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.4.6     fansi_0.4.1      digest_0.6.25    packrat_0.5.0    crayon_1.3.4     assertthat_0.2.1 R6_2.4.1         lifecycle_0.2.0 
 [9] pillar_1.4.3     cli_2.0.2        rlang_0.4.5      rstudioapi_0.11  vctrs_0.2.4      ellipsis_0.3.0   tools_3.6.3      glue_1.4.0      
[17] purrr_0.3.4      compiler_3.6.3   pkgconfig_2.0.3  htmltools_0.4.0  tidyselect_1.0.0 tibble_3.0.1 
```","danielinteractive",0,-1
"Is there a way to display results in line with split labels in analyze_colvars situation?","https://github.com/Roche/rtables/issues/115","closed",2020-10-23,2020-10-27,2020-10-26,2,"Hi @gmbecker ,

I can give more context in our meeting next week, but basically a question came up regarding the colvars layout. Is it possible to have something analogous to `summarize_row_groups` where the `cfun` would be a list populating different columns differently? (so similar to `analyze_colvars` where `afun` can be a list of `afun`s doing different things for different columns, but displaying the results in line with the split label of the levels).

We have a couple of table layouts where such a feature would be needed and useful. Just wanted to check if I oversaw some functionality in rtables that can do this (which might well be the case).

Thanks,
cheers
Daniel","danielinteractive",3,-1
"`make_afun` when stats function is a generic with method-depending results","https://github.com/Roche/rtables/issues/116","closed",2020-10-26,2020-11-05,2020-11-05,7,"Hi @gmbecker ,

we have the situation that we have a generic summary function as statistics function with methods depending on the class of input vector `x`. If the variable `x` is a numeric, e.g. mean and sd are returned as statistics, but if the variable is a factor, then a list of counts and another list of counts and fractions might be returned.

Now with `make_afun` interface there are problems:

- We can only set `.formats` to things that will definitely be returned by the stats function. That means we can't set formats for numeric and factor return statistics at the same time, because only one set would be returned. 

- We cannot set `.ungroup_stats` to count and count_fraction just like that because even if `x` is a factor then only one of them might be selected via `.stats`. (This problem is not specific to the generic stats fun situation but another similar symptom of failing assertions)

How should we move forward?

","danielinteractive",10,0
"fix `.tbl_header_mat` to be recursive, remove old_rcell","https://github.com/Roche/rtables/issues/122","closed",2020-10-27,2020-10-29,2020-10-29,0,"","waddella",2,0
"fix clinical trials vignette","https://github.com/Roche/rtables/issues/119","closed",2020-10-27,2020-11-11,2020-11-11,0,"","waddella",15,0
"fix make_pagedf","https://github.com/Roche/rtables/issues/121","closed",2020-10-27,2020-10-28,2020-10-28,0,"","waddella",1,0
"How to add custom formats with split_cols_by_multivar column-wise?","https://github.com/Roche/rtables/issues/125","closed",2020-10-27,2020-10-28,2020-10-28,1,"Here is an example that works specifying two different formats for variables tabulated with `split_cols_by_multivar`:

```
library(rtables)

df <- data.frame(
  stat1 = 1.23,
  stat2 = 0.456,
  subgroup = ""XYZ"",
  stringsAsFactors = FALSE
) 

afun_list_ok <- list(
  stat1 = function(df, ...) {
    in_rows(.list = as.list(df$stat1), .labels = as.character(df$subgroup), .formats = ""xx."")
  },
  stat2 = function(df, ...) {
    in_rows(.list = as.list(df$stat2), .labels = as.character(df$subgroup), .formats = ""xx.x%"")
  }
)

# works:
basic_table() %>%
  split_cols_by_multivar(vars = c(""stat1"", ""stat2"")) %>%
  analyze_colvars(afun = afun_list_ok) %>%
  build_table(df)
```
However, there is an error when switching the format to a custom function. Is this a bug?
```
# now add custom format:
format_pct <- function(x, ...) {
  result <- paste0(""("", round(x * 100, 1), ""%)"")
  return(result)
}

afun_list_err <- list(
  stat1 = function(df, ...) {
    in_rows(.list = as.list(df$stat1), .labels = as.character(df$subgroup), .formats = ""xx."")
  },
  stat2 = function(df, ...) {
    in_rows(.list = as.list(df$stat2), .labels = as.character(df$subgroup), .formats = format_pct) #use new format
  }
)

# Error here:
basic_table() %>%
  split_cols_by_multivar(vars = c(""stat1"", ""stat2"")) %>%
  analyze_colvars(afun = afun_list_err) %>%
  build_table(df)

```
Session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9037 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0   rlang_0.4.6     purrr_0.3.4
```
","anajens",1,0
"How to get the right percentages in this case?...","https://github.com/Roche/rtables/issues/117","open",2020-10-27,2021-04-28,NA,3,"Hi @gmbecker 
I have a question on a table layout where

- header column counts set with `col_counts` are from overall population
- `summarize_row_groups` gives us the analysis population column counts
- and then we do `split_rows_by` and we want then percentages that refer to the analysis population, not the overall population...

something like this - but with e.g. 57.4% instead of 7.3% for Patients with event in column A.

````
                                       A: Drug X        B: Placebo      C: Combination 
                                        (N=536)           (N=536)           (N=528)    
---------------------------------------------------------------------------------------
Responders                                68                73                62       
  Patients with event (%)              39 (7.3%)         47 (8.8%)        59 (11.2%)   
    Adverse Event                          6                10                18       
    Death                                  5                 8                 7       
    Disease Progression                   16                 7                10       
    Last Date Known To Be Alive            7                11                12       
    Last Tumor Assessment                  5                11                12       
  Patients without event (%)          29 (42.6%)        26 (35.6%)         3 (4.8%)    
````

When playing around with it I did not have an idea how to do this, since we would need to refer to parent split `nrow(df)` right?...

Thanks!","danielinteractive",237,54
"Is it possible to use a single variable inside split_cols_by_multivar?","https://github.com/Roche/rtables/issues/118","closed",2020-10-27,2020-11-04,2020-11-04,1,"```
# Works
basic_table() %>%
  split_cols_by_multivar(vars = c(""Sepal.Length"", ""Sepal.Width"")) %>%
  analyze_colvars(afun = mean) %>%
  build_table(iris)

# Error:
basic_table() %>%
  split_cols_by_multivar(vars = ""Sepal.Width"") %>%
  analyze_colvars(afun = mean) %>%
  build_table(iris)
```

Session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9037 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   rlang_0.4.6     purrr_0.3.4 
```
","anajens",8,0
"order vignettes for pkgdown","https://github.com/Roche/rtables/issues/120","closed",2020-10-27,2020-12-16,2020-12-16,0,"","waddella",50,0
"write make_col_df()","https://github.com/Roche/rtables/issues/124","closed",2020-10-27,2020-12-16,2020-12-16,0,"And rename `make_pagdf` to `make_row_df`, previously part of #131","waddella",50,0
"write table_structure(), row_structure(), col_structure()","https://github.com/Roche/rtables/issues/123","closed",2020-10-27,2020-12-16,2020-12-16,0,"","waddella",50,0
"Allow user define R package version in riskmetric ","https://github.com/pharmaR/riskmetric/issues/177","closed",2020-10-28,2021-03-16,2021-03-16,1,"","elong0527",139,0
"Remove out of range points","https://github.com/Roche/ggtips/pull/57","closed",2020-10-29,2020-10-30,2020-10-30,0,"","marcin-kam",1,0
"could not create a rrow with empty rcell","https://github.com/Roche/rtables/issues/126","closed",2020-11-02,2020-11-05,2020-11-05,2,"in manual creation of rtables, adding an empty rcell to a rrow will lead to error

```r
library(rtables)
rrow(""aa"", rcell(x = """"))
```

R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Red Hat Enterprise Linux

Matrix products: default
BLAS/LAPACK: /usr/lib64/libopenblas-r0.3.3.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.1.7              random.cdisc.data_0.3.6    teal.modules.general_0.2.6 teal_0.9.1                
[5] shiny_1.4.0.2              magrittr_1.5               ggmosaic_0.2.0             ggplot2_3.3.0             

loaded via a namespace (and not attached):
 [1] nlme_3.1-148        httr_1.4.1          numDeriv_2016.8-1.1 tools_3.6.3         dfoptim_2018.2-1   
 [6] backports_1.1.6     R6_2.4.1            DT_0.13             lazyeval_0.2.2      colorspace_1.4-1   
[11] withr_2.2.0         tidyselect_1.1.0    gridExtra_2.3       emmeans_1.4.8       curl_4.3           
[16] compiler_3.6.3      cli_2.0.2           teal.devel_0.2.7    shinyjs_1.1         plotly_4.9.2.1     
[21] sandwich_2.5-1      scales_1.1.0        mvtnorm_1.1-0       stringr_1.4.0       digest_0.6.25      
[26] minqa_1.2.4         foreign_0.8-76      rio_0.5.16          pkgconfig_2.0.3     htmltools_0.4.0    
[31] lme4_1.1-23         styler_1.2.0        fastmap_1.0.1       htmlwidgets_1.5.1   rlang_0.4.6        
[36] readxl_1.3.1        rstudioapi_0.11     generics_0.0.2      zoo_1.8-7           jsonlite_1.6.1     
[41] dplyr_1.0.0         zip_2.0.4           car_3.0-7           Matrix_1.2-18       Rcpp_1.0.4.6       
[46] munsell_0.5.0       fansi_0.4.1         abind_1.4-5         lifecycle_0.2.0     stringi_1.4.6      
[51] multcomp_1.4-13     yaml_2.2.1          carData_3.0-3       MASS_7.3-51.6       plyr_1.8.6         
[56] grid_3.6.3          parallel_3.6.3      promises_1.1.0      forcats_0.5.0       crayon_1.3.4       
[61] lattice_0.20-41     haven_2.2.0         splines_3.6.3       hms_0.5.3           pillar_1.4.3       
[66] boot_1.3-25         estimability_1.3    codetools_0.2-16    glue_1.4.0          data.table_1.12.8  
[71] nloptr_1.2.2.1      vctrs_0.3.1         httpuv_1.5.2        tern_0.6.9          cellranger_1.1.0   
[76] gtable_0.3.0        purrr_0.3.4         tidyr_1.0.2         productplots_0.1.1  assertthat_0.2.1   
[81] utils.nest_0.2.6    openxlsx_4.1.4      mime_0.9            xtable_1.8-4        coda_0.19-3        
[86] later_1.0.0         survival_3.2-3      viridisLite_0.3.0   tibble_3.0.1        optimx_2020-4.2    
[91] lmerTest_3.1-2      statmod_1.4.34      shinyWidgets_0.5.1  TH.data_1.0-10      ellipsis_0.3.0    ","clarkliming",3,0
"Avoid lazy load of plot data","https://github.com/Roche/ggtips/pull/58","closed",2020-11-03,2020-11-09,2020-11-09,0,"Temporary directory is used during plot expression evaluation","mjakubczak",6,0
"Variable labels can't be changed in `split_cols_by_multivar` using `varlabels`","https://github.com/Roche/rtables/issues/127","closed",2020-11-03,2020-11-05,2020-11-05,2,"Result below displays the variable names in the table header instead of the labels provided to `varlabels`.

```r
library(rtables)

basic_table() %>%
  split_cols_by_multivar(c(""AGE"", ""BMRKR1""), varlabels = c(""Age"", ""Biomarker 1"")) %>%
  analyze_colvars(afun  = mean, format = ""xx.x"") %>%
  build_table(DM)

```

Session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9039 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0   rlang_0.4.6     purrr_0.3.4    
```","anajens",2,0
"Create unit tests for formats and fix some","https://github.com/Roche/rtables/pull/128","closed",2020-11-05,2021-02-02,2021-02-02,7,"Close #6 ","thomas-neitmann",89,0
"Example analysis vignette not building","https://github.com/openpharma/visR/issues/95","closed",2020-11-05,2021-03-03,2021-03-03,2,"The file ""attrition_diagram.svg"" is located in the ""vignettes"" folder but the codes searches it in the non-existing folder ""/Example_analysis_files/figure-html"". 

I would fix this - any preferences how?","rebecca-albrecht",118,0
"How can we have `analyze_colvars` with arbitrary columns?","https://github.com/Roche/rtables/issues/129","closed",2020-11-05,2020-11-10,2020-11-09,1,"Actually there is still unexpected (or at least for me unlucky) behavior with variable labels in current version (0.3.2.17.9041): When there is duplicated `vars` passed to `split_cols_by_multivar` then different `varlabels` are not respected:

```r
basic_table() %>%
  split_cols_by_multivar(c(""AGE"", ""AGE""), varlabels = c(""Age"", ""Biomarker 1"")) %>%
  analyze_colvars(afun  = mean, format = ""xx.x"") %>%
  build_table(DM)
```

gives twice ""Age"" as label for the columns. Note that the use case for such duplicated/ dummy `vars` is often that we just use the whole `df` in the `afun` and not one specific variable. So in order to fix this kind of thing, it might be cleaner mid term to not require specification of variables when using `split_cols_by_multivar`.

Following our discussion, I also tried something with a `add_combo_levels` and `select_all_levels` combination:

```r
library(tibble)
combodf <- tribble(
  ~valname, ~label, ~levelcombo, ~exargs,
  ""A_B"", ""Arms A+B"", select_all_levels, list(),
  ""A_C"", ""Arms A+C"", select_all_levels, list()
)

colfuns <- list(function(x) rcell(mean(x), format = ""xx.x""),
                function(x) rcell(sum(x > .5), format = ""xx""))
l <- basic_table() %>%
  split_cols_by(""ARM"", split_fun = add_combo_levels(combodf, keep_levels = combodf$valname)) %>%
  analyze_colvars(colfuns)
```
but that fails.

Thanks in advance @gmbecker for your help on this as this is needed for a table.","danielinteractive",4,-1
"add_combo_levels + reference column","https://github.com/Roche/rtables/issues/130","closed",2020-11-06,2020-11-11,2020-11-11,2,"Is it possible to use the combo level feature with a reference column?

```r

library(rtables)
library(tibble)
combodf <- tribble(
  ~valname, ~label, ~levelcombo, ~exargs,
  ""A_"", ""Arm A"", c(""A: Drug X""), list(),
  ""B_C"", ""Arms B & C"", c(""B: Placebo"", ""C: Combination""), list())

l <- basic_table() %>%
  split_cols_by(""ARM"", split_fun = add_combo_levels(combodf, keep_levels = c(""A_"", ""B_C""))) %>%
  add_colcounts() %>%
  analyze(""AGE"", afun = mean)
build_table(l, DM)

#              Arm A          Arms B & C  
#             (N=121)            (N=235)    
# -----------------------------------------
#   mean   34.9090909090909   33.868085106383

l <- basic_table() %>%
  split_cols_by(
    ""ARM"",
    split_fun = add_combo_levels(combodf, keep_levels = c(""A_"", ""B_C"")),
    ref_group = ""A_""
    ) %>%
  add_colcounts() %>%
    analyze(""AGE"", afun = function(x, .ref_group, .in_ref_col){
      if (.in_ref_col) {
        in_rows(""Difference of Averages"" = rcell(NULL))
      } else {
        in_rows(""Difference of Averages"" = rcell(mean(x) - mean(.ref_group), format = ""xx.xx""))
      }
    })
build_table(l, DM)
#
# Error in (function (x, .ref_group, .in_ref_col)  :
# argument "".in_ref_col"" is missing, with no default
#
```","FCACollin",5,0
"method for 'pkg_ref_cache.description' applied to pkg_remote","https://github.com/pharmaR/riskmetric/issues/178","open",2020-11-06,2020-11-12,NA,6,"Greetings.

I have been working with @marlycormar on the `risk_assessment` package, and due to some changes we've been working on,
I noticed the `pkg_remote` method had not been defined for `pkg_ref_cache.description`

And I am offering to write one and create a PR for it.
Below is a rough draft.   Currently, the `risk_assessment` package only needs a few fields, such as version, author, maintainer, license and published date.  So the function I have written so far works for `risk_assessment`.

But for `riskmetric` I believe the function/method should web-scrape every name-value pair it finds, just like we were pulling every field out of a `DESCRIPTION` file.

```{r, eval=FALSE}
pkg_ref_cache.description.pkg_remote <- function(x, name, ...) {

  webpage <-
    read_html(paste0(
      x$repo_base_url,""/package="",x$name
    ))
  
  title_html <- html_nodes(webpage, 'h2')
  title <- html_text(title_html)
  # remove line breaks, single and double quotes
  title <- str_replace_all(title, c(""\n |'|\""""),"""") 
  
  desc_html <- html_nodes(webpage, 'p')
  desc <- html_text(desc_html)
  desc <- desc[1]
  desc <- str_replace_all(desc, c(""\n |'|\""""), """") 
  
  maintainer_xpath <- ""//td[.='Maintainer:']/following::td[1]""
  main <- xml2::xml_text(xml2::xml_find_all(webpage, maintainer_xpath))
  main <- str_replace_all(main, c(""\n |'|\""""), """") 
  
  author_xpath <- ""//td[.='Author:']/following::td[1]""
  auth <- xml2::xml_text(xml2::xml_find_all(webpage, author_xpath))
  auth <- str_replace_all(auth, c(""\n |'|\""""), """") 
  
  lisc_xpath <- ""//td[.='License:']/following::td[1]""
  lisc <- xml2::xml_text(xml2::xml_find_all(webpage, lisc_xpath))
  
  publ_xpath <- ""//td[.='Published:']/following::td[1]""
  publ <- xml2::xml_text(xml2::xml_find_all(webpage, publ_xpath))

# some of the code snipped out here
  
  return(list(Package = x$name, Version = x$version, Title = title,  Author = auth, Depends = depn,
              Description = desc, License = lisc, Imports = impr, Maintainer = main, Packaged = publ)) 
}
```

What do you think?","ghost",227,221
"Refactoring issue","https://github.com/openpharma/visR/issues/96","closed",2020-11-08,2021-03-03,2021-03-03,2,"Renamed the parameter ""groupCols"" in the functions to create and render a table_one with ""group_cols"". However, the html in the docs folder remain unchanged. 

Any idea why?
","rebecca-albrecht",115,0
"Question about titles and footnotes in the body of the document","https://github.com/atorus-research/pharmaRTF/issues/4","open",2020-11-10,2020-11-10,NA,1,"Hi Eli,

This is a really great package!  
However, my company standards dictate that 
>  outputs must not include any text in the header or footer, as they are reserved for regulatory publishing.

Is is possible to do this with pharmaRTF now?  Or could it be sometime in the future?

Thanks!","ghost",223,223
"ae table in clinical trials formats wrong due to indent_mod","https://github.com/Roche/rtables/issues/132","closed",2020-11-11,2020-11-12,2020-11-12,1,"","waddella",1,0
"make_pagdf has wrong indent","https://github.com/Roche/rtables/issues/131","closed",2020-11-11,2020-11-12,2020-11-12,1,"also rename it to `make_row_df`","waddella",1,0
"Update pkg_ref_cache_description.R","https://github.com/pharmaR/riskmetric/pull/179","open",2020-11-12,2021-03-03,NA,2,"issue #178 method for pgk_ref_cache.description.pkg_remote","ghost",221,110
"Error in analyze_colvars for NA column.","https://github.com/Roche/rtables/issues/133","closed",2020-11-16,2020-11-18,2020-11-18,2,"Is it possible to use `analyze_covars` to tabulate `NA` values? I'm not sure how to resolve the error in the example below.

```
library(rtables)

colfuns <- list(
  ""n"" = function(df, ...) {
    in_rows(.list = as.list(df[[""n""]]), .labels = ""X"", .formats = ""xx"")
  },
  ""median"" = function(df, ...) {
    in_rows(.list = as.list(df[[""median""]]), .labels = ""X"", .formats = ""xx.xx"")
  }
)

df <- data.frame(
  n = 1,
  median = NA
)

basic_table() %>%
  split_cols_by_multivar(vars = c(""n"", ""median"")) %>%
  analyze_colvars(colfuns) %>%
  build_table(df)

# Works if `median` is not NA
df$median <- 1.234

basic_table() %>%
  split_cols_by_multivar(vars = c(""n"", ""median"")) %>%
  analyze_colvars(colfuns) %>%
  build_table(df)

```

Session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C              LC_PAPER=en_US.UTF-8      
 [8] LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9043 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0   rlang_0.4.6     purrr_0.3.4   
```
","anajens",2,0
"Filtering in attrition returning inconsistent results","https://github.com/openpharma/visR/issues/97","closed",2020-11-18,2020-11-18,2020-11-18,0,"#### Issue description
There seems to be an issue with the attrition code when using logical operators in the filtering strings. The table does not return correct N's


#### Steps to reproduce the issue

Please share code if possible.

```r
data(lung)
lung_cohort <- lung %>% 
    dplyr::rename(ECOG = ph.ecog,
                  Karnofsky = ph.karno,
                  SITEID = inst,
                  CNSR = status,
                  AVAL = time,
                  WEIGHT = wt.loss
                 ) %>% 
    dplyr::mutate(USUBJID = sprintf(""Pat%03d"", row_number()),
                  SEX = factor(if_else(sex == 1, ""male"", ""female"")),
                  CNSR = if_else(CNSR == 2, 1, 0),
                  SUBGR1 = factor(case_when(ECOG == 0 ~ ""0 asymptomatic"",
                                            ECOG == 1 ~ ""1 ambulatory"",
                                            ECOG == 2 ~ ""2 in bed less than 50% of day"",
                                            ECOG == 3 ~ ""3 in bed more than 50% of day"",
                                            ECOG == 4 ~ ""4 bedbound"",
                                            ECOG == 5 ~ ""5 dead"")
                                 ),
                  AGEGR1 = factor(case_when(age < 30 ~ ""< 30y"",
                                            age >= 30 & age <= 50 ~ ""30-50y"",
                                            age > 50 & age <= 70 ~ ""51-70y"",
                                            age > 70 ~ ""> 70y""),
                                  levels=c(""< 30y"", ""30-50y"", ""51-70y"", ""> 70y"")
                                 )
                 ) 
cohort_attrition <- vr_attrition_table(
  data = lung_cohort,
  criteria_descriptions = c(""1. ECOG available"", 
                            ""2. Weight loss data available"", 
                            ""3. Non-missing censoring status"",
                            ""4. Positive follow up time"",
                            ""5. Meal Cal (missing or  > 1000""),
  criteria_conditions   = c(""!is.na(SUBGR1)"",
                            ""!is.na(WEIGHT)"",
                            ""!is.na(CNSR)"",
                            ""AVAL >= 0"",
                            ""is.na(meal.cal) | meal.cal >= 1000""),
  subject_column_name   = 'USUBJID')
```
returns 132 patients after all filtering.


#### What's the expected result?

```
lung_cohort %>%
  dplyr::filter(!is.na(SUBGR1),
                !is.na(WEIGHT),
                !is.na(CNSR),
                 AVAL >= 0) %>% 
  dplyr::filter(is.na(meal.cal) | meal.cal >= 1000)
```

This returns a dataframe with 124 rows and not 132.

#### What's the actual result?


#### Additional details / screenshot
![image](https://user-images.githubusercontent.com/3072980/99518425-d590d400-2990-11eb-897f-5ab1decb35d3.png)
","cschaerfe",0,0
"Fixed issue #97. Attrition table not calculated properly","https://github.com/openpharma/visR/pull/98","closed",2020-11-18,2021-03-03,2020-11-18,0," due to an error in operator precedence. Specifically, conditions where added to a string in the form ""c1 & c2"" but single conditions were not put into brackets. In a condition included another binary operator, e.g. c1 = a1 | a2, then the string would be a1 | a2 & c2. Now it should correctly be (a1 | a2) & c2.

Fixes https://github.com/openpharma/visR/issues/97","rebecca-albrecht",0,-105
"How to add line break in rtable headers?","https://github.com/Roche/rtables/issues/134","closed",2020-11-24,2021-05-28,2021-05-28,5,"Is it possible to add line breaks in rtable headers? 

For example, starting with this table...
```
df <- data.frame(
  n = 1,
  median = 10
)

basic_table() %>%
  split_cols_by_multivar(vars = c(""n"", ""median""), varlabels = c(""N"", ""Median (Days)"")) %>%
  analyze_colvars(afun = mean) %>%
  build_table(df)

```
... I would like to be able to control the rtable header so it looks like so:
```
            Median
         n  (Days)
-----------------
mean     1     10
```

When I try inserting `\n`, this gives an error:
```
basic_table() %>%
  split_cols_by_multivar(vars = c(""n"", ""median""), varlabels = c(""n"", ""Median \n (Days)"")) %>%
  analyze_colvars(afun = mean) %>%
  build_table(df)
```
Session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9045 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0   rlang_0.4.6     purrr_0.3.4    
```
","anajens",185,0
"How to change placement of column counts (N) for nested columns?","https://github.com/Roche/rtables/issues/135","open",2020-11-25,2021-04-13,NA,5,"For nested column splits, Is it possible to add the column counts `N` to the highest-level column? For example:
```
basic_table() %>%
  add_colcounts() %>%
  split_cols_by(""ARM"") %>%
  split_cols_by_multivar(c(""AGE"", ""BMRKR1"")) %>%
  analyze_colvars(afun = mean, format = ""xx.x"") %>%
  build_table(DM)
```
Looks like:
```
           A: Drug X          B: Placebo        C: Combination  
         AGE     BMRKR1      AGE     BMRKR1      AGE     BMRKR1 
       (N=121)   (N=121)   (N=106)   (N=106)   (N=129)   (N=129)
----------------------------------------------------------------
mean    34.9       5.8       33        6.1      34.6       5.7  
```

I would like the (N=xx) row to be under the ""ARM"" column headings like so:
```
           A: Drug X          B: Placebo        C: Combination  
             (N=121)            (N=106)            (N=129) 
         AGE     BMRKR1      AGE     BMRKR1      AGE     BMRKR1 
----------------------------------------------------------------
mean    34.9       5.8       33        6.1      34.6       5.7  
```

Session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9045 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0   rlang_0.4.6     purrr_0.3.4 
```","anajens",208,69
"Pruning tables that contain empty row splits?","https://github.com/Roche/rtables/issues/136","closed",2020-11-25,2020-12-01,2020-12-01,1,"In the following example there is a row split by a value (""ABC"") that does not exist in the `COUNTRY` variable.
```
ANL <- DM
ANL$COUNTRY <- as.character(ANL$COUNTRY)

lyt <- basic_table() %>%
  analyze(""AGE"") %>%
  split_rows_by(""COUNTRY"", split_fun = keep_split_levels(""ABC"")) %>%
  analyze(""AGE"")

result <-  build_table(lyt, df = ANL)

result
```
Here is `lyt`:
```
A Pre-data Table Layout

Column-Split Structure:
( () ->  () -> ) () 

Row-Split Structure:
AGE (** analysis **) 
COUNTRY (lvls) -> AGE (** analysis **) 
```

The result is generated and looks like this:
```
       all obs
--------------
Mean    34.22 
```

However, when I try to combine multiple tables I get an error:
```
cbind_rtables(result, result)
```

Does this look like a bug? Pruning `result` allows me to combine the tables but I'm wondering if perhaps the pruning should happen by default?

```
result2 <- prune_table(result)
cbind_rtables(result2, result2)
```


Session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C              LC_PAPER=en_US.UTF-8      
 [8] LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9045 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0   rlang_0.4.6     purrr_0.3.4  
```
","anajens",6,0
"Refactoring tables","https://github.com/openpharma/visR/pull/99","closed",2020-11-25,2021-03-03,2021-02-10,0,"Refactoring of the render_table functionality.","rebecca-albrecht",77,-21
"make_afun labels get over-written","https://github.com/Roche/rtables/issues/137","closed",2020-11-26,2020-11-27,2020-11-27,1,"When creating a layout in a loop, I would like to be able to set labels explicitly with `make_afun`.  However, it looks like the labels get over-written.

Example:
```
dummy_stats_function <- function(x) {
  list(""s_mean"" = mean(x))
}

dummy_layout <- function(lyt, vv) {
  
  for (i in seq_along(vv)) {
    
    afun <- make_afun(
      dummy_stats_function,
      .stats = ""s_mean"",
      .labels =  c(s_mean = vv[i]), #set labels here to match variable name
      .formats = c(s_mean = ""xx.x"")
    )
    
    lyt <- analyze(
      lyt,
      vars = vv[i],
      afun = afun,
      show_labels = ""visible""
    )
  }

  lyt
}


basic_table() %>%
  split_cols_by(""ARM"") %>%
  dummy_layout(vv = c(""BMRKR1"", ""AGE"")) %>%
  build_table(DM)
```

Result:
```
         A: Drug X   B: Placebo   C: Combination
------------------------------------------------
BMRKR1                                          
  AGE       5.8         6.1            5.7      
AGE                                             
  AGE      34.9          33            34.6  
```
In the second row, the label should be ""BMRKR1"" instead of ""AGE"".

Session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9045 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0   rlang_0.4.6     purrr_0.3.4
```","anajens",1,0
"create a paginate function that is simple (currently just for rows)","https://github.com/Roche/rtables/issues/138","closed",2020-12-02,2021-04-21,2021-04-21,1,"","waddella",140,0
"Is it possible to call `summarize_row_groups` after `analyze`?","https://github.com/Roche/rtables/issues/139","closed",2020-12-03,2020-12-03,2020-12-03,2,"In the following example, `summarize_row_groups` result is not displayed in the table when it's after `analyze`.  Is this the expected behaviour?

```
basic_table() %>%
  analyze(""AGE"", afun = list_wrap_x(summary) , format = ""xx.xx"") %>%
  summarize_row_groups(label_fstr = ""%s (n)"") %>%
  build_table(DM)
```

Switching the order so that `summarize_row_groups` is first produces the row with `(n)`.

```
basic_table() %>%
  summarize_row_groups(label_fstr = ""%s (n)"") %>%
  analyze(""AGE"", afun = list_wrap_x(summary) , format = ""xx.xx"") %>%
  build_table(DM)
```

Session info:
```

R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.3 magrittr_1.5 

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0   rlang_0.4.6     purrr_0.3.4

```","anajens",0,0
"cbind_rtables error","https://github.com/Roche/rtables/issues/142","closed",2020-12-04,2020-12-11,2020-12-11,7,"Hi @gmbecker, would you please help troubleshoot the code below for cbind_rtables? I think the error may be related to having row splits that don't exist in the analysis data. Is it bad practice to build layouts like this? 

```
df <- data.frame(
  arm = factor(c(""A"", ""B"")),
  n = c(101, 102),
  n_rsp = 0.1, 0.2,
  row_type = factor(c(""content"", ""content""), levels = c(""content"", ""analysis"")),
  var_label = c(""All"", ""All""),
  stringsAsFactors = FALSE
)

afun_lst <- list(
  n = function(df, labelstr = """", ...) {
    in_rows(.list = as.list(df[[""n""]]), .labels = ""row1"", .formats = ""xx"")
  },
  n_rsp = function(df, labelstr = """", ...) {
    in_rows(.list = as.list(df[[""n_rsp""]]), .labels = ""row1"", .formats = ""xx.x%"")
  }
)

# Make simple table.
t1 <- basic_table() %>%
  split_cols_by(""arm"") %>%
  split_cols_by_multivar(vars = c(""n"", ""n_rsp""), varlabels = c(""N"", ""Rsp %"")) %>%
  split_rows_by(""row_type"", split_fun = keep_split_levels(""content""), nested = FALSE, child_labels = ""hidden"") %>%
  analyze_colvars(afun = afun_lst) %>%
  build_table(df)

# This works.
cbind_rtables(t1, t1)

# Same table visually but now layout has dummy row split + dummy analyze not found in the data.
t2 <- basic_table() %>%
  split_cols_by(""arm"") %>%
  split_cols_by_multivar(vars = c(""n"", ""n_rsp""), varlabels = c(""N"", ""Rsp %"")) %>%
  split_rows_by(""row_type"", split_fun = keep_split_levels(""content""), nested = FALSE, child_labels = ""hidden"") %>%
  analyze_colvars(afun = afun_lst) %>%
  split_rows_by(""row_type"", split_fun = keep_split_levels(""analysis""), nested = FALSE, child_labels = ""hidden"") %>%
  split_rows_by(var = ""var_label"", nested = TRUE) %>%
  analyze_colvars(afun = afun_lst) %>%
  build_table(df)

# This gives an error.
cbind_rtables(t2, t2)
```
This is the error:
```
Error in (new(""standardGeneric"", .Data = function (..., deparse.level = 1)  : 
  number of columns of matrices must match (see arg 3)
```

```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C              LC_PAPER=en_US.UTF-8      
 [8] LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.3 magrittr_1.5 

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    forcats_0.5.0   digest_0.6.25   packrat_0.5.0   rlang_0.4.6     purrr_0.3.4
```","anajens",7,0
"invalid object for slot ""counts"" in class ""InstantiatedColumnInfo""","https://github.com/Roche/rtables/issues/140","closed",2020-12-04,2020-12-04,2020-12-04,2,"In the latest version I find this error which breaks a test:

```r
library(rtables)
sfun <- function(df, ...) {
  as.list(df)
}
afun <- make_afun(
  sfun,
  .labels = c(a = ""A"")
)

df <- data.frame(a = 1, b = 2, c = 3, d = 4)
lyt <- basic_table() %>%
  add_overall_col(label = ""Diagnostic statistic value"") %>%
  analyze(vars = ""a"", afun = afun)
build_table(lyt, df)
```

gives 

```r
Error in validObject(.Object) : 
  invalid class “InstantiatedColumnInfo” object: invalid object for slot ""counts"" in class ""InstantiatedColumnInfo"": got class ""list"", should be or extend class ""integer""
```

I tried to work around it briefly but could not. Seems like internally the integer vector is erroneously converted into a list which then fails the validation method.

Session info: - note that the rtables version is reported as 9048 but actually it should be corrected in the DESCRIPTION to 9049.

```r
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8       
 [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C              
[10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.2.17.9048 magrittr_1.5         

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0  
[7] rlang_0.4.6     purrr_0.3.
```","danielinteractive",0,0
"Make `sort_at_path` return an empty table instead of failing.","https://github.com/Roche/rtables/pull/141","closed",2020-12-04,2020-12-08,2020-12-08,1,"Previously `sort_at_path` just failed with an error. I think it makes sense to just return an empty table immediately since nothing can be further sorted in an empty table.

Note: This failing currently blocks our internal development. So we should get this or another solution.","danielinteractive",4,0
"Add options to `remove_split_levels()`.","https://github.com/Roche/rtables/pull/143","closed",2020-12-06,2020-12-08,2020-12-07,0,"This PR
- fixes `remove_split_levels`, as before it did not correctly remove a split level from the resulting table.
- adds option `drop_levels` to it
- adds option `keep_order` to it
Note that this is backwards compatible, i.e. default behavior is the same as originally. The new options are important for some tables we are working on and since we need internal rtables functions, and the options seem generally useful, a PR to rtables seems best here.","danielinteractive",1,-1
"cell_value error","https://github.com/Roche/rtables/issues/145","closed",2020-12-06,2020-12-08,2020-12-08,0,"@gmbecker I get an error with the following code:

```r
tbl <- basic_table() %>%
   split_cols_by(""ARM"") %>%
   analyze(c(""SEX"", ""AGE"")) %>%
   build_table(ex_adsl)

cell_values(tbl, c(""AGE"", ""Mean""),  c(""ARM"", ""B: Placebo"")) 
```
","waddella",2,0
"delete redesign folder","https://github.com/Roche/rtables/issues/144","closed",2020-12-06,2020-12-07,2020-12-07,0,"@gmbecker I am OK to delete the `redesign` folder. Please have a quick look and if you don't see any issue please delete the folder","waddella",1,0
"Table structure","https://github.com/Roche/rtables/pull/146","closed",2020-12-06,2020-12-07,2020-12-07,0,"@gmbecker, please have a look. I have worked on documentation and on the structure summaries. 

Especially have a look at the pkgdown website.

The `col_paths_summary` function needs work (i.e. I think the `make_col_df` needs more work first)","waddella",1,0
"Improve error message","https://github.com/Roche/rtables/issues/147","closed",2020-12-09,2020-12-09,2020-12-09,1,"Reproducible example (using rcd package):
```
ADSL <- radsl(cached = TRUE)

ADSL_FILTERED <- ADSL

ANL_1 <- ADSL_FILTERED %>% dplyr::select(STUDYID, USUBJID, SEX)
ANL <- ANL_1
ANL <- ANL %>% rtables::var_relabel(
  USUBJID = ""Unique Subject Identifier"",
  SEX = ""Sex""
)
lyt <- rtables::basic_table() %>%
  rtables::split_cols_by(
    ""SEX"",
    split_fun = rtables::add_overall_level(
      label = ""Total"",
      first = FALSE
    )
  ) %>%
  rtables::add_colcounts() %>%
  tern::summarize_vars(
    vars = ""USUBJID"",
    var_labels = c(USUBJID = ""USUBJID""),
    na.rm = TRUE,
    denom = ""N_col"",
    .stats = c(""n"", ""mean_sd"", ""median"", ""range"", ""count_fraction"")
  )
tbl <- rtables::build_table(
  lyt = lyt,
  df = ANL[order(ANL[[""SEX""]]), ]
)
```

Error message:
```
length(unqlens) == 1 || (0 %in% unqlens && length(unqlens) ==  .... is not TRUE
```

Either improve error message or make it work. To be honest I don't see the reason why it shouldn't work. I would expect a table with a lot of 0s and few 1s","pawelru",0,0
"Add `.df_col` as rtables argument for `analyze()`.","https://github.com/Roche/rtables/pull/150","open",2020-12-11,2021-04-26,NA,4,"This addresses a need we identified in https://github.com/Roche/rtables/issues/117.

It would be great if you could have a look at this. One problem is here still that
it only works when there is a single column split. It does not work correctly when there are two or more column splits. Maybe there is a simple way to make it work?...","danielinteractive",192,56
"append_topleft labels dropped when table column is extracted","https://github.com/Roche/rtables/issues/148","closed",2020-12-11,2020-12-11,2020-12-11,1,"Please see example below.

```
library(rtables)

lyt <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  analyze(""AGE"") %>%
  append_topleft(""LABEL"")

result <- build_table(lyt, DM)

result
result[,1]

```

```
> result
LABEL   A: Drug X   B: Placebo   C: Combination
-----------------------------------------------
Mean      34.91       33.02          34.57     
> result[,1]
       A: Drug X
----------------
Mean     34.91  
```

Session Info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.3 magrittr_1.5 

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   rlang_0.4.6
```","anajens",0,0
"Missing split row label with `<>`","https://github.com/Roche/rtables/issues/149","closed",2020-12-11,2020-12-15,2020-12-15,5,"Example: 
```
df <- data.frame(
  h1 = factor(c(""Missing"")),
  h2 = factor(c(""<Missing>"")),
  x = factor(c(""<Missing>""))
)

t1 <- basic_table() %>%
  split_rows_by(""h1"") %>%
  analyze(""x"") %>%
  build_table(df)

t2 <- basic_table() %>%
  split_rows_by(""h2"") %>%
  analyze(""x"") %>%
  build_table(df)

t1
t2
```

Results:
```
> t1

              all obs
---------------------
Missing              
  <Missing>      1   


> t2
              all obs
---------------------
                     
  <Missing>      1  
```

SessionInfo:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.3 magrittr_1.5 

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   rlang_0.4.6  
```
","anajens",4,0
"Aw docs","https://github.com/Roche/rtables/pull/153","closed",2020-12-13,2020-12-15,2020-12-15,0,"","waddella",2,0
"cell_values drop list if complete path to cell","https://github.com/Roche/rtables/issues/151","closed",2020-12-13,2020-12-17,2020-12-17,2,"@gmbecker, for the code

```r
library(dplyr)

l <- basic_table() %>% split_cols_by(""ARM"") %>%
  split_cols_by(""SEX"") %>%
  split_rows_by(""RACE"") %>%
  summarize_row_groups() %>%
  split_rows_by(""STRATA1"") %>%
  analyze(""AGE"")


tbl <- build_table(l, DM %>% mutate(SEX = droplevels(SEX), RACE = droplevels(RACE)))

row_paths_summary(tbl)
col_paths_summary(tbl)

cell_values(tbl, c(""RACE"", ""ASIAN"", ""STRATA1"", ""B""), c(""ARM"", ""A: Drug X"", ""SEX"", ""F""))
```

the row and col paths are full paths to a cell however the return value is a list instead of only the nubmer.

I think that if both row and col paths are such that they determine a single cell we should drop the list, do you agree? If so, would you mind adding that to cell_values?
","waddella",4,0
"list of minor issues","https://github.com/Roche/rtables/issues/152","closed",2020-12-13,2021-04-26,2021-04-26,2,"# Today

## Adrian
- [x] Remove Rendering Vignette
- [x] Remove Table Pagination
- [x] Viewer

## Gabe
- [x]  `value_at(tbl, c(""AGE"", ""mean""), ""ARM A"")`
            - this needs to throw an error and reference to cell_values if paths are not complete > to leafs 
            - [ ] add usage to `value_at`
- [x] `tail` warning (in R >4)
   ![image](https://user-images.githubusercontent.com/7786462/102015495-45aa3400-3d5c-11eb-84b1-e1c32df4d024.png)
- [x] print method for `RowsVerticalSection`

# Tasks For Backlog

- `simple_analysis` only returns the `mean` for continuous variables, should we add `range`, `median`, `sd`, etc?
    - next release

- [x] examples in `analyze_colvars` & `split_cols_by_multivar` gives a weird table
   - rcell used instead of inrows, ADRIAN fixes it
  
- add meaningful example for `split_cols_by_cutfun` and `split_rows_by_cutfun`

-  in `add_overall_level` examples, how do we compound the split functions (with `drop_split_levels`)
            - next release
          
- `add_overall_col` should we deprecate? 

 
- add example for `reorder_split_levels` and `trim_levels_in_group`

- [x]  address in tests
   ![image](https://user-images.githubusercontent.com/7786462/102220216-cd20b000-3ee0-11eb-840d-be8a24fd1f15.png)


    ```
    docker run -ti rocker/tidyverse:4.0.1 /bin/bash
    git clone -b gabe_tabletree_work https://github.com/Roche/rtables.git
    R CMD build --no-build-vignettes rtables
    R CMD check --no-manuals --no-vignettes rtables_*
   ```
   clone rtables, test...



* Remove?
  - `rbindl_rtables` -- seams to be needed by `rbind`
  - `rbind2`  -- is used in isert_row
  - [x] `rtabulate`, `by_all`, `by_add_total`, `by_quartile`
  - [ ] `rrowl`
  - [x] `header_add_N`
  - [x] `header<-` & `header`
  -  `insert_rrow` -- is needed
  - `indent` is needed by `isert_rrow`
  - `list_wrap_x` -- needed
  - [x] `label`
  - [x] `indented_row.names`


# Discussion Points

- [x] add a print invocation in tests

- [x] table_structure <- function(x, expand = TRUE) {
- [x] examples setMethod(""[<-"", c(""VTableTree"", val

","waddella",134,0
"character column split variable can easily lead to wrong column counts assignment","https://github.com/Roche/rtables/issues/154","closed",2020-12-14,2020-12-16,2020-12-16,4,"Hi Gabe,

we found the following issue in the latest rtables:

```r
col_counts <- c(`ARM A` = 103L, `ARM B` = 98L, `ARM C` = 94L)
df_factor <- data.frame(ARM = c(""ARM C"", ""ARM B"", ""ARM A""), stringsAsFactors = TRUE)
df_character <- data.frame(ARM = c(""ARM C"", ""ARM B"", ""ARM A""), stringsAsFactors = FALSE)

lyt <- basic_table() %>%
  split_cols_by(var = ""ARM"") %>%
  add_colcounts()

result_factor <- build_table(
  lyt = lyt,
  df = df_factor,
  col_counts = col_counts
)
result_factor

result_character <- build_table(
  lyt = lyt,
  df = df_character,
  col_counts = col_counts
)
result_character
```

Here `result_character` puts the ""ARM C"" first (apparently because it first appears in the data set) but still puts the column count for ""ARM A"" in the first column. 
Most users would expect that 1) the column order is according to a default factor conversion, i.e. having ""ARM A"" in the first column and 2) using provided names in `col_counts` to match with the columns. Not sure if that would be easy to fix? Thanks, cheers, Daniel","danielinteractive",2,0
"make_col_df has wrong paths","https://github.com/Roche/rtables/issues/155","closed",2020-12-14,2020-12-15,2020-12-15,1,"@gmbecker, I am working on `col_paths_summary`

```r
library(rtables)
library(dplyr)

tbl2 <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  split_cols_by(""SEX"", split_fun = drop_split_levels) %>%
  analyze(c(""AGE"", ""STRATA1"")) %>%
  build_table(ex_adsl %>% filter(SEX %in% c(""M"", ""F"")))

tbl2

pagdf <- make_col_df(x, visible_only = FALSE)[-1, ] # todo why
row.names(pagdf) <- NULL

mat <- rbind(
  c(""label"", ""path""),
  t(apply(pagdf, 1, function(xi) {
    c(
      indent_string(xi$label, floor(length(xi$path)/2 - 1)),
      paste(xi$path, collapse = "", "")
    )
  }))
)

txt <- rtables:::mat_as_string(mat)
cat(txt)
cat(""\n"")
```

rerturns

```
label             path                               
-----------------------------------------------------
A: Drug X         ARM, A: Drug X, A: Drug X          
  F               ARM, A: Drug X, SEX, F             
  M               ARM, A: Drug X, SEX, M             
B: Placebo        ARM, B: Placebo, B: Placebo        
  F               ARM, B: Placebo, SEX, F            
  M               ARM, B: Placebo, SEX, M            
C: Combination    ARM, C: Combination, C: Combination
  F               ARM, C: Combination, SEX, F        
  M               ARM, C: Combination, SEX, M       
```

Two issues:

1. the first row of `make_col_df` does not seem to be needed
2. the paths for non leaf columns have the last element twice","waddella",1,0
"Aw prune","https://github.com/Roche/rtables/pull/157","closed",2020-12-15,2020-12-15,2020-12-15,0,"","waddella",0,0
"R CMD check error","https://github.com/Roche/rtables/issues/156","closed",2020-12-15,2020-12-16,2020-12-16,3,"@gmbecker, I get a weird error when running the following test under `R CMD check` (not otherwise). Note that I got this error under R 4.0.1 and R 3.6.3.

```{r}
 test_that(""keeping non-existent levels doesn't break internal machinery"", {
     ANL <- DM
     ANL$COUNTRY <- as.character(ANL$COUNTRY)
 
     sfun = keep_split_levels(""ABC"")
 
 
     lyt <- basic_table() %>%
         analyze(""AGE"") %>%
         split_rows_by(""COUNTRY"", split_fun = sfun) %>%
         summarize_row_groups() %>%
         analyze(""AGE"")
 
     result <- build_table(lyt, df = ANL)
     expect_identical(dim(result), c(3L, 1L))
     expect_identical(row.names(result), c(""Mean"", ""ABC"", ""Mean""))
     cbres <- cbind_rtables(result, result)
     expect_identical(dim(cbres), c(3L, 2L))
     expect_identical(row.names(cbres), c(""Mean"", ""ABC"", ""Mean""))
 
     ## because its a factor and ""ABC"" isn't a real level
     expect_error(build_table(lyt, DM))
 })
```

the error is:

```
E  Running ‘testthat.R’ (7.2s)
   Running the tests in ‘tests/testthat.R’ failed.
   Last 13 lines of output:
             else {
                 lastspn <- cspans[strtncols[i] - 1]
             }
         }
         constr_fun <- get(class(x), mode = ""function"")
         constr_fun(val = vals, cspan = cspans, cinfo = cinfo, var = obj_avar(x), 
             format = obj_format(x), name = obj_name(x), label = obj_label(x))
     }
     <bytecode: 0x55e668d31048>
     <environment: namespace:rtables>
      --- function search by body ---
     Function .combine_rows in namespace rtables has this body.
      ----------- END OF FAILURE REPORT -------------- 
     Error: Test failures
     Execution halted
✓  checking for unstated dependencies in vignettes ...
✓  checking package vignettes in ‘inst/doc’ ...
✓  checking re-building of vignette outputs (15.5s)
✓  checking for non-standard things in the check directory
✓  checking for detritus in the temp directory
   
   See
     ‘/home/users/waddella/nest_projects/rtables.Rcheck/00check.log’
   for details.
   
── R CMD check results ────────────────────────────────────── rtables 0.3.3 ────
Duration: 1m 6s

> checking tests ...
  See below...

> checking installed package size ... NOTE
    installed size is  6.0Mb
    sub-directories of 1Mb or more:
      R           1.1Mb
      bootstrap   1.6Mb
      data        2.2Mb

── Test failures ───────────────────────────────────────────────── testthat ────

> library(testthat)
> library(xml2)
> library(tibble)
> 
> test_check(""rtables"", reporter = JunitReporter$new(file = ""unit_test_results.xml""))
Loading required package: rtables
Loading required package: magrittr

Attaching package: 'magrittr'

The following objects are masked from 'package:testthat':

    equals, is_less_than, not

        ARM1         ARM2   
----------------------------
M   256 (50.79%)   248 (50%)
F   248 (49.21%)   248 (50%)
   hi   lo
----------
          
 ----------- FAILURE REPORT -------------- 
 --- failure: length > 1 in coercion to logical ---
 --- srcref --- 
: 
 --- package (from environment) --- 
rtables
 --- call from context --- 
.combine_rows(x, cinfo, .list)
 --- call from argument --- 
i > 1 && rawvalues(vy[[1]]) == rawvalues(lastval)
 --- R stacktrace ---
where 1: .combine_rows(x, cinfo, .list)
where 2: recurse_cbindl(x = tree_children(x)[[i]], cinfo = cinfo, .list <- lapply(.list, 
    function(tt) tree_children(tt)[[i]]))
where 3: recurse_cbindl(x = tree_children(x)[[i]], cinfo = cinfo, .list <- lapply(.list, 
    function(tt) tree_children(tt)[[i]]))
where 4: FUN(X[[i]], ...)
where 5: lapply(seq_along(tree_children(x)), function(i) {
    recurse_cbindl(x = tree_children(x)[[i]], cinfo = cinfo, 
        .list <- lapply(.list, function(tt) tree_children(tt)[[i]]))
})
where 6: recurse_cbindl(xcont, .list = lstconts, cinfo = cinfo)
where 7: recurse_cbindl(xcont, .list = lstconts, cinfo = cinfo)
where 8: recurse_cbindl(x = tree_children(x)[[i]], cinfo = cinfo, .list <- lapply(.list, 
    function(tt) tree_children(tt)[[i]]))
where 9: recurse_cbindl(x = tree_children(x)[[i]], cinfo = cinfo, .list <- lapply(.list, 
    function(tt) tree_children(tt)[[i]]))
where 10: FUN(X[[i]], ...)
where 11: lapply(seq_along(tree_children(x)), function(i) {
    recurse_cbindl(x = tree_children(x)[[i]], cinfo = cinfo, 
        .list <- lapply(.list, function(tt) tree_children(tt)[[i]]))
})
where 12: recurse_cbindl(x = tree_children(x)[[i]], cinfo = cinfo, .list <- lapply(.list, 
    function(tt) tree_children(tt)[[i]]))
where 13: recurse_cbindl(x = tree_children(x)[[i]], cinfo = cinfo, .list <- lapply(.list, 
    function(tt) tree_children(tt)[[i]]))
where 14: FUN(X[[i]], ...)
where 15: lapply(seq_along(tree_children(x)), function(i) {
    recurse_cbindl(x = tree_children(x)[[i]], cinfo = cinfo, 
        .list <- lapply(.list, function(tt) tree_children(tt)[[i]]))
})
where 16: recurse_cbindl(x, cinfo = newcinfo, .list = lst)
where 17: recurse_cbindl(x, cinfo = newcinfo, .list = lst)
where 18 at testthat/test-regressions.R#231: cbind_rtables(result, result)
where 19: eval(code, test_env)
where 20: eval(code, test_env)
where 21: withCallingHandlers({
    eval(code, test_env)
    if (!handled && !is.null(test)) {
        skip_empty()
    }
}, expectation = handle_expectation, skip = handle_skip, warning = handle_warning, 
    message = handle_message, error = handle_error)
where 22: doTryCatch(return(expr), name, parentenv, handler)
where 23: tryCatchOne(expr, names, parentenv, handlers[[1L]])
where 24: tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
where 25: doTryCatch(return(expr), name, parentenv, handler)
where 26: tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), 
    names[nh], parentenv, handlers[[nh]])
where 27: tryCatchList(expr, classes, parentenv, handlers)
where 28: tryCatch(withCallingHandlers({
    eval(code, test_env)
    if (!handled && !is.null(test)) {
        skip_empty()
    }
}, expectation = handle_expectation, skip = handle_skip, warning = handle_warning, 
    message = handle_message, error = handle_error), error = handle_fatal, 
    skip = function(e) {
    })
where 29: test_code(desc, code, env = parent.frame())
where 30 at testthat/test-regressions.R#215: test_that(""keeping non-existent levels doesn't break internal machinery"", 
    {
        ANL <- DM
        ANL$COUNTRY <- as.character(ANL$COUNTRY)
        sfun = keep_split_levels(""ABC"")
        lyt <- basic_table() %>% analyze(""AGE"") %>% split_rows_by(""COUNTRY"", 
            split_fun = sfun) %>% summarize_row_groups() %>% 
            analyze(""AGE"")
        result <- build_table(lyt, df = ANL)
        expect_identical(dim(result), c(3L, 1L))
        expect_identical(row.names(result), c(""Mean"", ""ABC"", 
            ""Mean""))
        cbres <- cbind_rtables(result, result)
        expect_identical(dim(cbres), c(3L, 2L))
        expect_identical(row.names(cbres), c(""Mean"", ""ABC"", ""Mean""))
        expect_error(build_table(lyt, DM))
    })
where 31: eval(code, test_env)
where 32: eval(code, test_env)
where 33: withCallingHandlers({
    eval(code, test_env)
    if (!handled && !is.null(test)) {
        skip_empty()
    }
}, expectation = handle_expectation, skip = handle_skip, warning = handle_warning, 
    message = handle_message, error = handle_error)
where 34: doTryCatch(return(expr), name, parentenv, handler)
where 35: tryCatchOne(expr, names, parentenv, handlers[[1L]])
where 36: tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
where 37: doTryCatch(return(expr), name, parentenv, handler)
where 38: tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), 
    names[nh], parentenv, handlers[[nh]])
where 39: tryCatchList(expr, classes, parentenv, handlers)
where 40: tryCatch(withCallingHandlers({
    eval(code, test_env)
    if (!handled && !is.null(test)) {
        skip_empty()
    }
}, expectation = handle_expectation, skip = handle_skip, warning = handle_warning, 
    message = handle_message, error = handle_error), error = handle_fatal, 
    skip = function(e) {
    })
where 41: test_code(NULL, exprs, env)
where 42: source_file(path, new.env(parent = env), chdir = TRUE, wrap = wrap)
where 43: force(code)
where 44: doWithOneRestart(return(expr), restart)
where 45: withOneRestart(expr, restarts[[1L]])
where 46: withRestarts(testthat_abort_reporter = function() NULL, force(code))
where 47: with_reporter(reporter = reporter, start_end_reporter = start_end_reporter, 
    {
        reporter$start_file(basename(path))
        lister$start_file(basename(path))
        source_file(path, new.env(parent = env), chdir = TRUE, 
            wrap = wrap)
        reporter$.end_context()
        reporter$end_file()
    })
where 48: FUN(X[[i]], ...)
where 49: lapply(paths, test_file, env = env, reporter = current_reporter, 
    start_end_reporter = FALSE, load_helpers = FALSE, wrap = wrap)
where 50: force(code)
where 51: doWithOneRestart(return(expr), restart)
where 52: withOneRestart(expr, restarts[[1L]])
where 53: withRestarts(testthat_abort_reporter = function() NULL, force(code))
where 54: with_reporter(reporter = current_reporter, results <- lapply(paths, 
    test_file, env = env, reporter = current_reporter, start_end_reporter = FALSE, 
    load_helpers = FALSE, wrap = wrap))
where 55: test_files(paths, reporter = reporter, env = env, stop_on_failure = stop_on_failure, 
    stop_on_warning = stop_on_warning, wrap = wrap)
where 56: test_dir(path = test_path, reporter = reporter, env = env, filter = filter, 
    ..., stop_on_failure = stop_on_failure, stop_on_warning = stop_on_warning, 
    wrap = wrap)
where 57: test_package_dir(package = package, test_path = test_path, filter = filter, 
    reporter = reporter, ..., stop_on_failure = stop_on_failure, 
    stop_on_warning = stop_on_warning, wrap = wrap)
where 58: test_check(""rtables"", reporter = JunitReporter$new(file = ""unit_test_results.xml""))

 --- value of length: 2 type: logical ---
[1] TRUE TRUE
 --- function from context --- 
function (x, cinfo = NULL, .list) 
{
    stopifnot(are(.list, class(x)))
    avars <- c(obj_avar(x), unlist(lapply(.list, obj_avar), recursive = FALSE))
    if (length(unique(avars)) > 1) 
        stop(""Got rows that don't analyze the same variable"")
    xlst <- c(list(x), .list)
    ncols <- vapply(xlst, ncol, 1L)
    totcols <- sum(ncols)
    cumncols <- cumsum(ncols)
    strtncols <- c(0L, head(cumncols, -1)) + 1L
    vals <- vector(""list"", totcols)
    cspans <- integer(totcols)
    for (i in seq_along(xlst)) {
        strt <- strtncols[i]
        end <- cumncols[i]
        fullvy <- vy <- row_cells(xlst[[i]])
        fullcspy <- cspy <- row_cspans(xlst[[i]])
        if (i > 1 && rawvalues(vy[[1]]) == rawvalues(lastval) && 
            lastspn > 1) {
            vy <- vy[-1]
            cspans[strt - 1L] <- lastspn + cspy[1]
            cspy <- cspy[-1]
            strt <- strt + 1L
        }
        if (length(vy) > 0) {
            vals[strt:end] <- vy
            cspans[strt:end] <- cspy
            lastval <- vy[[length(vy)]]
            lastspn <- cspy[[length(cspy)]]
        }
        else {
            lastspn <- cspans[strtncols[i] - 1]
        }
    }
    constr_fun <- get(class(x), mode = ""function"")
    constr_fun(val = vals, cspan = cspans, cinfo = cinfo, var = obj_avar(x), 
        format = obj_format(x), name = obj_name(x), label = obj_label(x))
}
<bytecode: 0x55e668d31048>
<environment: namespace:rtables>
 --- function search by body ---
Function .combine_rows in namespace rtables has this body.
 ----------- END OF FAILURE REPORT -------------- 
Error: Test failures
Execution halted
```","waddella",1,0
"bug with inclNAs","https://github.com/Roche/rtables/issues/159","closed",2020-12-16,2020-12-17,2020-12-17,0,"Hi @gmbecker,

This one took we a while to figure out, I get this on 

```r
library(rtables)

basic_table() %>%
  split_rows_by(""RACE"") %>%
  analyze(""COUNTRY"", function(x) in_rows(has_na = any(is.na(x))), inclNAs = TRUE) %>%
  build_table(DM)
```

returns

```
                                            all obs
---------------------------------------------------
ASIAN                                              
  has_na                                     FALSE 
BLACK OR AFRICAN AMERICAN                          
  has_na                                     FALSE 
WHITE                                              
  has_na                                     FALSE 
AMERICAN INDIAN OR ALASKA NATIVE                   
  has_na                                     TRUE  
MULTIPLE                                           
  has_na                                     TRUE  
NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER          
  has_na                                     TRUE  
OTHER                                              
  has_na                                     TRUE  
UNKNOWN                                            
  has_na                                     TRUE 
```

on R

```
> sessionInfo()
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 10 (buster)

Matrix products: default
BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/libopenblasp-r0.3.5.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C              LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.3 magrittr_1.5 

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.3      digest_0.6.25   packrat_0.5.0   rlang_0.4.5
```

Note that we would not expect factor `NA`, it should be `factor(0)` as `COUNTRY` does not have any missing data. It seems that the `inclNA` argument is responsible for that. You can re-create the error as follows

```sh
docker run -ti rocker/tidyverse:3.6.3 /bin/bash
git clone -b gabe_tabletree_work https://github.com/Roche/rtables.git
R CMD INSTALL rtables

R
```

and then run the r code

```r
library(rtables)

basic_table() %>%
  split_rows_by(""RACE"") %>%
  analyze(""COUNTRY"", function(x) in_rows(has_na = any(is.na(x))), inclNAs = TRUE) %>%
  build_table(DM)
```","waddella",1,0
"rbind(mtbl, mtbl2, gap = 1)","https://github.com/Roche/rtables/issues/158","closed",2020-12-16,2021-04-28,2021-04-28,0,"#'  # TODO: add functionality
#'  #
#'  # rbind(mtbl, mtbl2, gap = 1)
#'  # rbind(mtbl, mtbl2, gap = 2)","waddella",133,0
"remove `incl_all` argument in `split_cols_by`","https://github.com/Roche/rtables/issues/160","closed",2021-01-11,2021-04-28,2021-04-28,0,"","waddella",107,0
"Tiny CRAN URL fix and version 0.3.5","https://github.com/Roche/rtables/pull/161","closed",2021-01-11,2021-01-11,2021-01-11,0,"","gmbecker",0,0
"Alternate rounding option?","https://github.com/atorus-research/Tplyr/issues/9","closed",2021-01-13,2021-02-09,2021-02-09,5,"Hi Eli and Mike,

I am looking at using Tplyr to validate tables created in SAS

I am not having issues comparing medians and other percentiles because I am using
`options(tplyr.quantile_type = 3)`

But sometimes the data generated by the `group_count()` layer
`set_count_layer_formats(n_counts = f_str(""xx (xxx%)"", n, pct))`
is off by a digit.  And `Proc Compare` throws it out, causing it to ""fail"" validation.

I had been reading this blog by Ali Dootson
[TFL programming in R versus SAS](https://www.d-wise.com/blog/tfl-programming-in-r-versus-sas)

And found a function they wrote that emulates SAS rounding.
```{r, eval=FALSE}
ut_round <- function(x, n=0)
{
 # x is the value to be rounded
 # n is the precision of the rounding
 scale <- 10^n
 y <- trunc(x * scale + sign(x) * 0.5) / scale
 # Return the rounded number
 return(y)
}
```
I have been using this to post-process the Tplyr tibble created and update the `nnn (nnn%)` strings
so I can get `Proc Compare` to accept the results.

Any chance you could come up with an alternate rounding option?
Perhaps something like
`options(tpylr.rounding = {default|SAS}`?

Right now I am only seeing the issue with percentages generated in `group_count()`

Thanks so much!
Robert","Robert-Krajcik",27,0
"Flip coords only for ggplot2 2.x.x, pass correct size argument to JS","https://github.com/Roche/ggtips/pull/59","closed",2021-01-20,2021-01-21,2021-01-21,1,"","marcin-kam",1,0
"Remove codecov for CI/CD","https://github.com/pharmaR/riskmetric/issues/180","closed",2021-01-20,2021-02-04,2021-02-04,1,"","elong0527",15,0
"riskmetric v0.1.0 CRAN release check list ","https://github.com/pharmaR/riskmetric/issues/182","closed",2021-01-20,2021-05-26,2021-05-26,7,"- [x] double check package dependency
- [x] Polish NEWS
- [x] Polish pkgdown reference index
- [x] confirm package author list 
- [x] confirm package version 
- [x] devtools::check()
- [x] devtools::check_win_devel()
- [x] rhub::check_for_cran()
- [x] add cran-comments.md file. 
","elong0527",126,0
"test CI/CD","https://github.com/pharmaR/riskmetric/pull/181","closed",2021-01-20,2021-01-20,2021-01-20,1,"only used to test CI/CD for codecov. Please not merge.","elong0527",0,0
"tally_coverage","https://github.com/pharmaR/riskmetric/issues/183","closed",2021-01-25,2021-03-16,2021-03-16,1,"The `by` options seems not allow `function`

https://www.rdocumentation.org/packages/covr/versions/3.5.1/topics/tally_coverage

https://github.com/pharmaR/riskmetric/blob/4621cc7705838746917a9684171f94639cc4a198/R/pkg_ref_cache_function_coverage.R#L12","elong0527",50,0
"Add functionality for passing 'source' to pkg_ref","https://github.com/pharmaR/riskmetric/pull/184","closed",2021-01-27,2021-03-16,2021-03-16,4,"Issue #177. Add options to set 'source' when creating package references.

## Description
This PR adds functionality to pass a character vector to the `pkg_ref` to specify a source.

## Example
```
ref <- pkg_ref(""dplyr"", source = ""pkg_remote"")
```

## Tests added
Tests were added to make sure the right option is selected by default and can be changed. Also tests support for multiple packages with different sources.","elimillera",48,0
"get_summary","https://github.com/openpharma/visR/issues/100","closed",2021-01-29,2021-03-03,2021-03-03,1,"#### Issue description

""LCL"", ""UCL"" and ""CI"" are allowed to be part of the statlist argument in the get_summary function, and by default all three are.
When CL or CI are a part if the statlist (l.55-61) ...
(""conf.int"" %in% names(survfit_object) &
      survfit_object[[""conf.type""]] != ""none"" &
      ((base::any(grepl(
        ""CL"", statlist, fixed = TRUE
      ))) | (base::any(grepl(
        ""CI"", statlist, fixed = TRUE
      )))))
...they are changed to something like ""0.95CI"" or ""0.95CL"". And this happens also if only one of these stats is there (l.62-67):
CI <-
      paste0(survfit_object[[""conf.int""]], statlist[grepl(""CL"", statlist, fixed = TRUE)])
    statlist[grepl(""CL"", statlist, fixed = TRUE)] <- CI
    CI_Varname <-
      paste0(survfit_object[[""conf.int""]], statlist[grepl(""CI"", statlist, fixed = TRUE)])
    statlist[grepl(""CI"", statlist, fixed = TRUE)] <- CI_Varname

In line 99 then CI_Varname is used independently of whether it was set or not (see condition l.55-61).

#### Steps to reproduce the issue
#works:
get_summary(survfit_object)

#breaks sometimes; cannot reproduce:
get_summary(survfit_object, statlist = c('median'))

#breaks always
get_summary(survfit_object, statlist = c('events', 'median', 'CI'))
--> Error: Problem with `mutate()` input `0.95CI`.
x undefined columns selected
i Input `0.95CI` is `.CIpaste(.)`.

","rebecca-albrecht",33,0
"Add functionality to split sub-tables by page","https://github.com/Roche/rtables/issues/163","open",2021-02-01,2021-03-03,NA,2,"Would it be possible to define the concept of splitting by a ""page"" variable in table layouts?

This would be similar to existing `split_col_by` and `split_row_by` with the following requirements:

- Display variable level in the header of the sub-table (eg ""ARM: A: Drug X"" in example below).
- When printing the table, introduce page breaks when the level of the split variable changes.

Some sample code to do this could look like:
```
basic_table() %>%
  split_rows_by(""ARM"", type = ""page"") %>%
  split_rows_by(""COUNTRY"") %>%
  analyze(""AEBODSYS"") %>%
  build_table(adae)
```

```
ARM: A: Drug X
------------------------
  Country        all obs
------------------------
  CHN                   
    cl A.1         81   
    cl B.1         33   
    cl B.2         75   
    cl C.1         39   
    cl C.2         32   
    cl D.1         82   
    cl D.2         36   
  USA                   
    cl A.1          9   
    cl B.1          2   
    cl B.2          9 
```","anajens",140,110
"How to interleave subtables?","https://github.com/Roche/rtables/issues/162","closed",2021-02-01,2021-04-07,2021-04-07,1,"Would it be possible for `rtables` to support functionality to interleave a series of sub-tables from multiple datasets?

![image](https://user-images.githubusercontent.com/43623360/106473798-38631900-6472-11eb-94e3-b5457fca0fe8.png)

Here's an example:
```
library(rtables)
library(dplyr)

adsl <- ex_adsl
adae <- ex_adae


t1 <- basic_table() %>%
  split_rows_by(""COUNTRY"", split_fun = keep_split_levels(only = ""CHN"")) %>%
  analyze(""AGE"") %>%
  split_rows_by(""STRATA1"", split_fun = keep_split_levels(only = ""A"")) %>%
  analyze(""AGE"") %>%
  split_rows_by(""STRATA2"", split_fun = keep_split_levels(only = ""S2"")) %>%
  analyze(""AGE"") %>%
  build_table(adsl)


t2 <- basic_table() %>%
  split_rows_by(""COUNTRY"", split_fun = keep_split_levels(only = ""CHN"")) %>%
  analyze(""AEDECOD"") %>%
  split_rows_by(""STRATA1"", split_fun = keep_split_levels(only = ""A"")) %>%
  analyze(""AEDECOD"") %>%
  split_rows_by(""STRATA2"", split_fun = keep_split_levels(only = ""S2"")) %>%
  analyze(""AEDECOD"") %>%
  build_table(adae)

```

Here's t1
```
         all obs
----------------
CHN             
  Mean    34.64 
A               
  Mean    34.19 
S2              
  Mean    34.41 
```

And t2
```
                  all obs
-------------------------
CHN                      
  dcd A.1.1.1.1     115  
  dcd A.1.1.1.2     108  
  dcd B.1.1.1.1     105  
  dcd B.2.1.2.1     95   
  dcd B.2.2.3.1     121  
  dcd C.1.1.1.3     107  
  dcd C.2.1.2.1     88   
  dcd D.1.1.1.1     115  
  dcd D.1.1.4.2     98   
  dcd D.2.1.5.3     109  
A                        
  dcd A.1.1.1.1     59   
  dcd A.1.1.1.2     60   
  dcd B.1.1.1.1     68   
  dcd B.2.1.2.1     61   
  dcd B.2.2.3.1     72   
  dcd C.1.1.1.3     54   
  dcd C.2.1.2.1     46   
  dcd D.1.1.1.1     48   
  dcd D.1.1.4.2     57   
  dcd D.2.1.5.3     65   
S2                       
  dcd A.1.1.1.1     122  
  dcd A.1.1.1.2     123  
  dcd B.1.1.1.1     89   
  dcd B.2.1.2.1     106  
  dcd B.2.2.3.1     124  
  dcd C.1.1.1.3     102  
  dcd C.2.1.2.1     89   
  dcd D.1.1.1.1     85   
  dcd D.1.1.4.2     101  
  dcd D.2.1.5.3     111  
```
Ideal result looks like this:
```
                  all obs
-------------------------
CHN
  Mean    34.64                       
  dcd A.1.1.1.1     115  
  dcd A.1.1.1.2     108  
  dcd B.1.1.1.1     105  
  dcd B.2.1.2.1     95   
  dcd B.2.2.3.1     121  
  dcd C.1.1.1.3     107  
  dcd C.2.1.2.1     88   
  dcd D.1.1.1.1     115  
  dcd D.1.1.4.2     98   
  dcd D.2.1.5.3     109  
A                        
  Mean    34.19 
  dcd A.1.1.1.1     59   
  dcd A.1.1.1.2     60   
  dcd B.1.1.1.1     68   
  dcd B.2.1.2.1     61   
  dcd B.2.2.3.1     72   
  dcd C.1.1.1.3     54   
  dcd C.2.1.2.1     46   
  dcd D.1.1.1.1     48   
  dcd D.1.1.4.2     57   
  dcd D.2.1.5.3     65   
S2                       
  Mean    34.41 
  dcd A.1.1.1.1     122  
  dcd A.1.1.1.2     123  
  dcd B.1.1.1.1     89   
  dcd B.2.1.2.1     106  
  dcd B.2.2.3.1     124  
  dcd C.1.1.1.3     102  
  dcd C.2.1.2.1     89   
  dcd D.1.1.1.1     85   
  dcd D.1.1.4.2     101  
  dcd D.2.1.5.3     111  
```","anajens",65,0
"convert from `read_html` to `httr::content(httr::GET())` for unit testing","https://github.com/pharmaR/riskmetric/issues/186","open",2021-02-03,2021-02-04,NA,1,"We can pull this in before we look toward testing it, but eventually we'll need to replace `read_html` with `httr::content(httr:GET(...))` in order to intercept web requests with `webmockr`.

_Originally posted by @dgkf in https://github.com/pharmaR/riskmetric/pull/170#discussion_r511636858_","emilliman5",138,137
"Update pkg_ref_cache_function_coverage.R","https://github.com/pharmaR/riskmetric/pull/185","closed",2021-02-03,2021-03-31,2021-03-09,3,"","elong0527",34,-22
"Fix cicd - only CICD logic effected","https://github.com/openpharma/visR/pull/102","closed",2021-02-04,2021-03-01,2021-02-04,0,"","epijim",0,-25
"Fix the broken CICD","https://github.com/openpharma/visR/issues/101","closed",2021-02-04,2021-05-21,2021-05-21,6,"#### Issue description

Current CICD doesn't work... fix it.

#### Steps to reproduce the issue

Push a commit and Github actions doesnt work

#### What's the expected result?

- [x] build and deploy docs
- [x] README.rmd is built automatically
- [x] check windows
- [x] check ubuntu
- [x] check osx
- [x] calculate code coverage","epijim",106,0
"Devel","https://github.com/openpharma/simaerep/pull/5","closed",2021-02-05,2021-02-05,2021-02-05,1,"","erblast",0,0
"Add function to get activity, and function to make waffle plot","https://github.com/openpharma/GithubMetrics/issues/1","open",2021-02-06,2021-02-07,NA,2,"See: https://vuorre.netlify.app/post/2016/03/24/github-style-waffle-plots-in-r/","epijim",135,134
"`.in_ref_row` variable passed to `analyze` & co.","https://github.com/Roche/rtables/issues/165","open",2021-02-08,2021-04-28,NA,4,"Issue originally reported by @danielinteractive 

It would be good to have something like a `.in_ref_row` variable populated that the user can define when defining a row split, similarly as we have `.in_ref_col` for column split. 

Examples:

(1) If we summarize change from baseline (""CHG"" variable), we don't want to have 0s displayed when being in the reference row, i.e. baseline visit here:

```r
library(rtables)
library(dplyr)

anl <- ex_adlb %>%
  filter(PARAMCD == ""ALT"") %>%
  filter(AVISIT != ""SCREENING"")

basic_table() %>%
  split_cols_by(""ARM"") %>%
  split_rows_by(""AVISIT"", split_fun = drop_split_levels) %>%
  analyze(""CHG"") %>%
  build_table(anl)
```

```
                A: Drug X   B: Placebo   C: Combination
-------------------------------------------------------
BASELINE                                               
  Mean              0           0              0       
WEEK 1 DAY 8                                           
  Mean            -0.97        0.14           0.2      
WEEK 2 DAY 15                                          
  Mean            -0.16       -0.06          -2.41     
WEEK 3 DAY 22                                          
  Mean            0.69        -0.63          -2.05     
WEEK 4 DAY 29                                          
  Mean            1.13        -1.04          -1.25     
WEEK 5 DAY 36                                          
  Mean            1.26        -0.59          -0.92 
```

Proposed code:
```r
basic_table() %>%
  split_cols_by(""ARM"") %>%
  split_rows_by(""AVISIT"", ref_level = ""BASELINE"") %>%
  analyze(""CHG"", afun = function(x, .in_ref_row) `if`(.in_ref_row, """", mean(x))) %>%
  build_table(anl)
```

```
                A: Drug X   B: Placebo   C: Combination
-------------------------------------------------------
BASELINE                                               
  Mean                                                 
WEEK 1 DAY 8                                           
  Mean            -0.97        0.14           0.2      
WEEK 2 DAY 15                                          
  Mean            -0.16       -0.06          -2.41     
WEEK 3 DAY 22                                          
  Mean            0.69        -0.63          -2.05     
WEEK 4 DAY 29                                          
  Mean            1.13        -1.04          -1.25     
WEEK 5 DAY 36                                          
  Mean            1.26        -0.59          -0.92 
```
","anajens",133,54
"Add labels from row splits to table header","https://github.com/Roche/rtables/issues/164","closed",2021-02-08,2021-04-28,2021-04-28,6,"It would be very helpful and increase readability if users can choose if labels from row-splits and `analyze` / `summarize_row_groups` should be added as a row labels or added to the header of a table.

Here's an example:

```
library(rtables)

basic_table() %>%
  split_rows_by(""SEX"", split_fun = drop_split_levels, visible_label = TRUE) %>%
  split_rows_by(""STRATA1"", split_fun = drop_split_levels, visible_label = TRUE) %>%
  analyze(""BMRKR2"", show_labels = ""visible"") %>%
  build_table(ex_adsl)
```

The result looks like this:
```
                     all obs
----------------------------
SEX                         
  F                         
    STRATA1                 
      A                     
        BMRKR2              
          LOW          26   
          MEDIUM       19   
          HIGH         18   
      B                     
        BMRKR2              
          LOW          19   
          MEDIUM       33   
          HIGH         21   
      C                     
        BMRKR2              
          LOW          28   
          MEDIUM       24   
          HIGH         34   
  M                         
    STRATA1                 
      A                     
        BMRKR2              
          LOW          14   
          MEDIUM       20   
          HIGH         21   
      B                     
        BMRKR2              
          LOW          21   
  ...
```
Ideally, the labels be added to the header:
```
SEX
  STRATA1
    BMRKR2      all obs
----------------------------
F                         
 A                     
    LOW              26   
    MEDIUM           19   
    HIGH             18   
 B                     
    LOW              19   
    MEDIUM           33   
    HIGH             21   
 C                     
    LOW              28   
    MEDIUM           24   
    HIGH             34   
M                         
 A                     
    LOW              14   
    MEDIUM           20   
    HIGH             21   
 B                     
    LOW              21 
 ... 
```","anajens",79,0
"Vignette layout naming with `lyt`","https://github.com/Roche/rtables/issues/166","open",2021-02-08,2021-02-08,NA,0,"Issue originally reported by Nick Paszty:

Would like to propose using lyt for the layout objects in the rtables vignettes. 

We're gearing up for rtables/tern training in March and would like to have consistency when presenting to end users.","anajens",133,133
"Update / rebase the vr_Estimate branch with develop","https://github.com/openpharma/visR/pull/103","closed",2021-02-11,2021-02-14,2021-02-14,2,"Updating vr_branch with the current develop. ","bailliem",3,0
"Multi staging","https://github.com/Roche/rtables/pull/167","closed",2021-02-12,2021-02-12,2021-02-12,0,"","knightdave",0,0
"Vr estimate","https://github.com/openpharma/visR/pull/104","closed",2021-02-15,2021-03-03,2021-02-18,1,"Cleaned up estimate_KM and included elaborate testing","SHAESEN2",3,-13
"Added package dependencies where I saw them missing","https://github.com/openpharma/visR/pull/105","closed",2021-02-18,2021-03-03,2021-02-18,0,"---------------------  OK NEEDED! --------------------- 
1. In get_risktable the survival object is taken from a call object:
survfit_object <- eval(gg$data$call[[1]])
However, the result of gg$data$call[[1]] is:survfit(formula = survival::Surv(AVAL, 1 - CNSR) ~ TRTP, data = adtte)but surfvit is not known. The only solution I could find was:call = as.character(gg$data$call[[1]])
text=eval(expr=paste0(""survival::"", call[1], ""(formula = "", call[2], "", data = "", call[3], "")""))
eval(parse(text=text))
This is a bit cumbersome and also I make assumptions about the form I don't know I should be makinghere. Still, this I pushed to the branch fix_package_dependencies.

---------------------  FIX NEEDED! --------------------- 
2. In add_risktable (l. 154) there is a call of the function AlignPlots(). I have trouble finding out where this function comes from. There is a function cowplot::align_plots, but this function does not produce the same result. This needs to be fixed before the branch fix_package_dependencies can be merged.","rebecca-albrecht",0,-13
"find replace vr_KM_est to estimate_KM","https://github.com/openpharma/visR/pull/106","closed",2021-02-24,2021-03-03,2021-03-03,0,"I thought I did this in the vr_estimate branch but apparantly I did not :(","SHAESEN2",7,0
"Labels and captions","https://github.com/Roche/rtables/issues/168","open",2021-02-24,2021-02-25,NA,10,"I write clinical reports, and so `rtables` would be a great tool to use. Too bad, two absolutely required features are not available, labels (for crossreferencing) and captions. 

I am curious to learn how you write reports at Roche without these, do you have a workaround?

If you want to see what should work (kable is the yardstick):

https://gist.github.com/dmenne/f8eb291c9e71a5de44764d442e8bdefd","dmenne",117,116
"add lintr configuration, set tab = 4 ps","https://github.com/Roche/rtables/pull/169","closed",2021-02-28,2021-02-28,2021-02-28,0,"& address lintr issues in 00tabletrees.R

@gmbecker, please merge before you continue working.","waddella",0,0
"[MAIC]: R CMD check failure ""T used instead of TRUE""","https://github.com/Roche/Global-HTA-Evidence-Open/issues/1","closed",2021-03-01,2021-05-26,2021-05-26,1,"I'm trying to check this package before use and was running into a few issues. 

I'm receiving errors when trying to run the examples for this package, either independently via `tools::testInstalledPackage(""MAIC"", types = ""examples"")` or as part of `R CMD check` (via `devtools::check(""./MAIC"")`).

### Using `testInstalledPackage`

When using `testInstalledPackage`, I get an error about the use of `T`. During example execution, `T` and `F` are masked with code that will throw these errors when they're used ([from R email list](https://r.789695.n4.nabble.com/R-CMD-check-quot-T-used-instead-of-TRUE-quot-td911063.html)). 

```r
> KM_plot <- ggsurvplot(KM_list,
+                       combine = TRUE,
+                       risk.table=T, # numbers at risk displayed on the plot
+                       break.x.by=50,
+                       xlab=""Time (days)"",
+                       censor=FALSE,
+                       legend.title = ""Treatment"",
+                       title = ""Kaplan-Meier plot of overall survival"",
+                       legend.labs=c(""Intervention"",
+                                     ""Intervention weighted"",
+                                     ""Comparator""),
+                       font.legend = list(size = 10)) +
+   guides(colour=guide_legend(nrow = 2))
Error in ggsurvplot(KM_list, combine = TRUE, risk.table = T, break.x.by = 50,  : 
  T used instead of TRUE
```

### Using `R CMD check`

A simple enough issue, but currently throwing errors. Fixed by adding `Suggests: knitr` to `DESCRIPTION`

```
VignetteBuilder package not declared: ‘knitr’
```

### Using `devtools::check(""./MAIC"", vignettes = FALSE)`

When running R CMD check I get namespace errors, which may be due to the masking of `.oldSearch` in the check environment. 

```
  > library(MAIC)
  > library(ggplot2)
  > library(survminer)
  Loading required package: ggpubr
  Error: package or namespace load failed for ‘ggpubr’ in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]]):
   there is no package called ‘foreign’
  Error: package ‘ggpubr’ could not be loaded
  Execution halted
```

I think that this might be a result of these undeclared dependencies required to run the examples. Even if these are installed in my library, they aren't being picked up while running the examples during `R CMD check`. I was able to fix this by adding these three dependencies as `Suggests:` dependencies. With these added, I get the same error as when running `tools::testInstalledPackages` (the issue with using `T` in examples)

```
* checking for unstated dependencies in examples ... WARNING
'library' or 'require' calls not declared from:
  ‘flextable’ ‘officer’ ‘survminer’
```","dgkf",86,0
"A tiny fix, added a missing package dependency","https://github.com/openpharma/visR/pull/110","closed",2021-03-03,2021-03-04,2021-03-04,0,"A tiny fix, added a missing package dependency","rebecca-albrecht",1,0
"Added a missing package dependency","https://github.com/openpharma/visR/pull/109","closed",2021-03-03,2021-03-04,2021-03-04,0,"This is a tiny bugfix","rebecca-albrecht",1,0
"Added some schematics for test / tests for the get_XXX functions","https://github.com/openpharma/visR/pull/112","closed",2021-03-03,2021-03-06,2021-03-04,0,"","rebecca-albrecht",1,-2
"Fixed a small bug, missing package dependency","https://github.com/openpharma/visR/pull/111","closed",2021-03-03,2021-03-04,2021-03-04,0,"","rebecca-albrecht",1,0
"Refactor estimate_KM","https://github.com/openpharma/visR/pull/108","closed",2021-03-03,2021-03-04,2021-03-04,2,"I refactored the estimate_KM function as discussed in the core meeting (making the implicit use of CDISC ADaM explicit) and adjusted the tests accordingly.","rebecca-albrecht",1,0
"write function `list_required_vars(lyt)`","https://github.com/Roche/rtables/issues/170","closed",2021-03-03,2021-03-05,2021-03-05,0,"","waddella",2,0
"Added function to round numbers in strings","https://github.com/openpharma/visR/pull/113","closed",2021-03-04,2021-03-04,2021-03-04,0,"","timtreis",0,0
"Changed names of util files","https://github.com/openpharma/visR/pull/115","closed",2021-03-04,2021-03-04,2021-03-04,0,"","rebecca-albrecht",0,0
"Modified function to not throw a warning when using default parameter…","https://github.com/openpharma/visR/pull/116","closed",2021-03-04,2021-03-11,2021-03-11,0,"…s without changing plotting behaviour","timtreis",7,0
"Started writing tests for plot.R","https://github.com/openpharma/visR/pull/114","closed",2021-03-04,2021-03-04,2021-03-04,0,"","timtreis",0,0
"add reset_indent_mod","https://github.com/Roche/rtables/issues/171","closed",2021-03-05,2021-05-07,2021-05-07,3,"Starting with this table: I specify the indentation at the ""Mean"" rows to align with the ""subgroup summary"" rows

```
library(rtables)

t1 <- basic_table() %>%
  summarize_row_groups(""STUDYID"",label_fstr = ""overall summary"") %>%
  split_rows_by(""AEBODSYS"",  child_labels = ""visible"") %>%
  summarize_row_groups(""STUDYID"", label = ""subgroup summary"") %>%
  analyze(""AGE"", indent_mod = -1L) %>%
  build_table(ex_adae)


```

```
                         all obs  
----------------------------------
overall summary        1934 (100%)
  cl A.1                          
    subgroup summary   422 (21.8%)
    Mean                  34.7    
  cl B.1                          
    subgroup summary   178 (9.2%) 
    Mean                  35.86   
  cl B.2                          
    subgroup summary   410 (21.2%)
    Mean                  35.42   
...
```

However, after I trim away the content rows this indentation is re-evaluated and now the ""Mean"" rows are aligned with the ""cl"" rows. Is this supposed to happen and if so, is there any way to avoid this?

```
criteria_fun <- function(tr) {
  is(tr, ""ContentRow"")
}

trim_rows(t1, criteria = criteria_fun)
```


```
         all obs
----------------
cl A.1          
Mean      34.7  
cl B.1          
Mean      35.86 
cl B.2          
Mean      35.42 
cl C.1          
Mean      33.83 
cl C.2          
Mean      33.89 
cl D.1          
Mean      34.39 
cl D.2          
Mean      34.83 
```","anajens",63,0
"Added tests for get_quantiles.R","https://github.com/openpharma/visR/pull/118","closed",2021-03-05,2021-05-24,2021-05-24,0,"Testing standard input.
Testing generated quantiles against an equivalent call using pure survival package.","timtreis",80,0
"Bugfix estimate km","https://github.com/openpharma/visR/pull/119","closed",2021-03-05,2021-03-06,2021-03-06,2,"","rebecca-albrecht",1,0
"Bugfix tableone","https://github.com/openpharma/visR/pull/120","closed",2021-03-05,2021-03-11,2021-03-11,0,"","rebecca-albrecht",6,0
"some minor typos + layout fixes + include at least some reference to ADaM/CDISC","https://github.com/openpharma/visR/pull/117","closed",2021-03-05,2021-03-05,2021-03-05,0,"estimate_KM - included reference to ADaM
plot - some layout changes + fixed ref to KM_est","SHAESEN2",0,0
"Vignettes","https://github.com/openpharma/visR/pull/121","closed",2021-03-05,2021-03-19,2021-03-19,2,"Might not work before at least the bugfix_tableone brach is merged (https://github.com/openpharma/visR/pull/120). In that branch it built on my system.","rebecca-albrecht",14,0
"Bugfix estimate km","https://github.com/openpharma/visR/pull/122","closed",2021-03-06,2021-03-15,2021-03-15,0,"","SHAESEN2",9,0
"Review sh","https://github.com/openpharma/visR/pull/123","closed",2021-03-06,2021-03-18,2021-03-18,0,"Risktable corrections + vr_plot => plot","SHAESEN2",12,0
"create a badge for riskmetric ","https://github.com/pharmaR/riskmetric/issues/189","open",2021-03-09,2021-03-09,NA,0,"Joe suggested us to allow package developer to put a badge on their github readme file","elong0527",104,104
"remove pkg_ref_cache_function_coverage","https://github.com/pharmaR/riskmetric/pull/188","closed",2021-03-09,2021-03-31,2021-03-16,1,"","elong0527",7,-15
"remove pkg_ref_cache_function_coverage","https://github.com/pharmaR/riskmetric/pull/187","closed",2021-03-09,2021-03-09,2021-03-09,0,"","elong0527",0,0
"[MAIC}: Cannot pass arguments to `optim`","https://github.com/Roche/Global-HTA-Evidence-Open/issues/2","open",2021-03-10,2021-05-26,NA,0,"The `estimate_weights()` function does not have  a `...` argument allowing a user to pass arguments to `optim()` even though the documentation says this is possible.","dincerti",103,26
"Error in `value_at` for layout with overall column","https://github.com/Roche/rtables/issues/172","closed",2021-03-10,2021-04-08,2021-04-08,5,"It's not possible to extract the cell value using `value_at` when the table layout includes an overall column:

```
library(rtables)

result <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  analyze(c(""AGE"", ""SEX"")) %>%
  build_table(ex_adsl)

# this works
value_at(result, c(""AGE"", ""Mean""), c(""ARM"", ""C: Combination""))

# Now add overall column
result_overall <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  add_colcounts() %>%
  add_overall_col(""ALL"") %>%
  analyze(c(""AGE"", ""SEX"")) %>%
  build_table(ex_adsl)

# error
value_at(result_overall, c(""AGE"", ""Mean""), c(""ARM"", ""C: Combination""))

```
This is the error:
```
Error in tail(pos_splits(kids[[1]]), 1)[[1]] : subscript out of bounds
```

Session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.6 magrittr_1.5 

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   rlang_0.4.9  
```","anajens",29,0
"`split_cols_by()` does wrong ordering if `labels_var` is a factor and not a character","https://github.com/Roche/rtables/issues/173","closed",2021-03-11,2021-03-12,2021-03-12,2,"In the below example we have a labels variable (which does not have the same alphabetic ordering as the original arm variable). This gives the wrong labeling of the columns when it is a factor. Only when it is character it works as expected. I would guess that fixing this should be simply putting `as.character()` in the right place?

```r
library(rtables)
library(dplyr)

ex_adsl <- ex_adsl %>%
  mutate(
    ARMLAB = factor(case_when( # need to omit factor to solve problem below
      ARM == ""A: Drug X"" ~ ""Drug X"",
      ARM == ""B: Placebo"" ~ ""Placebo"",
      ARM == ""C: Combination"" ~ ""Combination"")
  ))

lyt_orig <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  analyze(c(""AGE"", ""BMRKR2""))
tbl_orig <- build_table(lyt_orig, ex_adsl)

lyt_lab <- basic_table() %>%
  split_cols_by(""ARM"", labels_var = ""ARMLAB"") %>%
  analyze(c(""AGE"", ""BMRKR2""))
tbl_lab <- build_table(lyt_lab, ex_adsl)

tbl_orig
tbl_lab # wrong labeling here
```

Session info:
```r
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8       
 [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C              
[10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] dplyr_1.0.0   rtables_0.3.6 magrittr_1.5 

loaded via a namespace (and not attached):
 [1] fansi_0.4.1       assertthat_0.2.1  packrat_0.5.0     digest_0.6.25     crayon_1.3.4     
 [6] R6_2.4.1          lifecycle_0.2.0   pillar_1.4.3      cli_2.2.0         rlang_0.4.9      
[11] rstudioapi_0.11   vctrs_0.3.1       generics_0.0.2    ellipsis_0.3.0    tools_3.6.3      
[16] glue_1.4.0        purrr_0.3.4       compiler_3.6.3    pkgconfig_2.0.3   htmltools_0.5.1.1
[21] tidyselect_1.1.0  tibble_3.0.1 
```","danielinteractive",1,0
"Global Headers and Footers","https://github.com/Roche/rtables/issues/174","closed",2021-03-16,2021-04-21,2021-04-21,0,"Mechanisms for adding titles and global footer material.

Print methods that incorporate those.

Pagination that undrestands space taken by global titles and footers","gmbecker",36,0
"Release v0.1.0","https://github.com/pharmaR/riskmetric/pull/190","closed",2021-03-17,2021-03-26,2021-03-26,4,"Initiate v0.1.0 release following checklist in #182

","elong0527",9,0
"add_CI - update examples and fix API change in examples","https://github.com/openpharma/visR/pull/127","closed",2021-03-18,2021-03-18,2021-03-18,0,"* change vr_plot to visR::plot in examples
* Add additional examples to illustrate options","bailliem",0,0
"add_CNSR.R - additional examples","https://github.com/openpharma/visR/pull/128","closed",2021-03-18,2021-03-19,2021-03-18,0,"Add additional examples to illustrate options","bailliem",0,-1
"Added missing tests for warning/error behaviour. Should raise test coverage to 100% for CI and CNSR.","https://github.com/openpharma/visR/pull/126","closed",2021-03-18,2021-03-19,2021-03-19,1,"Also improved our warn/test behaviour in add_CI.R to make more sense. ","timtreis",1,0
"Added vdiffr for visual testing of add_CI","https://github.com/openpharma/visR/pull/124","closed",2021-03-18,2021-03-18,2021-03-18,2,"Also includes extremely minor change to the wording of add_CI's @param.","timtreis",0,0
"Documentation for get_tableone","https://github.com/openpharma/visR/pull/131","closed",2021-03-18,2021-05-22,2021-03-25,4,"* Added examples from CDISC
* Added example to show by treatment summary, adding and removing overall column. 
* Simple example to show how it can be used to compute big N summaries i.e. number of patients within an analysis set by treatment. ","bailliem",7,-58
"Documentation for plot function","https://github.com/openpharma/visR/pull/132","closed",2021-03-18,2021-03-19,2021-03-19,1,"Add examples to illustrate that visR::plot overrides base plot when visR loads.","bailliem",1,0
"estimate_KM","https://github.com/openpharma/visR/pull/129","closed",2021-03-18,2021-04-17,2021-03-19,1,"Added example to work with non-CDSIC data using veteran data. ","bailliem",1,-29
"get_pvalue - additional examples added","https://github.com/openpharma/visR/pull/130","closed",2021-03-18,2021-03-18,2021-03-18,0,"Add more examples around custom visR functions for get_pvalue:

* how to select specific test
* how to select custom test
* how to select specific estimates","bailliem",0,0
"Review documentation add_annotation ","https://github.com/openpharma/visR/pull/125","closed",2021-03-18,2021-03-19,2021-03-19,2,"* updated example to reflect change to api vr_plot to visR::plot()
* added additional example to display a string comment","bailliem",1,0
"Change get_tableone function name","https://github.com/openpharma/visR/issues/144","closed",2021-03-19,2021-05-31,2021-05-31,0,"Change the get_tableone function name to be more general. It calculates summary statistics for categorical and continuous variable types. Although it is used to derive table one, it could also be used with other wrapper functions / table types. ","bailliem",73,0
"Changed the way the S3 transformation info is given; Added tests.","https://github.com/openpharma/visR/pull/140","closed",2021-03-19,2021-04-21,2021-04-21,1,"Changed the way the info that is given when transforming a non-survfit object using visR::tidyme() from base::writeLines() to message.

Then wrote these tests:

#' T1.  The function properly converts ""messy output"" into tidy tibbles
#' T1.1 The `visR::tidyme(stats::lm())` transformation doesn't change the values
#' T1.2 The `visR::tidyme(survival::survfit())` transformation doesn't change the values
#' T2.  Warnings and errors are thrown when neccecary
#' T2.1 No error when a `stats::lm()` model is transformed
#' T2.2 No error when a `survival::survfit()` model is transformed
#' T2.3 Message when a non-survfit object is transformed

If accepted, branch can be merged and deleted.","timtreis",33,0
"Correct weird behavior survival with only one stratum","https://github.com/openpharma/visR/pull/135","closed",2021-03-19,2021-03-19,2021-03-19,0,"","SHAESEN2",0,0
"Dependency on Survival - Fix Call","https://github.com/openpharma/visR/issues/134","closed",2021-03-19,2021-03-25,2021-03-25,1,"Currently we prefix all function calls, except for eg Survfit. One way to fix this is update the Call in estimate_KM, but this does not seem to be allowed. Another is to parse all calls downstream.","SHAESEN2",6,0
"doc and examples for tableone","https://github.com/openpharma/visR/pull/145","closed",2021-03-19,2021-03-25,2021-03-25,0,"Update documentation and examples for tableone function

* added examples to show different render options
* shortened title
* added explicit references to visR and dplyr:: functions ","bailliem",6,0
"Doc/km vignette review","https://github.com/openpharma/visR/pull/139","closed",2021-03-19,2021-03-19,2021-03-19,0,"Minor editorial updates to vignette ","bailliem",0,0
"Removed one useless sanity check in add_CNSR.R;  Added test for warning when style=ribbon with linetype specified","https://github.com/openpharma/visR/pull/136","closed",2021-03-19,2021-03-19,2021-03-19,0,"","timtreis",0,0
"removed unnecessary code","https://github.com/openpharma/visR/pull/133","closed",2021-03-19,2021-03-19,2021-03-19,0,"","SHAESEN2",0,0
"Sorting AE table by descending count when the counts are not unique","https://github.com/atorus-research/Tplyr/issues/10","open",2021-03-19,2021-03-22,NA,2,"Hi folks,
I am going through this example of an AE table using the CDISC adsl and adae data.
I have limited the number of SOC (AEBODSYS) terms to 5 here.
When I run this code, I notice that the last two AEBODSYS terms and AEDECODs are piled on top of each other.

I came up with a workaround, but I was wondering if there was a proper way of doing this in Tplyr that I overlooked?
Thanks!
Robert

```{r}
library(dplyr)
library(Tplyr)

data(adsl) # sample data from CDISC Pilot
data(adae) # sample data from CDISC Pilot

adsl2 <- adsl %>% 
  filter(SAFFL == ""Y"")

soc_vec <- c(""SKIN AND SUBCUTANEOUS TISSUE DISORDERS"",
             ""NERVOUS SYSTEM DISORDERS"",
             ""HEPATOBILIARY DISORDERS"",
             ""IMMUNE SYSTEM DISORDERS"",
             ""SOCIAL CIRCUMSTANCES""
             )
adae2 <- adae %>% 
  filter(AEBODSYS %in% soc_vec) %>% 
  arrange(AEBODSYS, AEDECOD) %>% 
  mutate(SOC = AEBODSYS, PT = AEDECOD)

adae_tp <- tplyr_table(adae2, TRTA) %>%
  set_pop_data(adsl2) %>%
  set_pop_treat_var(TRT01A) %>%
  set_pop_where(TRUE) %>%
  
  add_total_group(group_name = ""XTotal"") %>% 
  add_layer(
    group_count('Number of subjects with any event') %>% 
      set_distinct_by(USUBJID) %>% 
      set_denoms_by(TRTA) %>% 
      set_format_strings(f_str(""xxx ( xx.x)"", distinct_n, distinct_pct))
  ) %>% 
  add_layer(
    group_count(vars(AEBODSYS, AEDECOD)) %>% 
      set_nest_count(TRUE) %>% 
      set_indentation("".."") %>%
      set_format_strings(f_str(""xx (xx.x%)"", distinct_n, distinct_pct)) %>% 
      set_distinct_by(USUBJID) %>%
      set_order_count_method(""bycount"") %>%
      set_ordering_cols(""XTotal"") %>% 
      set_result_order_var(distinct_n)
  ) 

adae_df <- adae_tp %>% 
  build() %>% 
  arrange(ord_layer_index, desc(ord_layer_1), desc(ord_layer_2))
```

![image](https://user-images.githubusercontent.com/75215958/111829611-499da300-88c3-11eb-81f4-59987dc30002.png)

```{r, eval=FALSE}
> sessionInfo()
R version 4.0.2 (2020-06-22)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows >= 8 x64 (build 9200)

Matrix products: default

locale:
[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252   
[3] LC_MONETARY=English_United States.1252 LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] dplyr_1.0.2 Tplyr_0.4.1

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.5        compiler_4.0.2    pillar_1.4.6      forcats_0.5.0    
 [5] prettyunits_1.1.1 remotes_2.2.0     tools_4.0.2       testthat_2.3.2   
 [9] digest_0.6.25     pkgbuild_1.1.0    pkgload_1.1.0     memoise_1.1.0    
[13] lifecycle_0.2.0   tibble_3.0.3      pkgconfig_2.0.3   rlang_0.4.7      
[17] cli_2.0.2         rstudioapi_0.11   curl_4.3          yaml_2.2.1       
[21] stringr_1.4.0     withr_2.2.0       hms_0.5.3         desc_1.2.0       
[25] generics_0.0.2    fs_1.5.0          vctrs_0.3.4       devtools_2.3.1   
[29] rprojroot_1.3-2   tidyselect_1.1.0  glue_1.4.2        R6_2.4.1         
[33] processx_3.4.4    fansi_0.4.1       sessioninfo_1.1.1 readr_1.3.1      
[37] tidyr_1.1.2       purrr_0.3.4       callr_3.4.3       magrittr_1.5     
[41] backports_1.1.9   ps_1.3.4          ellipsis_0.3.1    usethis_1.6.1    
[45] assertthat_0.2.1  stringi_1.4.6     crayon_1.3.4
```","Robert-Krajcik",94,91
"Test/add pvalue","https://github.com/openpharma/visR/pull/143","closed",2021-03-19,2021-04-17,2021-03-28,5,"Rewrote get_pvalue and include associated tests.","SHAESEN2",9,-20
"update","https://github.com/openpharma/visR/pull/137","closed",2021-03-19,2021-03-19,2021-03-19,0,"","SHAESEN2",0,0
"Update add_ci & add_cnsr document + examples","https://github.com/openpharma/visR/pull/142","closed",2021-03-19,2021-05-22,2021-03-19,0,"Update documentation and examples for both add_ci add_cnsr functions
* Shorten titles
* Add examples","bailliem",0,-64
"Update examples in documentation for","https://github.com/openpharma/visR/pull/141","closed",2021-03-19,2021-03-19,2021-03-19,0,"* addCI
* addCNSR","bailliem",0,0
"Update for vignette review","https://github.com/openpharma/visR/pull/138","closed",2021-03-19,2021-03-19,2021-03-19,0,"","bailliem",0,0
"Update call in estimate_KM","https://github.com/openpharma/visR/pull/146","closed",2021-03-22,2021-03-25,2021-03-25,1,"","SHAESEN2",3,0
"Add option for text color","https://github.com/atorus-research/pharmaRTF/issues/5","open",2021-03-23,2021-04-01,NA,1,"Hello,

Thank you for the great package. I have been using it to generate my RTF documents. In the reference manual, it says the future plans include colors. Do you have a timeline for that? I would like to put in a request for text color. Thank you!","tdwils",90,81
"pag_tt_indices returns wrong result","https://github.com/Roche/rtables/issues/175","closed",2021-03-25,2021-04-21,2021-04-21,1,"`pag_tt_indices` return an empty list

```r
library(rtables)

tt <- rtable(header = "" "", rrow("""", ""NUll report""))
pag_tt_indices(tt)
```

sessioninfo:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Red Hat Enterprise Linux

Matrix products: default
BLAS/LAPACK: /usr/lib64/libopenblas-r0.3.3.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.6   magrittr_1.5    reticulate_1.15

loaded via a namespace (and not attached):
 [1] compiler_3.6.3  Matrix_1.2-18   htmltools_0.4.0 tools_3.6.3    
 [5] yaml_2.2.1      Rcpp_1.0.4.6    grid_3.6.3      digest_0.6.25  
 [9] jsonlite_1.6.1  rlang_0.4.6     lattice_0.20-41
```

","anajens",27,0
"Updating DESCRIPTION with maintainer email","https://github.com/pharmaR/riskmetric/pull/191","closed",2021-03-27,2021-03-31,2021-03-31,0,"I moved the maintainer responsibilities to myself and added email - let me know if any other changes are needed.","dgkf",4,0
"Listing Design Work","https://github.com/Roche/rtables/issues/176","open",2021-03-29,2021-03-29,NA,0,"Some functionality needs to be added to `rtables` to support creation of listings with an easy to use interface.

Here is a basic prototype of a simple listing using existing `rtables` functionality: 

```r
library(rtables)

anl <- ex_adsl[1:10, ]
anl$cat_var <- paste(anl$COUNTRY, anl$STRATA1, anl$STRATA2, sep = ""/"")

cfun_list <- list(
  lc_2 = function(df, labelstr = """") {
    in_rows(x = df$SEX, .formats = ""xx"", .labels = as.character(df$USUBJID))
  },
  weight = function(df, labelstr = """") {
    in_rows(x = df$BMRKR1,  .formats = ""xx.xx"", .labels = as.character(df$USUBJID))
  },
  ethnic = function(df, labelstr = """") {
    in_rows(x = df$cat_var,  .formats = ""xx"", .labels = as.character(df$USUBJID))
  }
)

basic_table() %>%
  split_rows_by(""ARM"") %>%
  split_cols_by_multivar(
    vars = c(""SEX"", ""BMRKR1"", ""cat_var""),
    varlabels = c(""SEX"", ""Bimoarker Status"", ""Country/Strata 1/Strata 2"")
  ) %>%
  split_rows_by(""USUBJID"") %>%
  summarize_row_groups(cfun = cfun_list) %>%
  build_table(anl)

```

Result:
```
                          SEX   Bimoarker Status   Country/Strata 1/Strata 2
----------------------------------------------------------------------------
A: Drug X                                                                   
  AB12345-CHN-3-id-128     M         14.42                 CHN/C/S2         
  AB12345-USA-1-id-45      F          0.46                 USA/C/S1         
B: Placebo                                                                  
  AB12345-CHN-11-id-220    F         10.26                 CHN/B/S2         
  AB12345-CHN-7-id-267     M          6.21                 CHN/C/S1         
  AB12345-USA-1-id-261     F          2.86                 USA/C/S1         
  AB12345-CHN-1-id-307     M          4.57                 CHN/C/S1         
C: Combination                                                              
  AB12345-CHN-15-id-262    M          4.06                 CHN/C/S1         
  AB12345-RUS-3-id-378     F          2.8                  RUS/A/S1         
  AB12345-CHN-15-id-201    M          6.91                 CHN/C/S2         
  AB12345-NGA-11-id-173    F           5                   NGA/C/S2    
```","anajens",84,84
" How to re-evaluate risk of a cohort when new package(s) are introduced?","https://github.com/pharmaR/riskmetric/issues/192","open",2021-03-31,2021-03-31,NA,0,"Once #174 addressed, we may run the risk metric for two cohorts and evaluate the difference. ","elong0527",82,82
"A metric of how many Reverse dependencies a package has","https://github.com/pharmaR/riskmetric/issues/193","open",2021-03-31,2021-05-28,NA,1,"","elong0527",82,24
"Define a weights to aggregate risks from different metrics ","https://github.com/pharmaR/riskmetric/issues/195","open",2021-03-31,2021-03-31,NA,1,"","elong0527",82,82
"Enhancement of package source ","https://github.com/pharmaR/riskmetric/issues/196","open",2021-03-31,2021-04-28,NA,3,"From #175 

I would prefer to have more direct and rigid mechanisms for creating specific classes (pkg_source(""<source directory>""), pkg_remote(""<remote url>"")) and then move the current pkg_ref functionality into a convenience function whose name indicates that it is doing some type conversion (as_pkg_ref(""arbitrary character value"")), possibly with some arguments that can limit the scope of viable sources.

One thing that really irks me is that pkg_ref is not type-stable, returning either a pkg_ref or list_of_pkg_ref class object depending on the length of the input character vector. It would be nice to make this more stable as well, either always returning a list or breaking out the flavor that can accommodate a vector.

In the spirit of putting a design out there for critique, here are some ideas for some tighter constructors:

```
# rigid constructors always return a single pkg_ref subclass object
pkg_source(""file path"")
pkg_remote(""url"", base_url = ""optional base url"")
pkg_cran(""package name"") # wrapper around pkg_remote with base_url default
pkg_bioc(""package name"") # wrapper around pkg_remote with base_url default
pkg_install(""absolute or relative file path"", lib_loc = ""optional relative path origin"") 
```
```
# attempt to parse a character for the appropriate pkg_ref, similar to pkg_ref now
find_pkg_ref(""arbitrary string"") # or 
as_pkg_ref(""arbitrary string"")
```

```
# to concretely build a package cohort
src_paths <- c(""dev/pkg1"", ""dev/pkg2"")
lapply(src_paths, pkg_source) # note, will not be a ""list_of_pkg_ref"", but rather a ""list""
```

```
# finally, as we're starting to think about cohorts more, I might suggest
pkg_library(""library location"") # returns a pkg_cohort object. in this case, a list of pkg_install 
pkg_cohort() # no arguments, just instantiates a structure around an empty list
as_pkg_cohort([list of pkg refs]) 
```","elong0527",82,54
"For CRAN 0.1.0 release ","https://github.com/pharmaR/riskmetric/pull/194","closed",2021-03-31,2021-03-31,2021-03-31,1,"","elong0527",0,0
"xml representation of a table tree","https://github.com/Roche/rtables/issues/177","open",2021-03-31,2021-04-28,NA,2,"@gmbecker, another project needs the rtable object in an `xml` format so that they can look into pathing and reuse (outside of R). I tried the following, but it is not exactly as is needed

```r
library(xml2)
as_xml_document(list(root = cell_values(tbl)))
```

That is, the the parent child relationship got squished.

Do you have a quick solution to get an xml representation of a table tree? Otherwise we can discuss in our next meeting how to address this.

","waddella",82,54
"Fixed bugs in risktable algorithm for graph","https://github.com/openpharma/visR/pull/147","closed",2021-04-03,2021-04-16,2021-04-16,0,"1) alignment of risktable with graph by using breaks of graph instead of times from risktable

2) Ensured correct titles are used for each risk table

3) ensured we see the minimum at risk when it falls between pre-defined breaks => take next available break

4) Removed visR.R as we dont need this","SHAESEN2",13,0
"`cell_values` returns error","https://github.com/Roche/rtables/issues/178","closed",2021-04-06,2021-04-08,2021-04-08,2,"Looks like there may be a bug related to extracting values from a table with `cell_values`.

This is the simple example and runs fine:
```r
library(rtables)

# OK
t1 <- basic_table() %>%
  split_cols_by(""ARMCD"") %>%
  split_rows_by(""COUNTRY"", split_fun = keep_split_levels(""CHN"")) %>%
  analyze(""SEX"") %>%
  analyze(""AGE"", nested = FALSE) %>%
  build_table(ex_adsl)

t1
row_paths(t1)
cell_values(t1, c(""AGE""))
```

Here we just add one more variable to the simple layout above to analyze and we run into errors:
```r
t2 <- basic_table() %>%
  split_cols_by(""ARMCD"") %>%
  split_rows_by(""COUNTRY"", split_fun = keep_split_levels(""CHN"")) %>%
  analyze(""SEX"") %>%
  analyze(""AGE"", nested = FALSE) %>%
  analyze(""BMRKR1"") %>%
  build_table(ex_adsl)

t2
# Now after ""root"" there is a """" inserted for the elements 6:9 
row_paths(t2)

# Not sure what the appropriate path is?
cell_values(t2, c(""AGE""))
cell_values(t2, c("""", ""AGE""))
```

Here is the output:
```
> t2
                     ARM A   ARM B   ARM C
------------------------------------------
CHN                                       
  F                   44      45      29  
  M                   27      35      30  
  U                    2       1       3  
  UNDIFFERENTIATED     1       0       2  
AGE                                       
  Mean               33.77   35.43   35.43
BMRKR1                                    
  Mean               5.97     5.7    5.62 
> # Now after ""root"" there is a """" inserted for the elements 6:9 
> row_paths(t2)
[[1]]
[1] ""root""    ""COUNTRY"" ""CHN""    

[[2]]
[1] ""root""    ""COUNTRY"" ""CHN""     ""SEX""     ""F""      

[[3]]
[1] ""root""    ""COUNTRY"" ""CHN""     ""SEX""     ""M""      

[[4]]
[1] ""root""    ""COUNTRY"" ""CHN""     ""SEX""     ""U""      

[[5]]
[1] ""root""             ""COUNTRY""          ""CHN""              ""SEX""              ""UNDIFFERENTIATED""

[[6]]
[1] ""root"" """"     ""AGE"" 

[[7]]
[1] ""root"" """"     ""AGE""  ""Mean""

[[8]]
[1] ""root""   """"       ""BMRKR1""

[[9]]
[1] ""root""   """"       ""BMRKR1"" ""Mean""  
```

The errors are:
```
> cell_values(t2, c(""AGE""))
Error in tt_at_path(tt, rowpath) : 
  Path appears invalid for this tree at step AGE
> cell_values(t2, c("""", ""AGE""))
Error in (function (classes, fdef, mtable)  : 
  unable to find an inherited method for function ‘tree_children’ for signature ‘""NULL""’
```


Session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C              LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.6.0001 magrittr_1.5      

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0   rlang_0.4.9 
```","anajens",2,0
"Merge pull request #194 from pharmaR/master","https://github.com/pharmaR/riskmetric/pull/197","closed",2021-04-06,2021-04-10,2021-04-10,1,"For CRAN 0.1.0 release

- remove layzdata statement in DESCRIPTION
- update README to remove broken link
- address notes on `\concept`","elong0527",4,0
"build_table fails with 3 levels of column nesting in layout","https://github.com/Roche/rtables/issues/179","closed",2021-04-08,2021-04-13,2021-04-13,1,"as reported by @anajens 

```
library(rtables)

# 2 levels of nested columns - OK
basic_table() %>%
  split_cols_by(var = ""ARM"") %>% 
  split_cols_by(""STRATA1"") %>%
  add_overall_col(""All Patients"") %>%
  add_colcounts() %>%
  analyze(""AGE"") %>%
  build_table(ex_adsl)

# 3 levels of nested columns - error
basic_table() %>%
  split_cols_by(var = ""ARM"") %>% 
  split_cols_by(""STRATA1"") %>%
  split_cols_by(""STRATA2"") %>%
  add_overall_col(""All Patients"") %>%
  add_colcounts() %>%
  analyze(""AGE"") %>%
  build_table(ex_adsl)
```","gmbecker",5,0
"Pagination test coverage","https://github.com/Roche/rtables/issues/180","open",2021-04-13,2021-04-13,NA,0,"We need pagination tests. Currently we don't have many/any.","gmbecker",69,69
"Copyright license compatibility in a dependency tree.","https://github.com/pharmaR/riskmetric/issues/200","open",2021-04-14,2021-04-15,NA,1,"While discussion item in #174, @dgkf  mentioned there is a package to handle license compatibility checking. We shall evaluate how to leverage existing tool for this. ","elong0527",68,67
"Define a class for a cohort of R packages and its metrics ","https://github.com/pharmaR/riskmetric/issues/198","open",2021-04-14,2021-04-15,NA,0,"Following the discussion in #174, we need to discuss and create a prototype for a class that:

1. can contain package metrics for a group of packages 
2. can contain cohort level assessments (to use riskmetric parlance)
3. can contain  cohort level reference information

  ","elong0527",68,67
"Define methods for cohort metric class","https://github.com/pharmaR/riskmetric/issues/199","open",2021-04-14,2021-04-14,NA,0,"After we align on #198, we shall discuss the methods of the cohort metric class:

1. what's the proper method to add/remove package from cohort metric class?
2. what's the proper method to update snapshot date in a cohort metric class? 
3. what's the proper method to summarize the difference between two given cohort metric class?  ","elong0527",68,68
"Added tests for get_summary","https://github.com/openpharma/visR/pull/148","closed",2021-04-16,2021-04-17,2021-04-17,1,"","rebecca-albrecht",1,0
"Bugfix/test add ci","https://github.com/openpharma/visR/pull/151","closed",2021-04-16,2021-04-16,2021-04-16,0,"Was a minor error. Branch can be closed after merge.

My local test of the package also had the two errors before and now doesn't have them anymore.","timtreis",0,0
"Enhance pruning function to be able to subset rtable in a customized way, i.e. by paths","https://github.com/Roche/rtables/issues/181","closed",2021-04-16,2021-05-05,2021-04-16,10,"There are situations, for example, for the table below that shows number of patients by toxicity grade when not all the levels of the table are clinically meaningful, i.e. lab test can only have one direction of abnormality. In this case displaying it in the table doesn't make sense, but also pruning or trimming the rtable is not an option as it will remove sections with zeroes that are meaningful as well. It would be helpful to have a customized way to subset rtable objects to be able to address the questions from the stakeholders in the best way, since not everything can be handled via layout. For this example the way to subset would be to create a dataframe with PARAMCDs and abnormality directions that make sense and then use it to compare with the content of rtable.
I have included an example where for ALT low abnormality direction is not ""possible"".
```r
source(""https://raw.github.roche.com/NEST/nest_on_bee/master/bee_nest_utils.R"")
bee_use_nest(release = ""2021_03_22"")
library(dplyr)
library(random.cdisc.data)
library(rtables)
library(tern)

adsl <- radsl(cached = TRUE)
adlb <- radlb(cached = TRUE) %>%
  var_relabel(WGRLOFL = ""Direction of Abnormality"")

# Ensure character variables are converted to factors and empty strings and NAs are explicit missing levels.
adsl <- df_explicit_na(adsl)
adlb <- df_explicit_na(adlb)

adlb_f <- adlb %>%
  dplyr::filter(!AVISIT %in% c(""SCREENING"", ""BASELINE"")) %>%
  dplyr::mutate(
    ATOXGR = as.numeric(as.character(ATOXGR)),
    WGRLOFL = case_when(WGRLOFL == ""Y"" ~ TRUE, TRUE ~ FALSE),
    WGRHIFL = case_when(WGRHIFL == ""Y"" ~ TRUE, TRUE ~ FALSE),
  #remove low direction for ALT
    ATOXGR1=case_when(ATOXGR>0 ~ ATOXGR,ATOXGR<=0 & PARAMCD!=""ALT""~ATOXGR,ATOXGR<=0 & PARAMCD==""ALT""~0),
    WGRLOFL1 = case_when(PARAMCD!=""ALT""~WGRLOFL, TRUE ~ FALSE),
    
  ) %>%
  droplevels()

lyt <- basic_table() %>%
  split_cols_by(""ARMCD"") %>%
  add_colcounts() %>%
  split_rows_by(""PARAMCD"") %>%
  summarize_num_patients(
    var = ""USUBJID"",
    required = ""ATOXGR1"",
    .stats = ""unique_count""
  ) %>%
 
  count_abnormal_by_worst_grade(
    ""ATOXGR"",
    abnormal = c(Low = ""low"",High=""high""),
    variables = list(id = ""USUBJID"", worst_grade_flag = c(Low = ""WGRLOFL1"", High=""WGRHIFL""))
  ) %>%
  append_topleft(""Direction of Abnormality"") %>%
  append_topleft(""  Highest NCI CTCAE Grade"")

result <- build_table(
  lyt = lyt,
  df = adlb_f,
  alt_counts_df = adsl
)
result



```
","bahatsky",0,-19
"Removed styling from plot.R and build wrappers for styling.","https://github.com/openpharma/visR/pull/153","closed",2021-04-16,2021-05-31,2021-04-16,1,"","timtreis",0,-45
"Replaced parameter so that no error is caused by ggplot","https://github.com/openpharma/visR/pull/152","closed",2021-04-16,2021-04-16,2021-04-16,1,"To fix the vdiffr error while checking","timtreis",0,0
"Test/get risktable","https://github.com/openpharma/visR/pull/150","closed",2021-04-16,2021-04-17,2021-04-17,2,"","SHAESEN2",1,0
"Update test branch","https://github.com/openpharma/visR/pull/149","closed",2021-04-16,2021-04-16,2021-04-16,0,"","SHAESEN2",0,0
"Fix/cox","https://github.com/openpharma/visR/pull/154","closed",2021-04-17,2021-04-17,2021-04-17,0,"","SHAESEN2",0,0
"address CRAN submission comments","https://github.com/pharmaR/riskmetric/pull/201","closed",2021-04-18,2021-04-28,2021-04-28,2,"Addressed CRAN comments discussed in #182 ","elong0527",10,0
"Clean up get_summary code","https://github.com/openpharma/visR/pull/155","closed",2021-04-19,2021-04-21,2021-04-21,0,"","SHAESEN2",2,0
"Test/create tableone","https://github.com/openpharma/visR/pull/156","closed",2021-04-20,2021-04-30,2021-04-30,0,"Here are the new tests for get_tableone and table utilities. Also a very minor change to the table utilities.","rebecca-albrecht",10,0
"rebase branch with latest dev","https://github.com/openpharma/visR/pull/160","closed",2021-04-21,2021-04-21,2021-04-21,0,"lazy rebase of latest dev branch. make sure no updates are missed in review. ","bailliem",0,0
"Test/get cox","https://github.com/openpharma/visR/pull/157","closed",2021-04-21,2021-04-21,2021-04-21,0,"","SHAESEN2",0,0
"Test/tidyme","https://github.com/openpharma/visR/pull/159","closed",2021-04-21,2021-04-29,2021-04-29,0,"","SHAESEN2",8,0
"Update to get bugfixes","https://github.com/openpharma/visR/pull/158","closed",2021-04-21,2021-04-21,2021-04-21,0,"","SHAESEN2",0,0
"subsetting rows on a built table with top left annotation removes top left annotation","https://github.com/Roche/rtables/issues/182","closed",2021-04-22,2021-04-22,2021-04-22,3,"Example:

```r
library(rtables)
library(dplyr)

lyt <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  split_cols_by(""SEX"") %>%
  split_rows_by(""RACE"") %>%
  append_topleft(""Ethnicity"") %>%
  analyze(""AGE"") %>%
  append_topleft(""  Age"")

DM2 <- DM %>% mutate(RACE = factor(RACE), SEX = factor(SEX))

tab <- build_table(lyt, DM2)
tab
tab[-3, ]
```

Session info:
```r
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8   
 [6] LC_MESSAGES=C              LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] dplyr_1.0.0        rtables_0.3.6.1001 magrittr_1.5      

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.4.6     crayon_1.3.4     packrat_0.5.0    digest_0.6.25    R6_2.4.1         lifecycle_0.2.0  pillar_1.4.3     rlang_0.4.9     
 [9] rstudioapi_0.11  vctrs_0.3.1      generics_0.0.2   ellipsis_0.3.0   tools_3.6.3      glue_1.4.0       purrr_0.3.4      compiler_3.6.3  
[17] pkgconfig_2.0.3  htmltools_0.4.0  tidyselect_1.1.0 tibble_3.0.1 
```","danielinteractive",0,0
"evaluate coverage in presence of get_risktable testing","https://github.com/openpharma/visR/pull/161","closed",2021-04-23,2021-04-23,2021-04-23,0,"","SHAESEN2",0,0
"Test/add risktable","https://github.com/openpharma/visR/pull/162","closed",2021-04-24,2021-05-07,2021-05-07,0,"","SHAESEN2",13,0
"`transpose` argument in `toString` function","https://github.com/Roche/rtables/issues/184","open",2021-04-26,2021-04-26,NA,0,"","waddella",56,56
"add txt output","https://github.com/Roche/rtables/issues/185","closed",2021-04-26,2021-04-28,2021-04-28,0,"make a separator argument `\s`","waddella",2,0
"Assessment Task of 165, add a comment","https://github.com/Roche/rtables/issues/188","closed",2021-04-26,2021-04-26,2021-04-26,0,"","waddella",0,0
"Can't rename levels with `reorder_split_levels`","https://github.com/Roche/rtables/issues/191","closed",2021-04-26,2021-04-28,2021-04-28,1,"The code below gives an error. It works if `newlabels` is excluded.

```r
basic_table() %>%
  split_cols_by(""ARM"") %>%
  split_rows_by(
    ""COUNTRY"", 
    split_fun = reorder_split_levels(
      neworder = c(""CAN"", ""PAK"", ""BRA""),
      newlabels = c(CAN = ""Canada"", PAK = ""Pakistan"", BRA = ""Brazil"")
    )
  ) %>%
  analyze(""AGE"") %>%
  build_table(ex_adsl)
```

session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Red Hat Enterprise Linux

Matrix products: default
BLAS/LAPACK: /usr/lib64/libopenblas-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.6.0001 magrittr_1.5      

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     yaml_2.2.1      Rcpp_1.0.4.6    digest_0.6.25   rlang_0.4.6  
```","anajens",2,0
"documentation: `cfun` accepts both df and x","https://github.com/Roche/rtables/issues/190","open",2021-04-26,2021-04-26,NA,0,"Some places where cfun only mentions df are:

https://github.com/Roche/rtables/blob/5f6efc798d430d34479cc5992967d17c44ae4f99/R/argument_conventions.R#L47

https://github.com/Roche/rtables/blob/759eb771eca71be3e519b594aa76f6989fbf14fd/vignettes/clinical_trials.Rmd#L297

Also in the Details section of `summarize_row_groups`","anajens",56,56
"function to map a data.frame to an elementary table","https://github.com/Roche/rtables/issues/189","closed",2021-04-26,2021-05-05,2021-05-05,0,"maybe with an argument of which column to take as row names","waddella",9,0
"make an pdf output function","https://github.com/Roche/rtables/issues/186","open",2021-04-26,2021-04-26,NA,0,"`as_pdf`","waddella",56,56
"Referential Footnotes: Columns","https://github.com/Roche/rtables/issues/187","open",2021-04-26,2021-04-26,NA,0,"","waddella",56,56
"revisit `add_overall` discussion","https://github.com/Roche/rtables/issues/183","open",2021-04-26,2021-04-26,NA,1,"Some time ago we talked about deprecating `add_overall`:

>lets deprecate the `add_overall` function on `gabe_tabletree_work` and @anajens please start using `add_overall_level` for the release in 4 months.

_Originally posted by @waddella in https://github.com/Roche/rtables/issues/172#issuecomment-799577274_

However, I still think we need this function in some cases:

```r
library(dplyr)
library(rtables)

# This does not give us a ""total"" column:
basic_table() %>%
  split_cols_by(""ARM"", split_fun = add_overall_level(""All"", first = FALSE)) %>%
  split_cols_by(""ARMCD"", split_fun = drop_split_levels) %>%
  add_colcounts() %>%
  analyze(vars = ""SEX"") %>%
  build_table(ex_adsl)

# This gives the correct overall column:
basic_table() %>%
  split_cols_by(""ARM"") %>%
  split_cols_by(""ARMCD"", split_fun = drop_split_levels) %>%
  add_overall_col(""All Patients"") %>%
  add_colcounts() %>%
  analyze(vars = ""SEX"") %>%
  build_table(ex_adsl)

```","anajens",56,56
"gt render function","https://github.com/Roche/rtables/issues/192","open",2021-04-28,2021-04-28,NA,0,"It would be good to have a export/render function to a `gt` object so that `rtables` can be rendered in formats such as doc and rtf. This will address the issue #16 originally submitted by @elong0527.","waddella",54,54
"Horizontal Pagination","https://github.com/Roche/rtables/issues/193","open",2021-04-28,2021-04-28,NA,0,"let's discuss in our next meeting","waddella",54,54
"Exclude groups names of groups that are out of plot range","https://github.com/Roche/ggtips/pull/60","closed",2021-04-30,2021-04-30,2021-04-30,1,"When limiting range of plot axis there may be situation that some items on plot are outside of selected range and so they are not visible. ggtips incorrectly assigned levels in tooltip data. When item was out of plot range then it was correctly removed from data but its level was assigned to the next visible element in data. As a result incorrect labels were visible on tooltips.  ","adamgolubowski",0,0
"add a circleci configuration file","https://github.com/Roche/respectables/issues/3","closed",2021-05-05,2021-05-07,2021-05-07,0,"* copy it from github.roche.com/Roche/rtables
* register with circleci
","waddella",2,0
"add a lintr file","https://github.com/Roche/respectables/issues/2","closed",2021-05-05,2021-05-07,2021-05-07,0,"```
linters: with_defaults(line_length_linter = line_length_linter(120))
```

","waddella",2,0
"Add a README file","https://github.com/Roche/respectables/pull/7","closed",2021-05-05,2021-05-05,2021-05-05,0,"closes #5 


@gmbecker please have a look at my `README.md`, I thought I was pretty thorough.","waddella",0,0
"fix pkgdown website","https://github.com/Roche/respectables/issues/1","closed",2021-05-05,2021-06-06,2021-06-06,0,"
- [x] make sure to add the docs folder to `.gitignore`
- [x] add
  ```
    - title: Unexported functions
      desc: Useful for developers
      contents:
   ```
- [x] set pkgdown to devel state
- [x] update circleci to fail if there are  ""Topics missing from index""","waddella",32,0
"Make a `README.md` file","https://github.com/Roche/respectables/issues/5","closed",2021-05-05,2021-05-05,2021-05-05,0,"","waddella",0,0
"make a unit test using tinytest","https://github.com/Roche/respectables/issues/4","closed",2021-05-05,2021-06-04,2021-06-04,0,"","waddella",30,0
"update some documentation with examples","https://github.com/Roche/respectables/issues/6","closed",2021-05-05,2021-05-28,2021-05-28,0,"use `roxygen2`","waddella",23,0
"Use plot layer data as source for factor levels for tooltip data","https://github.com/Roche/ggtips/pull/61","closed",2021-05-05,2021-05-06,2021-05-06,0," `plot$data` in `unmapAes` function was source of levels mapped to tooltip data. I changed the program to use plot layers data when available. If plot layer data is a ggplot2 waiver it defaults to `plot$data`. 
There may be a situation when `plot$data` does not easily match tooltip data. Change introduced in this PR attempts to provide more relevant data for tooltip mapping.","adamgolubowski",1,0
"Add a circleci configuration file","https://github.com/Roche/respectables/pull/9","closed",2021-05-06,2021-05-07,2021-05-07,0,"closes #3 

@gmbecker please take a look at the `config.yml` file I created in the `.circleci` folder. I copied from the `rtables` package as requested.","edelarua",1,0
"Add a lintr file","https://github.com/Roche/respectables/pull/8","closed",2021-05-06,2021-05-14,2021-05-07,0,"@gmbecker please review my `.lintr` file and let me know if what I did was correct. Thanks!","edelarua",1,-7
"documentation: label_pos","https://github.com/Roche/rtables/issues/196","closed",2021-05-06,2021-05-06,2021-05-06,2,"Please update docs for `label_pos` argument in `split_rows_by`.  Currently it says that ""default"" is accepted, but it is not. 

This is in `gabe_tabletree_work ` branch.

","anajens",0,0
"Example of using referential footnotes ","https://github.com/Roche/rtables/issues/197","open",2021-05-06,2021-06-17,NA,3,"@gmbecker would you be able to add some examples showing how to add referential footnotes? 

I remember earlier you shared some slides showing the various places in a table that can support these footnotes but going through the changes on `gabe_tabletree_work` I can't find the documentation of this. Maybe a vignette on this would be helpful?","anajens",46,4
"export_as_txt is not exported","https://github.com/Roche/rtables/issues/195","closed",2021-05-06,2021-05-06,2021-05-06,0,"This is on `gabe_tabletree` branch. Not sure if this is because this feature is experimental but it seems like `export_as_txt` would be a very useful function.","anajens",0,0
"Tables in Viewer are difficult to read","https://github.com/Roche/rtables/issues/194","closed",2021-05-06,2021-05-19,2021-05-17,6,"I'm testing `gabe_table_tree` branch and noticed that the Viewer output looks different. 
- Columns are too crowded, there needs to be some cell padding
- I think we need at least a line to separate the header from the body of the table so it's easier to read
![image](https://user-images.githubusercontent.com/43623360/117350170-3c8c4180-ae7a-11eb-8780-a144b228c9c2.png)


This is how it looks with rtables `devel`  verison:
![image](https://user-images.githubusercontent.com/43623360/117350091-254d5400-ae7a-11eb-8fa1-4cab96fd7fa4.png)


","anajens",11,-2
"Added user input checks and tests for styling","https://github.com/openpharma/visR/pull/168","closed",2021-05-07,2021-05-07,2021-05-07,0,"","timtreis",0,0
"Demo meeting","https://github.com/Roche/respectables/pull/11","closed",2021-05-07,2021-05-07,2021-05-07,0,"","waddella",0,0
"Doc/clear notes","https://github.com/openpharma/visR/pull/164","closed",2021-05-07,2021-05-07,2021-05-07,0,"Add visR.R file with globalvariables to suppress warning. 
Add issue to replace this approch with setting variables to null in the function. This will be easily maintained in the long run. ","bailliem",0,0
"Feature/attrition","https://github.com/openpharma/visR/pull/166","closed",2021-05-07,2021-05-11,2021-05-11,2,"Added attrition features with new API including `get_attritition`, `apply_attrition` and `plot`. Tests are provided for get and apply, but not yet for plotting.","cschaerfe",4,0
"fix warnings & notes","https://github.com/Roche/respectables/issues/10","closed",2021-05-07,2021-05-19,2021-05-19,0,"","waddella",12,0
"Fixed several errors in the examples and generated the doc","https://github.com/openpharma/visR/pull/167","closed",2021-05-07,2021-05-07,2021-05-07,0,"","timtreis",0,0
"rebase doc/clear-notes","https://github.com/openpharma/visR/pull/163","closed",2021-05-07,2021-05-07,2021-05-07,0,"rebase branch with develop to align with new updates. ","bailliem",0,0
"Replace globalvariables use with maintainable approach","https://github.com/openpharma/visR/issues/165","open",2021-05-07,2021-05-07,NA,0,"Work through the list of variables referenced in visR globalvariable to set those variables to NULL within the function call, where possible. At the moment we are using this to suppress note in R CMD check ""no visible binding"". Ideally, we resolve this at the function level. 

See here for more details on the alternative approach https://github.com/STAT545-UBC/Discussion/issues/451

","bailliem",45,45
"Added missing tests","https://github.com/openpharma/visR/pull/169","closed",2021-05-08,2021-05-10,2021-05-10,0,"","timtreis",2,0
"Improved tests and integrated skip_on_cran() for vdiffr","https://github.com/openpharma/visR/pull/170","closed",2021-05-08,2021-05-31,2021-05-10,0,"","timtreis",2,-21
"Resolve plot warning rmd check","https://github.com/openpharma/visR/pull/171","closed",2021-05-09,2021-05-22,2021-05-11,4,"1. change survfit to survfit_visR class in estimate_KM. This is extension of survfit
2. remove rewriting default plot within package. just export s3 plot class
3. Change plot to plot.survfit_visR to expect survfit_visR object now.
4. survival::survfit.plot is not overrided. so plot(surfit) is original survival plot, while plot(survfit_visr) is visR plots. 
5. remove all reference to visR::plot() as plot is a generic s3 of graphics::plot which expects survfit_visR object","bailliem",2,-11
"update s3 methods to be consistent","https://github.com/openpharma/visR/pull/172","closed",2021-05-09,2021-05-22,2021-05-22,2,"update s3 methods to be consistent
* risktables
* get_quantile
* get_summary
* get_COX_HR

changed files so object class = x and ensure that ... was present in function call for S3 methods","bailliem",13,0
"Added last missing test","https://github.com/openpharma/visR/pull/173","closed",2021-05-10,2021-05-10,2021-05-10,0,"","timtreis",0,0
"Added skip_on_cran() to add_CI tests.","https://github.com/openpharma/visR/pull/174","closed",2021-05-10,2021-05-10,2021-05-10,0,"","timtreis",0,0
"Removed all svgs. Regenerate, once visR is in final state","https://github.com/openpharma/visR/pull/175","closed",2021-05-10,2021-05-31,2021-05-10,0,"","timtreis",0,-21
"Updated man page","https://github.com/openpharma/visR/pull/176","closed",2021-05-10,2021-05-31,2021-05-10,0,"","timtreis",0,-21
"Warning message when using `insert_rrow`","https://github.com/Roche/rtables/issues/199","closed",2021-05-10,2021-05-11,2021-05-11,3,"There is a new warning message when using `insert_rrow` : 

```r
library(rtables)
tbl <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  analyze(""AGE"") %>%
  build_table(ex_adsl)

insert_rrow(tbl, rrow(""Total xx"", """"), at = 1)

```

```
Warning message:
In matrix(cstrs, byrow = TRUE, nrow = nrow(tt), ncol = ncol(tt)) :
  data length [4] is not a sub-multiple or multiple of the number of columns [3]
```

Session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C              LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.7.0004 magrittr_2.0.1    

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0   rlang_0.4.9 
```","anajens",1,0
"Warning message with nested `summarize_row_groups`","https://github.com/Roche/rtables/issues/200","closed",2021-05-10,2021-05-11,2021-05-10,3,"I guess this related to the use character analysis variable (eg `l3` below) but wanted to report here just in case it's a bug.

```r
library(rtables)

dat2 <- data.frame(
  l1 = factor(c(""A"", ""B"")),
  l2 = factor(c(""aa1"", ""bb1"")),
  l3 = c(""aaa1"", ""bbb1""),
  stringsAsFactors = FALSE
)

basic_table() %>%
  split_rows_by(""l1"") %>%
  summarize_row_groups() %>%
  split_rows_by(""l2"") %>%
  summarize_row_groups() %>%
  split_rows_by(""l3"") %>%
  summarize_row_groups() %>%
  build_table(dat2)

```
Creates the table but there is a warning:
```
           all obs
------------------
A          1 (50%)
  aa1      1 (50%)
    aaa1   1 (50%)
  bb1      0 (0%) 
B          1 (50%)
  aa1      0 (0%) 
  bb1      1 (50%)
    bbb1   1 (50%
Warning messages:
1: In max(kiddfs$abs_rownumber, na.rm = TRUE) :
  no non-missing arguments to max; returning -Inf
2: In max(kiddfs$abs_rownumber, na.rm = TRUE) :
  no non-missing arguments to max; returning -Inf
3: In max(kiddfs$abs_rownumber, na.rm = TRUE) :
  no non-missing arguments to max; returning -Inf
4: In max(kiddfs$abs_rownumber, na.rm = TRUE) :
  no non-missing arguments to max; returning -Inf
5: In max(kiddfs$abs_rownumber, na.rm = TRUE) :
  no non-missing arguments to max; returning -Inf
6: In max(kiddfs$abs_rownumber, na.rm = TRUE) :
  no non-missing arguments to max; returning -Inf
```

Session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C              LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.7.0004 magrittr_2.0.1    

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0   rlang_0.4.9   
```","anajens",0,-1
"Why does `in_rows` return `footnote` attribute?","https://github.com/Roche/rtables/issues/198","closed",2021-05-10,2021-05-10,2021-05-10,1,"In the case where `in_rows` wraps multiple rows, the object includes both `footnotes` and `footnote` attribute vs only `footnotes` for single row. Why does this happen? 

```r
library(rtables)
r1 <- in_rows(
  .list = list(
    ncols = rcell(5L, ""xx"", label = ""ncol"")
  )
)
attributes(r1$ncols)
```

```
$format
[1] ""xx""

$colspan
[1] 1

$label
[1] ""ncol""

$indent_mod
[1] 0

$footnotes
list()

$class
[1] ""CellValue""
```

```r
r2 <- in_rows(
  .list = list(
    ncols = rcell(5L, ""xx"", label = ""ncol""),
    nrows = rcell(10L, ""xx"", label = ""nrow"")
  )
)
attributes(r2$ncols)
```

```
$format
[1] ""xx""

$colspan
[1] 1

$label
[1] ""ncol""

$indent_mod
[1] 0

$footnotes
list()

$class
[1] ""CellValue""

$footnote
list()
```

Session Info:
```
> sessionInfo()
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.7.0004 magrittr_2.0.1    

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   rlang_0.4.
```
","anajens",0,0
"[R CMD check fix] moving jsonlite to suggests","https://github.com/pharmaR/riskmetric/pull/202","closed",2021-05-11,2021-05-11,2021-05-11,1,"`jsonlite` is unused in package code, and only used in tests. Moving to `Suggests` section of depends.","dgkf",0,0
"Api/plot visr rename","https://github.com/openpharma/visR/pull/178","closed",2021-05-11,2021-05-11,2021-05-11,0,"","bailliem",0,0
"Gabe tabletree work","https://github.com/Roche/rtables/pull/201","closed",2021-05-11,2021-05-11,2021-05-11,0,"Bundle of fixes for bugs reported by @anajens and her team.","gmbecker",0,0
"Indentation of analysis rows under `insert_rrow`","https://github.com/Roche/rtables/issues/202","open",2021-05-11,2021-05-11,NA,0,"Currently, when using `insert_rrow` with a label row only the first set of analysis rows are indented. However if a non label row is inserted, all rows below are indented. Is this intentional? 

```r
library(rtables)

tbl <- basic_table() %>%
  analyze(""AGE"", show_labels = ""hidden"") %>%
  analyze(""SEX"", show_labels = ""hidden"", indent_mod = 1L) %>%
  analyze(""BMRKR1"", show_labels = ""hidden"", indent_mod = 1L) %>%
  build_table(ex_adsl)
```

```
> tbl
                     all obs
----------------------------
Mean                  34.88 
  F                    222  
  M                    166  
  U                     9   
  UNDIFFERENTIATED      3   
  Mean                5.76  
> insert_rrow(tbl, rrow(""ABC heading""), at = 2)
                       all obs
------------------------------
Mean                    34.88 
  ABC heading                 
    F                    222  
    M                    166  
    U                     9   
    UNDIFFERENTIATED      3   
  Mean                  5.76  
> insert_rrow(tbl, rrow(""ABC heading"", """"), at = 2)
                     all obs
----------------------------
Mean                  34.88 
ABC heading                 
  F                    222  
  M                    166  
  U                     9   
  UNDIFFERENTIATED      3   
  Mean                5.76  
```

Session info:
```
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 9 (stretch)

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.19.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rtables_0.3.7.0005 magrittr_2.0.1    

loaded via a namespace (and not attached):
[1] compiler_3.6.3  htmltools_0.4.0 tools_3.6.3     Rcpp_1.0.4.6    digest_0.6.25   packrat_0.5.0   rlang_0.4.9
```","anajens",41,41
"Rename plot function","https://github.com/openpharma/visR/pull/177","closed",2021-05-11,2021-05-21,2021-05-21,2,"* Rename plot to visR
* Replace all instances of visR::plot with visR::visr
* rename plot.R to plot_visr.R
* tidy up documentation","bailliem",10,0
"New split function - a multidimensional generalization of current split family functions","https://github.com/Roche/rtables/issues/203","open",2021-05-12,2021-06-17,NA,13,"Hi @gmbecker ( @danielinteractive - FYI )

The issue I am raising here is quite similar to recent #109 (`trim_levels_by_map`), but it is more generic.

Sometimes, when splitting rows with `split_rows_by` based on a certain variable, we may want to keep/drop/remove the levels of not only the split variable, but also the levels of other variables in data split. As an example for 'keep' scenario; consider a simple data set defined below
```
> d <- data.frame(V1 = factor(rep(c(""V1L1"", ""V1L2""), each = 2), levels = c(""V1L1"", ""V1L2"")),
                  V2 = factor(c(""V2L1"", ""V2L2"", ""V2L3"", ""V2L4""), levels = c(""V2L1"", ""V2L2"", ""V2L3"", ""V2L4"")))
> d
#     V1   V2
# 1 V1L1 V2L1
# 2 V1L1 V2L2
# 3 V1L2 V2L3
# 4 V1L2 V2L4
```
Lets say I split rows of `d` with `split_rows_by(V1)`. Now, after the split I would like to keep the following levels **only**
 - `V1L1` for `V1` and `V2L1`, `V2L2` for `V2` for the first data split (rows 1-2)
 - `V1L2` for `V1` and `V2L3`, `V2L4` for `V2` for the second data split (rows 3-4).

Similar examples can be constructed for drop/remove scenarios. So this is a kind of multidimensional generalization of current split functions for variables other than just split variable.

I wrote this below function for the 'keep' scenario, as an example. It is far from perfect but works well for at least some basics scenarios I was able to create.

```
# Custom split function to use with split_rows_by. 
# It is a generalization of rtables::keep_split_levels.
# It not only keeps a specific levels of splitting variable but also 
# allows to keep levels of other variables after the split, 
# conditionally on the level of the split variable, as specified by map
keep_split_levels_of_vars <- function(map = NULL) {
  
  if (is.null(map))
    stop(""No map dataframe was provided."")
  
  myfun <- function(df, spl, vals = NULL, labels = NULL, trim = FALSE) {
    
    splvar <- rtables:::spl_payload(spl)
    spllev <- df[[splvar]]
    spllevkeep <- as.character(na.omit(unique(map[[splvar]]))) # levels of split variable to keep 
    
    if (is.factor(spllev) && !all(spllevkeep %in% levels(spllev))) 
      stop(""Attempted to keep invalid factor level(s) in split "", setdiff(spllevkeep, levels(spllev)))
    
    df2 <- df[spllev %in% spllevkeep, ]
    rtables:::spl_child_order(spl) <- spllevkeep
    
    ret <- rtables:::.apply_split_inner(spl, df2, vals = spllevkeep, labels = labels, trim = trim)
    
    # keep non-split variables levels
    vars <- setdiff(colnames(map), splvar)  # variable names except split variable
    ret$datasplit <- lapply(ret$values, function(l) {
      
      df3 <- ret$datasplit[[l]]
      
      for (v in vars) {
        lev <- df3[[v]]
        levkeep <- as.character(na.omit(unique(map[map[, splvar] == l, v])))
        if (is.factor(lev) && !all(levkeep %in% levels(lev))) 
          stop(""Attempted to keep invalid factor level(s) in split "", setdiff(levkeep, levels(lev)))
        
        df3 <- df3[lev %in% levkeep, , drop = FALSE]
        
        if (is.factor(lev))
          df3[[v]] <- factor(as.character(df3[[v]]), levels = levkeep)
      }
      
      df3
    })
    names(ret$datasplit) <- ret$values
    ret
  }
  
  myfun
}
```

I would be thankful, if you could share your thoughts on this idea, especially in case we could achieve the same results with some existing `rtables` functionality? or if not - how feasible would be to add this functionality into `rtables`. 

Thank you.

W.","ghost",40,4
"update","https://github.com/openpharma/visR/pull/179","closed",2021-05-13,2021-05-13,2021-05-13,0,"","SHAESEN2",0,0
"Test/add annotation","https://github.com/openpharma/visR/pull/180","closed",2021-05-14,2021-05-22,2021-05-22,1,"","SHAESEN2",8,0
"Add some examples to documentation","https://github.com/Roche/respectables/pull/12","closed",2021-05-18,2021-05-28,2021-05-28,0,"closes #6 

@gmbecker I have added a few examples to the `table_recipe_utils.R` documentation using `roxygen2`, please take a look - thanks!","edelarua",10,0
"complete readme","https://github.com/Roche/respectables/issues/13","open",2021-05-19,2021-05-19,NA,0,"","waddella",33,33
"fix tooltip error when data is empty list","https://github.com/Roche/ggtips/pull/62","closed",2021-05-19,2021-05-19,2021-05-19,1,"It seems that on barplot, that we have in our application, the data is an empty list not null. It throws errors when it finds small rectangles from small bars on the plot.","jcubic",0,0
"gh-pages branch with the docs only","https://github.com/Roche/respectables/issues/14","closed",2021-05-19,2021-05-28,2021-05-28,0,"- [ ] create a branch `gh-pages`, delete the R package
- [ ] update the circleci publishing pkgdown website to that branch (only for master branch changes) (filter option).
- [ ] Gabe or Adrian set gh-pages as website
- [ ] Gabe or Adrian set the repository URL","waddella",9,0
"Refactor pkg_ref functions","https://github.com/pharmaR/riskmetric/pull/203","closed",2021-05-19,2021-05-26,2021-05-26,1,"This refactors the use of `pkg_ref()` by adding functions to explicitly create pkg_ref objects through `pkg_<src>` functions. The `pkg_ref()` function still works exactly as it did before, but instead will determine the source if none is passed and call the correct `pkg_<src>` function.

I've also added some skeleton code and documentation for pkg_cohort objects. Right now this is just a list but #198 would probably be where this development takes place.","elimillera",7,0
"top-left indentation is lost with Viewer or as_html","https://github.com/Roche/rtables/issues/204","closed",2021-05-19,2021-06-02,2021-05-28,7,"Following fix for #194, this is still an issue.

The nice indentation in the header is lost when displaying rtables in the Viewer or as html: 
![image](https://user-images.githubusercontent.com/43623360/117355538-b58e9780-ae80-11eb-87b6-ea4121683339.png)

![image](https://user-images.githubusercontent.com/43623360/117355565-c17a5980-ae80-11eb-9e4c-7386571b106d.png)

_Originally posted by @anajens in https://github.com/Roche/rtables/issues/194#issuecomment-833806000_","anajens",9,-5
"missing image from packagedown site","https://github.com/pharmaR/riskmetric/issues/204","closed",2021-05-20,2021-05-26,2021-05-26,1,"![image](https://user-images.githubusercontent.com/10111024/119040929-fcea4d00-b983-11eb-8e8c-ee34abc03095.png)
","bms63",6,0
"Update readme","https://github.com/openpharma/visR/pull/181","closed",2021-05-21,2021-05-21,2021-05-21,1,"","epijim",0,0
"Update workflow image path and location","https://github.com/pharmaR/riskmetric/pull/205","closed",2021-05-21,2021-05-26,2021-05-26,1,"Thanks to @bms63 for finding this!

I copied the workflow image to man/figures which I believe is the standard place to put images in vignettes. Updated the fig.path in the vignette and linked to that instead.

Closes #204 ","elimillera",5,0
"fix issue with getrisk. ","https://github.com/openpharma/visR/pull/185","closed",2021-05-22,2021-05-22,2021-05-22,0,"object overwritten with update to function. order of ... in wrong place.","bailliem",0,0
"Rebuild documentation with passing dev branch","https://github.com/openpharma/visR/pull/184","closed",2021-05-22,2021-05-27,2021-05-27,2,"Test rebuilding the package doc with passing dev branch","bailliem",5,0
"rename plot to visr in add_annotation tests","https://github.com/openpharma/visR/pull/182","closed",2021-05-22,2021-05-22,2021-05-22,0,"* clean up description - remove dependencies not required
* rename plot to visr in tests for add annotation","bailliem",0,0
"Update readme - change ggplot theme","https://github.com/openpharma/visR/pull/183","closed",2021-05-22,2021-05-22,2021-05-22,0,"Rebuild readme md file
","bailliem",0,0
"clean up top level","https://github.com/openpharma/visR/pull/187","closed",2021-05-23,2021-05-23,2021-05-23,1,"clean up top level
up to date rbuild ignore","bailliem",0,0
"updated get quantile function","https://github.com/openpharma/visR/pull/186","closed",2021-05-23,2021-05-27,2021-05-27,0,"","SHAESEN2",4,0
"Add a feature for changing legend font size","https://github.com/openpharma/visR/issues/189","closed",2021-05-26,2021-05-31,2021-05-31,0,"`define_theme()` function has an option for changing the font size of `axis` and `ticks`. Would that be possible to add support for changing legend font size as well?

```R
theme <- visR::define_theme(fontsizes = list(""axis"" = 15,
                                             ""ticks"" = 15),
                            fontfamily = ""Helvetica"",
                            grid = TRUE,
                            bg = ""white"")
```","lesniewa",5,0
"get_risktable() function breaks in case of ""(missing)"" data","https://github.com/openpharma/visR/issues/190","closed",2021-05-26,2021-05-28,2021-05-28,2,"#### Issue description
I have missing values in the dataset, which are being replaced with the ""(missing)"" label. 
```
(missing)         F         M 
        1     21099     16056 
```
I try to run `estimate_KM()` and then `get_risktable()` on this dataset. The `visR` plot is being rendered correctly:
![image](https://user-images.githubusercontent.com/84186593/119649563-10cdfd00-be23-11eb-9fbc-cdff88801595.png)

However, the risk table contains only the first 3 rows:
![image](https://user-images.githubusercontent.com/84186593/119649726-3e1aab00-be23-11eb-9cc5-43d62518bacd.png)

#### Steps to reproduce the issue
```R
demog_suvival_object <- g_demographics_survival %>%
  visR::estimate_KM(strata = ""gender"", CNSR = ""hasdeathevent"", AVAL = ""followuptime"")
gg <- visR::visr(demog_suvival_object)
gg

visR::get_risktable(demog_suvival_object)
```

#### What's the expected result?
The risk table containing all points from the graph. (0,2,4,6,8,10,12,14,16,18,20,22,24)

#### What's the actual result?
The risk table containing only 3 points from the graph. (0,2,4)
","lesniewa",2,0
"grid parameter from define_theme() function dosen't update a plot","https://github.com/openpharma/visR/issues/188","closed",2021-05-26,2021-05-31,2021-05-31,1,"#### Issue description
I would like to render a graph with a grid and white background (instead of default gray). My understating was that it should feasible to achieve by a combination of `grid` and `bg` parameters from `define_theme()`. However, passing TRUE and FALSE values in the `grid` parameter generate the same result.

#### Steps to reproduce the issue
```r
lung_cohort <- survival::lung

lung_cohort <- lung_cohort %>%  
  dplyr::mutate(sex = as.factor(ifelse(sex == 1, ""Male"", ""Female"")))  %>%  
  dplyr::rename(Age = ""age"", Sex = ""sex"", Status = ""status"", Days = ""time"")

# Select variables of interest and change names to look nicer
lung_cohort_survival <- lung_cohort %>%  
  dplyr::select(Age, Sex, Status, Days)  

# For the survival estimate, the censor must be 0 or 1
lung_cohort_survival$Status <- lung_cohort_survival$Status - 1

# Estimate the survival curve
lung_suvival_object <- lung_cohort_survival %>% 
  visR::estimate_KM(strata = ""Sex"", CNSR = ""Status"", AVAL = ""Days"")

gg <- visR::visr(lung_suvival_object,
                 y_label = ""Survival probability"",
                 x_label = ""Time (years)"",
                 x_units = NULL,
                 x_ticks = NULL,
                 y_ticks = NULL,
                 fun = ""surv"",
                 legend_position = ""top"",
                 box_width = 50,
                 font_size = 50,
                 fill = ""white"",
                 border = ""white"")

theme <- visR::define_theme(fontsizes = list(""axis"" = 15,
                                             ""ticks"" = 15),
                            fontfamily = ""Helvetica"",
                            grid = TRUE,
                            bg = ""white"")
gg  %>% visR::add_theme(theme)
```

#### What's the expected result?
Plot with a white background and with a grid.

#### What's the actual result?
Plot with a white background, but without a grid.

#### Additional details / screenshot
![image](https://user-images.githubusercontent.com/84186593/119646394-656f7900-be1f-11eb-9238-38da46bd7c8a.png)
","lesniewa",5,0
"remove top white rect in svg","https://github.com/Roche/ggtips/pull/63","closed",2021-05-26,2021-05-26,2021-05-26,1,"By default, svgilite is adding an additional white rectangle to SVG so transparency added using GGPlot doesn't work.

See the last comment in https://github.com/r-lib/svglite/issues/41","jcubic",0,0
"rename add_theme to apply_theme","https://github.com/openpharma/visR/issues/193","closed",2021-05-26,2021-05-31,2021-05-31,0,"within wiki https://github.com/openpharma/visR/wiki/Naming-Conventions-and-Coding-Style","bailliem",5,0
"Test/visr plot","https://github.com/openpharma/visR/pull/191","closed",2021-05-26,2021-05-27,2021-05-27,0,"","timtreis",1,0
"update wiki with package verbs","https://github.com/openpharma/visR/issues/192","closed",2021-05-26,2021-05-30,2021-05-30,2,"update wiki page https://github.com/openpharma/visR/wiki/Naming-Conventions-and-Coding-Style
","bailliem",4,0
"Bugfix/20210527 apply theme related","https://github.com/openpharma/visR/pull/195","closed",2021-05-27,2021-05-31,2021-05-31,0,"Not yet mergeable, just as a tool for easier resolving of merge conflicts. Will also be later used to address issues and to be merged back into develop.","timtreis",4,0
"change behaviour of get risktable","https://github.com/openpharma/visR/pull/194","closed",2021-05-27,2021-05-28,2021-05-28,0,"One issue is the alginment of the graph and the risktables. I thought I fixed it a few weeks ago but now the behaviour reverted again. We will need to fix this.","SHAESEN2",1,0
"Initial CI for publishing","https://github.com/Roche/respectables/pull/16","closed",2021-05-27,2021-05-27,2021-05-27,0,"","dinakar29",0,0
"Initial CI for publishing","https://github.com/Roche/respectables/pull/15","closed",2021-05-27,2021-05-27,2021-05-27,0,"Publish docs","dinakar29",0,0
"14 website","https://github.com/Roche/respectables/pull/17","closed",2021-05-28,2021-05-28,2021-05-28,1,"","waddella",0,0
"18 - Add basic governance","https://github.com/Roche/respectables/pull/19","closed",2021-05-28,2021-05-31,2021-05-31,2,"Tracks Issue #18 

Add boilerplate governance standards for folks who want to contribute to the project. 

Features included:

1. Bug and Feature Request templates when creating new issues. 
2. Code Owners who will be automatically added as reviewers when a new PR is created. This provides us with the ability to merge PRs _only_ after the PR has been approved by one or more code owners. 
3. Basic contribution guidelines.
4. A simple PR template to allow contributors to make sure that they are abiding by the governance standards set herein. 

Refer to additional branch-protection related governance settings here: https://github.com/Roche/respectables/settings/branch_protection_rules/20730306","dinakar29",3,0
"Governance for contributions and project management","https://github.com/Roche/respectables/issues/18","open",2021-05-28,2021-05-28,NA,0,"Add basic governance standards for easier project management and auto-tagging of bugs and feature requests. Also add default code owners for auto-assigning reviewers during pull requests.","dinakar29",24,24
"20 - Basic Github actions","https://github.com/Roche/respectables/pull/21","open",2021-05-30,2021-06-14,NA,1,"Track Issue #20

Starter Github actions to enhance DX (developer experience).
Most of these have been borrowed from https://github.com/r-lib/actions/tree/master/examples and some have been lifted-and-shifted from CircleCI
","dinakar29",22,7
"Github Actions over CircleCI","https://github.com/Roche/respectables/issues/20","open",2021-05-30,2021-05-30,NA,1,"Github actions workflows is increasing in popularity in the OSS community, we should look into utilizing it over CircleCI. Some of the advantages of GH actions over CircleCI include:

* Simple and easy to understand workflow definition syntax
* The availability of a vast number of both Github supported and community actions, allowing one to automate almost anything
* The ability and ease with which one can create a custom action
* Strong integration into the Github SCM, i.e. no need to worry about webhook configurations and secrets management
... among many others.","dinakar29",22,22
"rename summarize to avoid masking of dplyr summarize","https://github.com/openpharma/visR/issues/196","closed",2021-05-30,2021-05-31,2021-05-31,0,"The default utility function for summarizing data in get_tableone is called `summarize` and thus overwrites the dplyr _summarize_ function. Rename to something else","cschaerfe",1,0
"Renamed summary functions for table 1","https://github.com/openpharma/visR/pull/197","closed",2021-05-30,2021-05-31,2021-05-31,2,"","cschaerfe",1,0
"Fixed issue in which the data source got duplicated when interacting.","https://github.com/openpharma/visR/pull/200","closed",2021-05-31,2021-05-31,2021-05-31,1,"In response to an (ancient) open issue.","timtreis",0,0
"Should we expand the cicd testing via rhub?","https://github.com/openpharma/visR/issues/202","open",2021-05-31,2021-05-31,NA,1,"https://r-hub.github.io/rhub/articles/rhub.html

above lets you test across many more platforms- should we look to more than the current few platforms?","epijim",21,21
"Test CI/CD develop to main checks","https://github.com/openpharma/visR/pull/199","closed",2021-05-31,2021-06-01,2021-06-01,0,"Test to check CICD runs merging to master. 

Want to check that we can merge to master from a clean develop and that documentation automatically builds. ","bailliem",1,0
"don't set transparency by default","https://github.com/Roche/ggtips/pull/64","closed",2021-06-01,2021-06-01,2021-06-01,0,"It's better to leave transparency to the user (original version didn't have `...` for `ggplot2::ggsave`)","jcubic",0,0
"Vignette to demonstrate the use of the styling functions","https://github.com/openpharma/visR/pull/204","closed",2021-06-01,2021-06-05,2021-06-02,0,"","timtreis",1,-3
"x_units is not used in the presence of x_label","https://github.com/openpharma/visR/issues/203","open",2021-06-01,2021-06-02,NA,1,"#### Issue description
When specifying the `x_units` parameter in `visR::visr()`, it doesn't end up in the plot.


#### Steps to reproduce the issue

```r
devtools::install_github(""openpharma/visR"", ref = ""release/cran-june2021"")
library(visR)
lung_cohort <- survival::lung

lung_suvival_object <- lung_cohort %>%  
  dplyr::mutate(sex = as.factor(ifelse(sex == 1, ""Male"", ""Female"")))  %>%  
  dplyr::mutate(status = status -1) %>%
  dplyr::rename(Age = ""age"", Sex = ""sex"", Status = ""status"", Days = ""time"") %>%
  visR::estimate_KM(strata = ""Sex"", CNSR = ""Status"", AVAL = ""Days"")

lung_suvival_object %>%
  visR::visr(x_label = ""Time"",
             y_label = NULL, # NULL (default) causes the label to be deducted from the used function
             x_units = ""days"",
             x_ticks = seq(0, 1200, 200),
             y_ticks = seq(0, 100, 20),
             fun = ""pct"") 
```
![image](https://user-images.githubusercontent.com/12818242/120322937-407a7a80-c2e5-11eb-8e79-5156ec46188f.png)

#### What's the expected result?
- A plot with ""Time (days)"" as the x-axis label

#### What's the actual result?
- A plot with ""Time"" as the x-axis label

#### Additional details / screenshot
","timtreis",20,19
"4 make a unit test","https://github.com/Roche/respectables/pull/22","closed",2021-06-02,2021-06-04,2021-06-04,3,"@gmbecker I made a unit test for the `subjid_func` function to review. I'm not sure if there's a reason why the `test.R` file was commented out so I left it how it was.

close #22 ","edelarua",2,0
"Add cran release document","https://github.com/openpharma/visR/pull/208","closed",2021-06-02,2021-06-02,2021-06-02,0,"","bailliem",0,0
"Align develop with current release branch","https://github.com/openpharma/visR/pull/205","closed",2021-06-02,2021-06-02,2021-06-02,0,"Level up develop with current Release/cran june2021","bailliem",0,0
"Build main site","https://github.com/openpharma/visR/pull/206","closed",2021-06-02,2021-06-02,2021-06-02,0,"Rebuild the main documentation","bailliem",0,0
"Not all ggplot2 theming options are actually applied to our plot","https://github.com/openpharma/visR/issues/207","open",2021-06-02,2021-06-02,NA,0,"#### Issue description

Not all ggplot2 aesthetics modifications are applied to the plot. 

#### Steps to reproduce the issue

```r
library(visR)
library(survival)
library(ggplot2)

lung_cohort <- survival::lung

lung_cohort <- lung_cohort %>%  
  dplyr::mutate(sex = as.factor(ifelse(sex == 1, ""Male"", ""Female"")))  %>%  
  dplyr::mutate(status = status - 1) %>%
  dplyr::rename(Age = ""age"", Sex = ""sex"", Status = ""status"", Days = ""time"") 

lung_suvival_object <- lung_cohort %>%
  visR::estimate_KM(strata = ""Sex"", CNSR = ""Status"", AVAL = ""Days"")

p <- lung_suvival_object %>%
  visR::visr()

p +
  ggplot2::theme_bw() +
  ggplot2::xlab(""Time (days)"")
```

#### What's the expected result?

- The x-axis label is changed to ""Time (days)""


#### What's the actual result?

- The x-axis label is unchanged.


#### Additional details / screenshot
","timtreis",19,19
"Merge in CICD changes","https://github.com/openpharma/visR/pull/210","closed",2021-06-03,2021-06-04,2021-06-04,1,"This doesn't effect the R package - readme and CICD fixes

Closes #209 ","epijim",1,0
"Readme contribution plot is broken on gh actions","https://github.com/openpharma/visR/issues/209","closed",2021-06-03,2021-06-14,2021-06-14,2,"#### Issue description

![image](https://user-images.githubusercontent.com/2760096/120709893-bb968900-c4bd-11eb-8600-1437d8284e79.png)


trying to figure why we get above via CICD in the branch fixreadme","epijim",11,0
"1 fix pkgdown site","https://github.com/Roche/respectables/pull/24","closed",2021-06-04,2021-06-06,2021-06-06,0,"@gmbecker I have made a few updates to the pkgdown site.

closes #24 ","edelarua",2,0
"Add overall N to count_layer?","https://github.com/atorus-research/Tplyr/issues/11","open",2021-06-04,2021-06-09,NA,2,"I have a table I am trying to produce with Tplyr
This happens to be a Phase-1 study, so N=8 in each column

![image](https://user-images.githubusercontent.com/75215958/120808061-aac63180-c516-11eb-9493-58bdcb7a4d91.png)

Is there, or can there be, a way of specifying the overall N= inside the `group_count()` layer?

`set_format_strings(f_str(""xx/xx (xxx.x)"", distinct_n, N, distinct_pct))` ?

Thanks,
Robert","Robert-Krajcik",17,12
"Adress warning from future package","https://github.com/openpharma/simaerep/issues/6","closed",2021-06-04,2021-06-10,2021-06-10,2,"Warning: UNRELIABLE VALUE: Future ('<none>') unexpectedly generated random
numbers without specifying argument '[future.]seed'. There is a risk that those
random numbers are not statistically sound and the overall results might be
invalid. To fix this, specify argument '[future.]seed', e.g. 'seed=TRUE'. This
ensures that proper, parallel-safe random numbers are produced via the L'Ecuyer-
CMRG method. To disable this check, use [future].seed=NULL, or set option
'future.rng.onMisuse' to ""ignore"".","erblast",6,0
"do not use conditional join for sas file example","https://github.com/openpharma/simaerep/issues/7","closed",2021-06-04,2021-06-10,2021-06-10,1,"consider whether long table with UNION of events (AEs, visits) can be used instead","erblast",6,0
"Finish tinytest tests","https://github.com/Roche/respectables/issues/23","open",2021-06-04,2021-06-04,NA,0,"Hi @gmbecker 

would you mind to finish the test around

```r
goodrec <- tribble(~variables, ~dependencies, ~func, ~func_args, ~keep,
                   ""VAR1"", no_deps, seq_n, NULL, TRUE)

goodrec2 <- tribble(~variables, ~dependencies, ~func, ~func_args, ~keep,
                    ""VAR1"", no_deps, seq_n, NULL, TRUE)
```

we are closing the #22 and those couple of lines were left","waddella",17,17
"Bugfix/20210605 xlabel","https://github.com/openpharma/visR/pull/211","open",2021-06-05,2021-06-10,NA,0,"","timtreis",16,11
"Changed the way the x- and y-axis labels are applied","https://github.com/openpharma/visR/pull/212","open",2021-06-05,2021-06-17,NA,6,"Very minor change that however fixes the previous incompatibility with ggplot2s' xlab/ylab commands.

Adresses issue https://github.com/openpharma/visR/issues/207

Rough troubleshooting train of thought:
a) By inspecting the plot components I noticed that the desired label actually ends up in the plot data.
b) Experiment around with priorities of ggplot scales and labels
c) We're currently setting the labels through the scales which seems to make them ""write-protected"" to the xlab/ylab commands.","timtreis",16,4
"In the absence of a specified x-label or a data-derived label, should the x-axis be blank?","https://github.com/openpharma/visR/issues/213","open",2021-06-08,2021-06-08,NA,0,"See title.

Related to the comments in PR https://github.com/openpharma/visR/pull/211 and https://github.com/openpharma/visR/pull/212.","timtreis",13,13
"Stroke color","https://github.com/Roche/ggtips/pull/65","closed",2021-06-09,2021-06-09,2021-06-09,1,"","cosi1",0,0
"Added code to restore user's default options after changes","https://github.com/openpharma/visR/pull/219","closed",2021-06-10,2021-06-10,2021-06-10,0,"Addresses issue https://github.com/openpharma/visR/issues/218","timtreis",0,0
"Changed two occurrences of \dontrun()","https://github.com/openpharma/visR/pull/217","closed",2021-06-10,2021-06-10,2021-06-10,0,"Addresses issue https://github.com/openpharma/visR/issues/216","timtreis",0,0
"Complete logic","https://github.com/openpharma/staged.dependencies/issues/1","open",2021-06-10,2021-06-13,NA,0,"- [x] install from cloud github and on-premise github
- [ ] extend `yaml` to include downstream and upstream 
     - note downstream is only used for testing
- [x] extend to work with gitlab
- [x] check that rstudio addins work
","waddella",11,8
"CRAN: \dontrun{} should only be used if the example really cannot be executed","https://github.com/openpharma/visR/issues/216","closed",2021-06-10,2021-06-10,2021-06-10,1,"Feedback from CRAN:

\dontrun{} should only be used if the example really cannot be executed
(e.g. because of missing additional software, missing API keys, ...) by
the user. That's why wrapping examples in \dontrun{} adds the comment
(""# Not run:"") as a warning for the user.
Does not seem necessary.
Please unwrap the examples if they are executable in < 5 sec, or replace
\dontrun{} with \donttest{}.","timtreis",0,0
"CRAN: Don't override user's options","https://github.com/openpharma/visR/issues/218","closed",2021-06-10,2021-06-10,2021-06-10,1,"Please make sure that you do not change the user's options, par or
working directory. If you really have to do so within functions, please
ensure with an *immediate* call of on.exit() that the settings are reset
when the function is exited. e.g.:
...
old <- options()         # code line i
on.exit(options(old))    # code line i+1
...
options(scipen = 999)
...
e.g.: utils_general.R
If you're not familiar with the function, please check ?on.exit. This
function makes it possible to restore options before exiting a function
even if the function breaks. Therefore it needs to be called immediately
after the option change within a function.
Please always make sure to reset to user's options(), working directory
or par() after you changed it in examples and vignettes and demos.
e.g.: inst/doc/..
old <- options(digits = 3)
...
options(old)","timtreis",0,0
"CRAN: Inconsistent usage of T/F vs TRUE/FALSE","https://github.com/openpharma/visR/issues/214","closed",2021-06-10,2021-06-10,2021-06-10,2,"Our codebase currently has occurrences of both T/F and TRUE/FALSE. CRAN dictates that only TRUE/FALSE are allowed, so we should stick to the full descriptors.  ","timtreis",0,0
"CRAN: installed.packages() can be very slow, try not to use it","https://github.com/openpharma/visR/issues/220","closed",2021-06-10,2021-06-10,2021-06-10,1,"You are using installed.packages():
""This needs to read several files per installed package, which will be
slow on Windows and on some network-mounted file systems.
It will be slow when thousands of packages are installed, so do not use
it to find out if a named package is installed (use find.package or
system.file) nor to find out if a package is usable (call
requireNamespace or require and check the return value) nor to find
details of a small number of packages (use packageDescription).""
[installed.packages() help page]","timtreis",0,0
"Devel","https://github.com/openpharma/simaerep/pull/9","closed",2021-06-10,2021-06-10,2021-06-10,2,"","erblast",0,0
"Ensure all function documentation describes return value","https://github.com/openpharma/visR/issues/222","closed",2021-06-10,2021-06-11,2021-06-11,0,"#### Issue description

Please add \value to .Rd files regarding exported methods and explain
the functions results in the documentation. Please write about the
structure of the output (class) and also what the output means. (If a
function does not return a value, please document that too, e.g.
\value{No return value, called for side effects} or similar)
Missing Rd-tags in up to 18 .Rd files, e.g.:
      get_risktable.Rd: \value
      get_tableone.Rd: \value
      pipe.Rd: \value
      render.Rd: \value
      summarize_long.default.Rd: \value
      summarize_long.factor.Rd: \value

","bailliem",1,0
"Issue/222 value docs","https://github.com/openpharma/visR/pull/224","closed",2021-06-10,2021-06-11,2021-06-11,1,"To address issue #222 ","bailliem",1,0
"Now checking for data.table in a better way","https://github.com/openpharma/visR/pull/221","closed",2021-06-10,2021-06-10,2021-06-10,0,"Addresses issue https://github.com/openpharma/visR/issues/220","timtreis",0,0
"Release/cran june2021","https://github.com/openpharma/visR/pull/223","closed",2021-06-10,2021-06-10,2021-06-10,0,"rebase issue branch","bailliem",0,0
"Replaced occurrences of T/F with TRUE/FALSE","https://github.com/openpharma/visR/pull/215","closed",2021-06-10,2021-06-10,2021-06-10,0,"Addresses issue https://github.com/openpharma/visR/issues/214","timtreis",0,0
"use benjamin hochberg method for alpha error correction","https://github.com/openpharma/simaerep/issues/8","closed",2021-06-10,2021-06-10,2021-06-10,2,"The conventional method for correcting the alpha error when performing many statistical tests is the benjamin hochberg method. It is similar to the method currently used (sorting by propbability and using a rolling count of P and FP) but is more established.

Credit: Viktor Szabados

https://www.statisticshowto.com/benjamini-hochberg-procedure/

https://cpb-us-w2.wpmucdn.com/blog.nus.edu.sg/dist/0/3425/files/2018/10/Understanding-Benjamini-Hochberg-method-2ijolq0.pdf","erblast",0,0
"flexsurvPlus: Excel Gamma distribution is incorrect","https://github.com/Roche/Global-HTA-Evidence-Open/issues/3","open",2021-06-11,2021-06-11,NA,0,"In the vignette (https://roche.github.io/Global-HTA-Evidence-Open/Rpackages/flexsurvPlus/docs/articles/Survival_analysis_theory.html) it is suggested that the following function should be used in excel:
1-((EXP(GAMMALN(rate)) * GAMMA.DIST(shape * time,rate,1,TRUE))/GAMMA(rate)

This is incorrect. The following formula should be used:
1-GAMMA.DIST(time, shape, 1/(rate),TRUE) 

Functions correct but documentation needs updating","iain-t-bennett-roche",10,10
"Retired table_caption and table_download for later release","https://github.com/openpharma/visR/pull/225","closed",2021-06-11,2021-06-11,2021-06-11,1,"","timtreis",0,0
"25 renv","https://github.com/Roche/respectables/pull/26","open",2021-06-14,2021-06-17,NA,0,"add `renv.lock` file and update `README.md`","waddella",7,4
"add cran badge to readme. minor additions to visR and data adtte docu…","https://github.com/openpharma/visR/pull/227","closed",2021-06-14,2021-06-14,2021-06-14,0,"…ment descriptions.","bailliem",0,0
"Release/cran june2021","https://github.com/openpharma/visR/pull/226","closed",2021-06-14,2021-06-14,2021-06-14,0,"Merge release branch back to develop","bailliem",0,0
"renv","https://github.com/Roche/respectables/issues/25","open",2021-06-14,2021-06-14,NA,0,"control external package dependencies with `renv`","waddella",7,7
"Update main with released cran version","https://github.com/openpharma/visR/pull/228","closed",2021-06-14,2021-06-15,2021-06-15,0,"Merging the release branch in to main, including update to readme with cran badge. 
Minor edits to readme
* remove call to library(ggplot2)
* minor updates to document visR - point out any supported s3 object class can be plotted, not just visR
* clarification around adtte dataset","bailliem",1,0
"Add build readme as action","https://github.com/openpharma/visR/issues/230","closed",2021-06-15,2021-06-15,2021-06-15,0,"Automatically build readme.rmd on push to main.

See here https://usethis.r-lib.org/reference/use_readme_rmd.html","bailliem",0,0
"Proposed feature: abbreviate variable names <= 8 chars","https://github.com/atorus-research/xportr/issues/1","open",2021-06-15,2021-06-15,NA,0,"Greetings, thanks for sharing your work with the greater pharma industry! Maybe I can help contribute: I've done some work on prepping [sas v5 transport files](https://documentation.sas.com/doc/en/pgmsascdc/9.4_3.5/movefile/n1xbwdre0giahfn11c99yjkpi2yb.htm) in my current role with Biogen. Specifically, via a pkg & shiny app that automatically abbreviates variables names <= 8.

To augment the package beyond just checking for <=8 chars, I'd be willing to contribute function called `xportr_var_rename()` or something similar that takes the `var_spec` object and performs an abbreviation algorithm, where each variable would be renamed using the least intrusive method possible (to maintain originality) to achieve <=8 chars. If you think it's within scope of the `xportr` package, please let me know!

Here's an example of my function as it works today, using some clinical variable names and again, using randomly generated sentences:
![image](https://user-images.githubusercontent.com/17878953/122124234-01781900-cdfd-11eb-88dd-2655c4e10c03.png)

![image](https://user-images.githubusercontent.com/17878953/122123854-89115800-cdfc-11eb-81b6-1806718bfcb2.png)


","AARON-CLARK",6,6
"Rebuild readme from main?","https://github.com/openpharma/visR/pull/229","closed",2021-06-15,2021-06-15,2021-06-15,0,"Don't merge. 
WIP - how do we rebuild develop readme?","bailliem",0,0
"Rebuild readme in main folder","https://github.com/openpharma/visR/pull/231","closed",2021-06-15,2021-06-15,2021-06-15,0,"rebuild readme for develop branch","bailliem",0,0
"allow to aggregate also on days on study instead of visits","https://github.com/openpharma/simaerep/issues/11","open",2021-06-16,2021-06-16,NA,0,"Using days instead of visits makes differences in time between visits expressive. Using days should be optional and an article should be drafted comparing both methods.","erblast",5,5
"visit_med75 improvement","https://github.com/openpharma/simaerep/issues/10","open",2021-06-16,2021-06-16,NA,0,"use visit_med75 to filter patient that are included in the analysis and then of those that are included use the smallest maximum patient visit. Like this the visit_med75 can be increased by a couple of visits for cases where none of the included maximum patient visits is exactly the median of all patients.","erblast",5,5
"way to share what's in openpharma","https://github.com/openpharma/openpharma.github.io/issues/2","open",2021-06-16,2021-06-17,NA,2,"add something like this? https://chaoss.community/software/#user-content-cregit

","epijim",5,4
"Add addAttributes parameter to getSvgAndTooltipdata","https://github.com/Roche/ggtips/pull/66","closed",2021-06-17,2021-06-17,2021-06-17,0,"Prevent unused argument error by adding `addAttibutes` parameter to `getSvgAndTooltipdata` and pass it explicitly to `saveAndGetTooltips`","adamgolubowski",0,0
"Add in the packages score on a risk metric","https://github.com/openpharma/visR/issues/232","open",2021-06-17,2021-06-18,NA,4,"## Idea

Could we track the 'trust worthiness' of the package as a badge? e.g.  calculate risk metric score and show it as a badge? 

## Steps

Add riskmetric to cicd - and expose as badge (if no badge service exists I guess could just write a svg via the gh action).

## Concern

Is the score designed to be used on a single package? e.g. what does '0.8' mean to an end user?

It's also easy for us to game the number by looking at the categories - although maybe that also increases the quality of the package so is ok?
","epijim",4,3
"analyze_colvars tables missing columns in html format","https://github.com/Roche/rtables/issues/207","open",2021-06-17,2021-06-17,NA,1,"```r
library(rtables)
library(dplyr)
ANL <- DM %>% mutate(value = rnorm(n()), pctdiff = runif(n()))

## toy example where we take the mean of the first variable and the
## count of >.5 for the second.
colfuns <- list(function(x) rcell(mean(x), format = ""xx.x""),
                function(x) rcell(sum(x > .5), format = ""xx""))

l <- basic_table() %>%
  split_cols_by(""ARM"") %>%
  split_cols_by_multivar(c(""value"", ""pctdiff"")) %>%
  split_rows_by(""RACE"", split_label = ""ethnicity"", split_fun = drop_split_levels) %>%
  summarize_row_groups() %>%
  analyze_colvars(afun = colfuns)

build_table(l, ANL) %>% Viewer()

```
The result looks fine in the console but in html format, the last 3 columns are missing.

![image](https://user-images.githubusercontent.com/43623360/122472190-3ebfe080-cf8e-11eb-900e-12cd43d6c34c.png)
","anajens",4,4
"Is there a way to bold row labels for html tables?","https://github.com/Roche/rtables/issues/206","open",2021-06-17,2021-06-17,NA,0,"`Viewer` has the argument `row.names.bold` which does not seem to be in use right now. I'm wondering if there is an alternative simple way to add the markup?  For example, with `** My Label **`

```r
basic_table() %>%
  split_cols_by(""ARM"") %>%
  analyze(""AGE"", show_labels = ""visible"", var_labels = ""** AGE **"") %>%
  build_table(ex_adsl)
```","anajens",4,4
"Should tiltes and footnotes be shown in html tables?","https://github.com/Roche/rtables/issues/205","open",2021-06-17,2021-06-17,NA,2,"The plain text version of this table includes the titles and footnotes, but the html version does not. Is this expected? 

```r
basic_table(title = ""ABC"", main_footer = ""XYZ"") %>%
  split_cols_by(""ARM"") %>%
  analyze(""AGE"") %>%
  build_table(ex_adsl) %>%
  Viewer()
```

![image](https://user-images.githubusercontent.com/43623360/122318034-75ddb580-ceec-11eb-9169-65046157ecd6.png)


","anajens",4,4
